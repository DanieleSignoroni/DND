package it.thera.thip.produzione.raccoltaDati;

import it.thera.thip.base.articolo.Articolo;
import it.thera.thip.base.articolo.ArticoloDatiIdent;
import it.thera.thip.base.articolo.ArticoloDatiMagaz;
import it.thera.thip.base.articolo.ArticoloVersione;
import it.thera.thip.base.azienda.Azienda;
import it.thera.thip.base.azienda.Magazzino;
import it.thera.thip.base.commessa.Commessa;
import it.thera.thip.base.dipendente.Dipendente;
import it.thera.thip.base.profilo.ThipUser;
import it.thera.thip.base.profilo.UtenteAmbienti;
import it.thera.thip.base.profilo.UtenteAzienda;
import it.thera.thip.base.risorse.Risorsa;
import it.thera.thip.base.risorse.RisorsaAppartenenza;
import it.thera.thip.base.risorse.RisorsaAppartenenzaTM;
import it.thera.thip.base.risorse.RisorsaTM;
import it.thera.thip.cs.DatiComuniEstesi;
import it.thera.thip.datiTecnici.configuratore.Configurazione;
import it.thera.thip.datiTecnici.configuratore.ConfigurazioneProxyEnh;
import it.thera.thip.datiTecnici.configuratore.ConfigurazioneRicEnh;
import it.thera.thip.datiTecnici.modpro.Attivita;
import it.thera.thip.magazzino.chiusure.CalendarioFiscale;
import it.thera.thip.magazzino.chiusure.PeriodoCalFiscale;
import it.thera.thip.magazzino.generalemag.LottiSaldiTM;
import it.thera.thip.magazzino.generalemag.Lotto;
import it.thera.thip.magazzino.generalemag.PersDatiMagazzino;
import it.thera.thip.magazzino.saldi.SaldoMagLotto;
import it.thera.thip.produzione.documento.CausaleDocProduzione;
import it.thera.thip.produzione.documento.DocumentoProduzione;
import it.thera.thip.produzione.ordese.AttivitaEsecLottiPrd;
import it.thera.thip.produzione.ordese.AttivitaEsecMateriale;
import it.thera.thip.produzione.ordese.AttivitaEsecMaterialeTM;
import it.thera.thip.produzione.ordese.AttivitaEsecProdotto;
import it.thera.thip.produzione.ordese.AttivitaEsecRisorsa;
import it.thera.thip.produzione.ordese.AttivitaEsecutiva;
import it.thera.thip.produzione.ordese.AttivitaEsecutivaTM;
import it.thera.thip.produzione.ordese.OrdineEsecutivo;
import it.thera.thip.produzione.ordese.PersDatiPrd;
import it.thera.thip.produzione.ordese.PersDatiPrdCausaleRilev;
import it.thera.thip.produzione.ordese.PersDatiPrdCausaleRilevTM;
import it.thera.thip.produzione.ordese.PersDatiPrdUtenteRilev;
import it.thera.thip.produzione.raccoltaDati.web.RilevazioneDatiProdTesDataCollector;
import it.thera.thip.qualita.controllo.DocumentoCollaudoTestata;
import it.thera.thip.qualita.controllo.DocumentoCollaudoTestataTM;

import java.lang.reflect.Array;
import java.lang.reflect.Method;
import java.math.BigDecimal;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Time;
import java.util.ArrayList;
import java.util.Hashtable;
import java.util.Iterator;
import java.util.List;
import java.util.Vector;

import com.thera.thermfw.ad.ClassADCollection;
import com.thera.thermfw.ad.ClassADCollectionManager;
import com.thera.thermfw.base.Q6Calc;
import com.thera.thermfw.base.ResourceLoader;
import com.thera.thermfw.base.SystemParam;
import com.thera.thermfw.base.TimeUtils;
import com.thera.thermfw.base.Trace;
import com.thera.thermfw.collector.BODataCollector;
import com.thera.thermfw.common.BaseComponentsCollection;
import com.thera.thermfw.common.BusinessObjectAdapter;
import com.thera.thermfw.common.ErrorMessage;
import com.thera.thermfw.persist.CachedStatement;
import com.thera.thermfw.persist.ConnectionManager;
import com.thera.thermfw.persist.Database;
import com.thera.thermfw.persist.Factory;
import com.thera.thermfw.persist.KeyHelper;
import com.thera.thermfw.persist.PersistentObject;
import com.thera.thermfw.persist.PersistentObjectCursor;
import com.thera.thermfw.persist.Proxy;
import com.thera.thermfw.security.Security;
import com.thera.thermfw.security.Authorizable;

import it.thera.thip.produzione.raccoltaDati.web.CalcolaTempo;
import it.thera.thip.produzione.raccoltaDati.web.RilevDatiPrdTSFormActionAdapter;
import it.thera.thip.produzione.raccoltaDati.web.RilevDatiPrdTSWebFormModifier;

import com.thera.thermfw.persist.CopyException;
import com.thera.thermfw.persist.Copyable;

import java.util.Map;
import java.util.HashMap;

import com.thera.thermfw.base.Utils;

/**
 * <p>Title: </p>
 * <p>Description: </p>
 * <p>Copyright: Copyright (c) 2006</p>
 * <p>Company: </p>
 * @author Mekki
 * @version 1.0
 * 12841     15/07/2010    Mekki  Aggiungere azione prossima attività
 * 12974     26/07/2010    Mekki  Ulteriori modifiche
 * 13082     24/08/2010    Mekki  Ulteriori modifiche
 * 13175     17/09/2010    Mekki  Ulteriori modifiche
 * 13264     29/09/2010    Mekki  Chiamare eliminaRisorseOccupate solo se il tipo risorsa è Macchina
 * 13434     25/10/2010    GN     Ulteriori modifiche
 * 13573     10/12/2010    Amara  Aggiungere proxy iPersDatiPrdUtenteRilev
 * 14721     12/07/2011    Amara  Modifiche per dichiarazione ridotta
 * 14722     26/08/2011    Amara  Modifiche per bolla cucita
 * 15030     21/09/2011    Amara  Modificato metodo verificaRendimento()
 * 15087     29/09/2011    GN     Modifca metodo convalida per bolle cucite
 * 15064     14/10/2011    GN     Ulteriori modifiche
 * 15217     08/11/2011    GN     In getRilevTestataBodc il dataCollector viene impostato con autoCommit a false
 * 14725     14/11/2011    Mekki  calcola quantità residua dell'attività di produzione(usata nel Monitor)
 * 15250     05/12/2011    HBT    Ulteriori modifiche
 * 15582     16/01/2012    GN     Corretto metodo getJspName per le dichiarazioni ridotte
 * 15866     22/02/2012    HBT    Ulteriori modifiche
 * 16109     26/03/2012    GN     Correzioni per gestione errori, pagina indietro e doppia UM
 * 15956     13/03/2012    OC     La classe implementa Authorizable
 * 16735     16/10/2012    HBT    Ulteriori modifiche
 * 16333     13/07/2012    OC     Copio lo stato saldo nel RilevazioneDatiProdTes
 * 17082     05/11/2012    Mekki  Cambio di signature di calcolaOreMillesimi di RilevazioneDatiProdTes
 * 17000     10/12/2012    TF     Emissione errore quando la bolla di lavorazione ha Stato diverso da 'Valido' o StatoAttività uguale a 'Immesso'
 * 16741     22/08/2012    HBT    Gestione rilevazione fermo macchina
 * 17241     14/12/2012    GN     Nei versamenti aggiunta gestione wip con lotti
 * 17550     07/03/2013    GN     Aggiunta gestione righe di scarto
 * 17768     16/04/2013    GN     Per problemi di 'lock timeout' sostituite le retrieveList con il PersistentObjectCursor
 * 17808     08/05/2013    OC     Aggiungere una nuova metodo getMatricolaDichiarante()
 * 17815     10/05/2013    AA     Modificato la descrizione : visualizza la desc. della riga prodotto
 * 17956     30/05/2013    RA     Aggiungere Join verso la tabella delle attività esecutive nel metodo getQtaRilevata
 * 18532     01/10/2013    AA     Correzioni relative alle caso di un'attività intermedia e un prodotto di scarto uguale all'intestatario dell'ordine
 * 18667     07/11/2013    AA     Correzioni per la creazione automatica del doc. prod. nel caso di rilevazione non produttivà
 * 17955     05/06/2013    OC     Modificato la signature di metodo convalidaRilevazione
 * 17963     06/06/2013    AA     Se per una risorsa umana esiste già un'attività in corso un errore forzabile è emessa
 * 18536     28/10/2013    AA     Modificato la gestione dei righe Versamenti & Prelievi
 * 19148     28/02/2014    TF     Modificazione della gestione del salvamento dei documenti di produzione
 * 19592     11/04/2014    AA     Copio lo stato saldo (e le note) nel RilevazioneDatiProdTes (caso di ridotta)
 * 19705     05/05/2014    Mekki  Correzione relativo alla creaRigheRilevazioneMateriali per un materiale non configurato
 * 19758     08/05/2014    TF     Aggiunta dei attributi iOreRilevate e iMinutiRilevati
 * 19887     09/06/2014    TF     Modifcare il metodo che carica la combo affinchè recuperi anche le risorse secondarie.
 * 20804     06/01/2015    TF     Correzione nel caso di articolo lotto generato da ordine
 * 20491     26/01/2015    Mekki  Agguinto il metodi verificaCondizionePrelievi e verificaCondizioneVersamenti
 * 20927     27/01/2015    TF     Mostrare anche le attività legate alle relative risorse secondarie
 * 21081     24/02/2015    Mekki  Bolla cucita : restituire tutti gli errori in una volta sola e non uno ad uno
 * 22005     04/09/2015    TF     Aggiunto metodo getQtaScartataAtv
 * 22630     03/12/2015    AA     Gestione rilevazione nel caso di bolla raggruppata
 * 22890     26/01/2016    TF     Controllare se la bolla o il relativo ordine sono completati
 * 23541     12/05/2016    AA     Modificato il metodo raggruppaListaAttivita
 * 23542     13/05/2016    AA     Corretto la ricerca della rilev. in corsa relativa alla macchina corrente
 * 23584     13/05/2016    TF     Forzare la chiusura del persistentObjectCursor
 * 24120     06/09/2016    AA     Genera automaticamente del doc. produzione se la rilevazione è di 'Fermo' ed ha la generazione automatica
 * 24437     04/11/2016    Mekki  Proporre solo le risorse in stato valido
 * 24177     16/11/2016    TF     Prelevare contestualmente all'avanzamento e proporre i materiali da prelevare
 * 24983     25/04/2017    Mekki  I campi del tempo devono essere lasciati vuoti
 * 25810     24/05/2017    Mekki  Calcolare correttamente le ore rilevate (oreMillesimi) anche nel caso di ore o minuti non valorizzate
 * 19702     13/06/2017    Jackal Aggiunti ganci per agevolare personalizzazioni
 * 25930     13/06/2017    TF     Nelle righe di prelievo quando l'articolo è gestito a lotti e la quantità è uguale a zero il lotto non deve essere obbligatorio.
 * 26028     04/07/2017    TF     Modifica nel Metodo cercaRilevazioneInCorso
 * 26093     11/07/2017	   MBO    Modifica nella condizione di prelievi
 * 26118     20/07/2017    TF     Nel caso delle bolle cucite la riga versamento venga creata anche quando la quantità è zero
 * 26120     07/08/2017    RM     Modifica nel metodo verificaCondizionePrelievi().
 * 27124     14/03/2018    Mekki  Controlla, nel caso di 'Ripresa', l'esistenza una rilevazione sospesa
 * 25921     05/04/2018    Mekki  Modifica di HashMap delle quantità per accettare il null.
 * 27421     08/05/2018    Mekki  Modifica di Hashtable a HashMap
 * 27463     25/05/2018    Mekki  Il controllo non viene effettuato poichè la causale non è abilitata ai versamenti
 * 27657     02/07/2018    Mekki  Corregere im metodo checkQuantita
 * 27778     02/08/2018    Houda  Aggiunto metodo Aggiunto metodo e modifica il metodo SaveSospensioneFine
 * 29505     18/06/2019    RA	  Corregere in metodo creaRigheRilevazioneVersamenti
 * 29435	 05/07/2019	   TJ	  Memorizzare le note nelle istruzioni di inizio, Sospensione, Ripresa e Fine.
 * 29945     02/10/2019   Bsondes Modifica metodo getRisorsaPrincipale(). 
 * 30080	 28/10/2019	   TJ 	  Gestire i secondi in modalità ridotta
 * 30104	 01/11/2019	   TJ	  Controlla  la proposizione automatica dei lotti di produzione in ArticoloDatiMagaz e PersDatiMagazzino
 * 30289     02/11/2019    TJ	  Check per l'attività esecutivo chiuso
 * 30440     23/12/2019    TJ	  Aggiungi l'attributo DataFine
 * 30509     15/01/2020	   RA	  Corregere il metodo saveNuovoRilevazione per non creare RigheRilevazioneVersamenti nel fase di prelievo
 * 30621     31/01/2020    TJ	  Riempie il campo della data rilevazione con la DataFine in modialità ridotta
 * 30572	 30/01/2020	   TJ	  Gestione dell'commessa
 * 30900	 05/05/2020    TJ	  Aggiungi l'attributo StampaBolla
 * 31183     06/05/2020    TJ	  Facilitare la ridefinizione dei metodi statici
 * 30965     16/04/2020   Bsondes 6 Decimali. 
 * 32334	 04/12/2020	   TJ	  Gestire il flag isOreUomoRsrSec()
 * 32846	 04/02/2021	   TJ	  Filtra l'elenco di prodotti / materiali con stato valido
 * 32903	 11/02/2021	   TJ	  Quando il tipo timbratura INIZIO o RIPRESA nessun controllo effettuato su IdLottoProdotto
 * 33053	 04/03/2021	   TJ	  Non eseguire il controllo di checkIdLotto Prodotto in prelievi
 * 33416     27/04/2021    Mekki  Corrggere metodo leggiBollaRaggruppata
 * 33517	 06/05/2021	   TJ	  Gestione dell'configurazione
 * 33541	 28/05/2021	   TJ	  Segnalare errore se  nè le ore nè i minuti saranno valorizzati o se entrmbi saranno zero in dichiarazioni non produttive o dichiarazione produttive
 * 34100	 17/09/2021    TJ	  Sostituire le retrieveList con dei PersistentObjectCursor nel recupero del lotti e prossima attivita
 * 34773	 08/12/2021    TJ	  Un controllo bloccante nel caso in cui l'operatore inserisca il codice di una macchina che non appartiene alla risorsa specificata sull'attività esecutiva.
 * 32543	 16/02/2022	   TJ	  Gestisci i secondiRilevati nel calcolaTempo.
 * 35415	 18/03/2022	   TJ	  Commentato il blocco di codice di checkGiacenzaNegativaPerLotti
 * 35514     21/03/2022    Mekki  Correggere metodo haLottoProdotto 
 * 35799     14/05/2022    Mekki  Correggere metodo cercaRilevazioneIncompleta
 * 36358	 02/08/2022	   TJ	  Nei documenti di produzione di solo versamento (quindi, senza avanzamento, prelievi e risorse) proporre la quantità residua di versamento, invece, di quella dell'attività.
 * 36505	 08/09/2022	   TJ	  Salva listaAttivita di bolla cucita
 * 38345	 06/04/2023	   TJ	  Aggiungi checkDataFine()
 * 38436    18/04/2023    Mekki   Correggere gestione errori
 * 39515     24/08/2023    RA	  Aggiunto checkIdOperatore
 * 39680	 21/09/2023	   TJ	  Ricalcolo quantità
 * 40257	 06/11/2023	   TJ	  Pulire righe nel caso in cui si verifica l'errore sul rendimento
 * 40438	 22/11/2023	   TJ	  Mostra solo attività assegnate
 * 40485	 05/12/2023	   TJ	  Alcuni messaggi di avviso possono essere configurati come bloccanti (severità uguale ad 'Errore')
 * 40762     05/01/2024    RA	  Eseguire la free del cursor nel finally
 * 41628	 12/03/2024	   TJ	  Rendere bloccante i seguenti errori THIP30T233 , THIP30T260
 * 42153	 26/04/2024	   Mekki  Modifica metodo verificaCondizionePrelievi()
 * 42501	 03/06/2024	   Mekki  Modifica metodo verificaCondizionePrelievi()
 * 42131	 16/07/2024	   Jackal Aggiunti ganci per personalizzazioni
 * 42942	 05/08/2024	   TJ	  Aggiungi checkMateriali()
 */

//public class RilevDatiPrdTS extends BusinessObjectAdapter { // Fix 15956
public class RilevDatiPrdTS extends BusinessObjectAdapter implements Authorizable { // Fix 15956

  public static final String RES_FILE = "it.thera.thip.produzione.raccoltaDati.resources.RilevDatiPrdTS";
  
  protected static RilevDatiPrdTS iRilevDatiPrdTSInternal = (RilevDatiPrdTS) Factory.createObject(RilevDatiPrdTS.class); //Fix 31183

  //Fix 14725 --inizio
  //Fix 17956 inizio
  protected static String QTA_RILEVATA =
      "SELECT  SUM(RDP." + RilevazioneDatiProdTesTM.QUANTITA + "), SUM(RDP." +
      RilevazioneDatiProdTesTM.QTA_SEC + ")" +
      " FROM " + RilevazioneDatiProdTesTM.TABLE_NAME + " RDP " +
      " LEFT OUTER JOIN " + AttivitaEsecutivaTM.TABLE_NAME + " ATV " +
      " ON RDP." + RilevazioneDatiProdTesTM.ID_AZIENDA + "= ATV." + AttivitaEsecutivaTM.ID_AZIENDA +
      " AND RDP." + RilevazioneDatiProdTesTM.R_ANNO_ORDINE + "= ATV." + AttivitaEsecutivaTM.ID_ANNO_ORD +
      " AND RDP." + RilevazioneDatiProdTesTM.R_NUMERO_ORD + "= ATV." + AttivitaEsecutivaTM.ID_NUMERO_ORD +
      " AND RDP." + RilevazioneDatiProdTesTM.R_RIGA_ATTIVITA + "= ATV." + AttivitaEsecutivaTM.ID_RIGA_ATTIVITA +
      " WHERE " +
      "RDP." + RilevazioneDatiProdTesTM.ID_AZIENDA + " = ? AND " +
      "RDP." + RilevazioneDatiProdTesTM.NUM_RITORNO + " = ? AND " +
      "ATV." + AttivitaEsecutivaTM.SOG_COLLAUDO + " = 'N' AND " +
      "RDP." + RilevazioneDatiProdTesTM.STATO + " !='" + DatiComuniEstesi.ANNULLATO + "' AND " +
      "RDP." + RilevazioneDatiProdTesTM.STATO_RIL + " <> '" + RilevazioneDatiProdTes.CONVALIDATA + "'";
  		//Fix 17956 fine

  protected static CachedStatement SommaQtaRilevataStmt = new CachedStatement(QTA_RILEVATA);
  //Fix 14725 --fine
  //Fix 15250 inizio
  protected static String selectQtaLottoiSaldi = "SELECT lottiSaldi."+LottiSaldiTM.QTA_GIAC_PRM+" FROM "+LottiSaldiTM.TABLE_NAME+" lottiSaldi WHERE "+
                                "lottiSaldi."+LottiSaldiTM.ID_AZIENDA+ " = ? AND lottiSaldi."+LottiSaldiTM.ID_ARTICOLO+" = ? AND "+
                                "lottiSaldi."+LottiSaldiTM.ID_LOTTO+" = ? AND lottiSaldi."+LottiSaldiTM.ID_MAGAZZINO+" = ? AND "+
                                "lottiSaldi."+LottiSaldiTM.ID_CONFIG+" = ? AND lottiSaldi."+LottiSaldiTM.ID_VERSIONE+" = ? ";

  protected static CachedStatement selectQtaLottoiSaldiStmt = new CachedStatement(selectQtaLottoiSaldi);
  //Fix 15250 fine
  //Fix 19887 inizio
  public static final String RISORSE_APP_VIEW = SystemParam.getSchema("THIP") + "RISORSE_APP_V34";
  protected static final String TROVA_RSR =
      	"SELECT * " +
        " FROM " + RISORSE_APP_VIEW +
        " WHERE " + RisorsaTM.ID_AZIENDA + " = ?" +
        " AND "   + RisorsaTM.TIPO_RISORSA + " = ?" +
        " AND "   + RisorsaTM.LIVELLO_RISORSA + " = '" + Risorsa.MATRICOLA + "'" +
        " AND "   + RisorsaTM.STATO + " = '" + DatiComuniEstesi.VALIDO + "'" + //Fix 24437
        " AND "   + RisorsaAppartenenzaTM.ID_RISORSA_APP + " = ?" +
  			" ORDER BY " + RisorsaTM.ID_RISORSA;
  protected static CachedStatement cTrovaRsr = new CachedStatement(TROVA_RSR);
  //Fix 19887 fine
  
  //Fix 36358 -- Inizio
  protected static String QTA_RILEVATA_PROD =
      "SELECT  SUM(RDPV." + RilevazioneDatiProdVrsTM.QTA_VRS_UM_PRM + "), SUM(RDPV." + RilevazioneDatiProdVrsTM.QTA_VRS_UM_SEC + ")" +
      " FROM " + RilevazioneDatiProdVrsTM.TABLE_NAME + " RDPV " +     
      " LEFT OUTER JOIN " + RilevazioneDatiProdTesTM.TABLE_NAME + " RDP " +      
      " ON ( RDPV." + RilevazioneDatiProdVrsTM.ID_AZIENDA + "= RDP." + RilevazioneDatiProdTesTM.ID_AZIENDA +
      " AND RDPV." + RilevazioneDatiProdVrsTM.R_ANNO_ORDINE + "= RDP." + RilevazioneDatiProdTesTM.R_ANNO_ORDINE +
      " AND RDPV." + RilevazioneDatiProdVrsTM.R_NUMERO_ORD + "= RDP." + RilevazioneDatiProdTesTM.R_NUMERO_ORD +
      " AND RDPV." + RilevazioneDatiProdVrsTM.R_RIGA_ATTIVITA + "= RDP." + RilevazioneDatiProdTesTM.R_RIGA_ATTIVITA +
      " ) LEFT OUTER JOIN " + AttivitaEsecutivaTM.TABLE_NAME + " ATV " +
      " ON ( RDPV." + RilevazioneDatiProdVrsTM.ID_AZIENDA + "= ATV." + AttivitaEsecutivaTM.ID_AZIENDA +
      " AND RDPV." + RilevazioneDatiProdVrsTM.R_ANNO_ORDINE + "= ATV." + AttivitaEsecutivaTM.ID_ANNO_ORD +
      " AND RDPV." + RilevazioneDatiProdVrsTM.R_NUMERO_ORD + "= ATV." + AttivitaEsecutivaTM.ID_NUMERO_ORD +
      " AND RDPV." + RilevazioneDatiProdVrsTM.R_RIGA_ATTIVITA + "= ATV." + AttivitaEsecutivaTM.ID_RIGA_ATTIVITA +
      " ) WHERE " +
      "RDPV." + RilevazioneDatiProdVrsTM.ID_AZIENDA + " = ? AND " +
      "RDP." + RilevazioneDatiProdTesTM.NUM_RITORNO + " = ? AND " +
      "ATV." + AttivitaEsecutivaTM.SOG_COLLAUDO + " = 'N' AND " +
      "RDPV." + RilevazioneDatiProdVrsTM.STATO + " !='" + DatiComuniEstesi.ANNULLATO + "' AND " +
      "RDP." + RilevazioneDatiProdTesTM.STATO + " !='" + DatiComuniEstesi.ANNULLATO + "' AND " +
      "RDP." + RilevazioneDatiProdTesTM.STATO_RIL + " <> '" + RilevazioneDatiProdTes.CONVALIDATA + "'";

  protected static CachedStatement SommaQtaRilevataProdStmt = new CachedStatement(QTA_RILEVATA_PROD);
  //Fix 36358 -- Fine
  
  protected String iBollaLavorazione;
  protected char iTipoTimbratura = RilevazioneDatiProdRig.INIZIO;
  protected boolean iSospendiRilevInCorso = false;
  protected boolean iRiprendiRilevSospesa = false;
  protected String iNote;
  protected java.sql.Time iOraInizio;
  protected java.sql.Time iOraFine;
  protected BigDecimal iQuantita;
  protected BigDecimal iQuantitaSec; //Fix 16109
  protected BigDecimal iQtaScarto;
  protected BigDecimal iQtaScartoSec; //Fix 16109
  protected char iSaldo = DocumentoProduzione.AUTOMATICO;

  protected String iIdMacchina; //Fix 12841
  protected RilevazioneDatiProdTes iRilevazioneTesFine = null; //Fix 12841
  protected java.sql.Time iTempo; //Fix 14721
  //Fix 19758 inizio
  protected static final BigDecimal ZERO = new BigDecimal("0");
  protected static final BigDecimal CINQUANTANOVE = new BigDecimal("59");
  protected static final BigDecimal MENOCINQUANTANOVE = new BigDecimal("-59");
  protected BigDecimal iOreRilevate; // = new BigDecimal("0"); //Fix 24983
  protected BigDecimal iMinutiRilevati; // = new BigDecimal("0"); //Fix 24983
  protected BigDecimal iSecondiRilevati; //Fix 30080 
  //Fix 19758 fine
  
  protected String iStampaBolla = "N"; //Fix 30900
  
  protected boolean iInPrelieviJsp = false; //Fix 33053
  
  //Fix 30440 inizio
  /**
     * Attributo iDataFine
     */
  protected java.sql.Date iDataFine;
  //Fix 30440 fine

  /**
   * Proxy Azienda.
   */
  protected Proxy iAzienda = new Proxy(Azienda.class);

  /**
   * Attributo iOperatore
   */
  protected Proxy iOperatore = new Proxy(it.thera.thip.base.dipendente.Dipendente.class);

  /**
   * Attributo iAttivitaEsecutiva.
   */
  protected Proxy iAttivitaEsecutiva = new Proxy(AttivitaEsecutiva.class);

  /**
   * Attributo iArticolo
   */
  protected Proxy iArticolo = new Proxy(Articolo.class);

  /**
   * Attributo iPersDatiPrdCausaleRilev
   */
  protected Proxy iPersDatiPrdCausaleRilev = new Proxy(it.thera.thip.produzione.ordese.PersDatiPrdCausaleRilev.class);

  /**
   * Attributo iRisorsa
   */
  protected Proxy iRisorsa = new Proxy(it.thera.thip.base.risorse.Risorsa.class);

  //Fix 12841 --inizio
  /**
   * Attributo iListaAttivita
   */
  protected Proxy iListaAttivita = new Proxy(it.thera.thip.produzione.raccoltaDati.ListaAttivita.class);
  //Fix 12841 --fine

  //Fix 13573 --inizio
  /**
   * Attributo iPersDatiPrdUtenteRilev
   */
  protected Proxy iPersDatiPrdUtenteRilev = new Proxy(it.thera.thip.produzione.ordese.PersDatiPrdUtenteRilev.class);
  //Fix 13573 --fine
  
  /**
   * Attributo iCommessa
   */
  protected Proxy iCommessa = new Proxy(it.thera.thip.base.commessa.Commessa.class);//Fix 30572
  
  /**
   * Attributo iConfigurazione
   */
  protected Proxy iConfigurazione = new Proxy(it.thera.thip.datiTecnici.configuratore.Configurazione.class);//Fix 33517
  
  //Fix 14721 Inizio
  //Fix 18536 inizio
  /*
  protected Proxy iMateriale1 = new Proxy(Articolo.class);
  protected Proxy iMaterialeVersione1 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iConfigurazione1 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLotto1 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoPrl1 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaPrlUmPrm1;
  protected BigDecimal iQtaPrlUmSec1;

  protected Proxy iMateriale2 = new Proxy(Articolo.class);
  protected Proxy iMaterialeVersione2 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iConfigurazione2 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLotto2 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoPrl2 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaPrlUmPrm2;
  protected BigDecimal iQtaPrlUmSec2;

  protected Proxy iMateriale3 = new Proxy(Articolo.class);
  protected Proxy iMaterialeVersione3 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iConfigurazione3 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLotto3 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoPrl3 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaPrlUmPrm3;
  protected BigDecimal iQtaPrlUmSec3;

  protected Proxy iMateriale4 = new Proxy(Articolo.class);
  protected Proxy iMaterialeVersione4 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iConfigurazione4 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLotto4 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoPrl4 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaPrlUmPrm4;
  protected BigDecimal iQtaPrlUmSec4;

  protected Proxy iMateriale5 = new Proxy(Articolo.class);
  protected Proxy iMaterialeVersione5 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iConfigurazione5 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLotto5 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoPrl5 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaPrlUmPrm5;
  protected BigDecimal iQtaPrlUmSec5;

  protected Proxy iMateriale6 = new Proxy(Articolo.class);
  protected Proxy iMaterialeVersione6 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iConfigurazione6 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLotto6 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoPrl6 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaPrlUmPrm6;
  protected BigDecimal iQtaPrlUmSec6;

  protected Proxy iMateriale7 = new Proxy(Articolo.class);
  protected Proxy iMaterialeVersione7 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iConfigurazione7 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLotto7 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoPrl7 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaPrlUmPrm7;
  protected BigDecimal iQtaPrlUmSec7;

  protected Proxy iMateriale8 = new Proxy(Articolo.class);
  protected Proxy iMaterialeVersione8 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iConfigurazione8 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLotto8 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoPrl8 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaPrlUmPrm8;
  protected BigDecimal iQtaPrlUmSec8;

  protected Proxy iMateriale9 = new Proxy(Articolo.class);
  protected Proxy iMaterialeVersione9 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iConfigurazione9 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLotto9 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoPrl9 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaPrlUmPrm9;
  protected BigDecimal iQtaPrlUmSec9;

  protected Proxy iMateriale10 = new Proxy(Articolo.class);
  protected Proxy iMaterialeVersione10 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iConfigurazione10 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLotto10 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoPrl10 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaPrlUmPrm10;
  protected BigDecimal iQtaPrlUmSec10;

  protected Proxy iMateriale11 = new Proxy(Articolo.class);
  protected Proxy iMaterialeVersione11 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iConfigurazione11 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLotto11 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoPrl11 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaPrlUmPrm11;
  protected BigDecimal iQtaPrlUmSec11;

  protected Proxy iMateriale12 = new Proxy(Articolo.class);
  protected Proxy iMaterialeVersione12 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iConfigurazione12 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLotto12 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoPrl12 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaPrlUmPrm12;
  protected BigDecimal iQtaPrlUmSec12;

  protected Proxy iMateriale13 = new Proxy(Articolo.class);
  protected Proxy iMaterialeVersione13 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iConfigurazione13 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLotto13 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoPrl13 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaPrlUmPrm13;
  protected BigDecimal iQtaPrlUmSec13;

  protected Proxy iMateriale14 = new Proxy(Articolo.class);
  protected Proxy iMaterialeVersione14 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iConfigurazione14 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLotto14 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoPrl14 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaPrlUmPrm14;
  protected BigDecimal iQtaPrlUmSec14;

  protected Proxy iMateriale15 = new Proxy(Articolo.class);
  protected Proxy iMaterialeVersione15 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iConfigurazione15 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLotto15 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoPrl15 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaPrlUmPrm15;
  protected BigDecimal iQtaPrlUmSec15;

  protected Proxy iMateriale16 = new Proxy(Articolo.class);
  protected Proxy iMaterialeVersione16 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iConfigurazione16 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLotto16 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoPrl16 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaPrlUmPrm16;
  protected BigDecimal iQtaPrlUmSec16;

  protected Proxy iMateriale17 = new Proxy(Articolo.class);
  protected Proxy iMaterialeVersione17 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iConfigurazione17 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLotto17 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoPrl17 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaPrlUmPrm17;
  protected BigDecimal iQtaPrlUmSec17;

  protected Proxy iMateriale18 = new Proxy(Articolo.class);
  protected Proxy iMaterialeVersione18 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iConfigurazione18 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLotto18 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoPrl18 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaPrlUmPrm18;
  protected BigDecimal iQtaPrlUmSec18;

  protected Proxy iMateriale19 = new Proxy(Articolo.class);
  protected Proxy iMaterialeVersione19 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iConfigurazione19 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLotto19 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoPrl19 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaPrlUmPrm19;
  protected BigDecimal iQtaPrlUmSec19;

  protected Proxy iMateriale20 = new Proxy(Articolo.class);
  protected Proxy iMaterialeVersione20 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iConfigurazione20 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLotto20 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoPrl20 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaPrlUmPrm20;
  protected BigDecimal iQtaPrlUmSec20;
  */

  /*
  protected Proxy iProdotto1 = new Proxy(Articolo.class);
  protected String iDescrizioneProdotto1; //Fix 17815
  protected Proxy iProdottoVersione1 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iProdottoConfig1 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLottoProdotto1 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoVrs1 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaVrsUmPrm1;
  protected BigDecimal iQtaVrsUmSec1;
  protected BigDecimal iQtaScartoUmPrm1;
  protected BigDecimal iQtaScartoUmSec1;
  protected String iIdAnnoOrdine1; //Fix 14722
  protected String iIdNumeroOrdine1; //Fix 14722
  protected Integer iIdRigaAttivita1; //Fix 14722

  protected Proxy iProdotto2 = new Proxy(Articolo.class);
  protected String iDescrizioneProdotto2; //Fix 17815
  protected Proxy iProdottoVersione2 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iProdottoConfig2 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLottoProdotto2 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoVrs2 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaVrsUmPrm2;
  protected BigDecimal iQtaVrsUmSec2;
  protected BigDecimal iQtaScartoUmPrm2;
  protected BigDecimal iQtaScartoUmSec2;
  protected String iIdAnnoOrdine2; //Fix 14722
  protected String iIdNumeroOrdine2; //Fix 14722
  protected Integer iIdRigaAttivita2; //Fix 14722

  protected Proxy iProdotto3 = new Proxy(Articolo.class);
  protected String iDescrizioneProdotto3; //Fix 17815
  protected Proxy iProdottoVersione3 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iProdottoConfig3 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLottoProdotto3 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoVrs3 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaVrsUmPrm3;
  protected BigDecimal iQtaVrsUmSec3;
  protected BigDecimal iQtaScartoUmPrm3;
  protected BigDecimal iQtaScartoUmSec3;
  protected String iIdAnnoOrdine3; //Fix 14722
  protected String iIdNumeroOrdine3; //Fix 14722
  protected Integer iIdRigaAttivita3; //Fix 14722

  protected Proxy iProdotto4 = new Proxy(Articolo.class);
  protected String iDescrizioneProdotto4; //Fix 17815
  protected Proxy iProdottoVersione4 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iProdottoConfig4 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLottoProdotto4 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoVrs4 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaVrsUmPrm4;
  protected BigDecimal iQtaVrsUmSec4;
  protected BigDecimal iQtaScartoUmPrm4;
  protected BigDecimal iQtaScartoUmSec4;
  protected String iIdAnnoOrdine4; //Fix 14722
  protected String iIdNumeroOrdine4; //Fix 14722
  protected Integer iIdRigaAttivita4; //Fix 14722

  protected Proxy iProdotto5 = new Proxy(Articolo.class);
  protected String iDescrizioneProdotto5; //Fix 17815
  protected Proxy iProdottoVersione5 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iProdottoConfig5 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLottoProdotto5 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoVrs5 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaVrsUmPrm5;
  protected BigDecimal iQtaVrsUmSec5;
  protected BigDecimal iQtaScartoUmPrm5;
  protected BigDecimal iQtaScartoUmSec5;
  protected String iIdAnnoOrdine5; //Fix 14722
  protected String iIdNumeroOrdine5; //Fix 14722
  protected Integer iIdRigaAttivita5; //Fix 14722

  protected Proxy iProdotto6 = new Proxy(Articolo.class);
  protected String iDescrizioneProdotto6; //Fix 17815
  protected Proxy iProdottoVersione6 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iProdottoConfig6 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLottoProdotto6 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoVrs6 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaVrsUmPrm6;
  protected BigDecimal iQtaVrsUmSec6;
  protected BigDecimal iQtaScartoUmPrm6;
  protected BigDecimal iQtaScartoUmSec6;
  protected String iIdAnnoOrdine6; //Fix 14722
  protected String iIdNumeroOrdine6; //Fix 14722
  protected Integer iIdRigaAttivita6; //Fix 14722

  protected Proxy iProdotto7 = new Proxy(Articolo.class);
  protected String iDescrizioneProdotto7; //Fix 17815
  protected Proxy iProdottoVersione7 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iProdottoConfig7 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLottoProdotto7 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoVrs7 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaVrsUmPrm7;
  protected BigDecimal iQtaVrsUmSec7;
  protected BigDecimal iQtaScartoUmPrm7;
  protected BigDecimal iQtaScartoUmSec7;
  protected String iIdAnnoOrdine7; //Fix 14722
  protected String iIdNumeroOrdine7; //Fix 14722
  protected Integer iIdRigaAttivita7; //Fix 14722

  protected Proxy iProdotto8 = new Proxy(Articolo.class);
  protected String iDescrizioneProdotto8; //Fix 17815
  protected Proxy iProdottoVersione8 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iProdottoConfig8 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLottoProdotto8 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoVrs8 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaVrsUmPrm8;
  protected BigDecimal iQtaVrsUmSec8;
  protected BigDecimal iQtaScartoUmPrm8;
  protected BigDecimal iQtaScartoUmSec8;
  protected String iIdAnnoOrdine8; //Fix 14722
  protected String iIdNumeroOrdine8; //Fix 14722
  protected Integer iIdRigaAttivita8; //Fix 14722

  protected Proxy iProdotto9 = new Proxy(Articolo.class);
  protected String iDescrizioneProdotto9; //Fix 17815
  protected Proxy iProdottoVersione9 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iProdottoConfig9 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLottoProdotto9 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoVrs9 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaVrsUmPrm9;
  protected BigDecimal iQtaVrsUmSec9;
  protected BigDecimal iQtaScartoUmPrm9;
  protected BigDecimal iQtaScartoUmSec9;
  protected String iIdAnnoOrdine9; //Fix 14722
  protected String iIdNumeroOrdine9; //Fix 14722
  protected Integer iIdRigaAttivita9; //Fix 14722

  protected Proxy iProdotto10 = new Proxy(Articolo.class);
  protected String iDescrizioneProdotto10; //Fix 17815
  protected Proxy iProdottoVersione10 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iProdottoConfig10 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLottoProdotto10 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoVrs10 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaVrsUmPrm10;
  protected BigDecimal iQtaVrsUmSec10;
  protected BigDecimal iQtaScartoUmPrm10;
  protected BigDecimal iQtaScartoUmSec10;
  protected String iIdAnnoOrdine10; //Fix 14722
  protected String iIdNumeroOrdine10; //Fix 14722
  protected Integer iIdRigaAttivita10; //Fix 14722

  protected Proxy iProdotto11 = new Proxy(Articolo.class);
  protected String iDescrizioneProdotto11; //Fix 17815
  protected Proxy iProdottoVersione11 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iProdottoConfig11 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLottoProdotto11 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoVrs11 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaVrsUmPrm11;
  protected BigDecimal iQtaVrsUmSec11;
  protected BigDecimal iQtaScartoUmPrm11;
  protected BigDecimal iQtaScartoUmSec11;
  protected String iIdAnnoOrdine11; //Fix 14722
  protected String iIdNumeroOrdine11; //Fix 14722
  protected Integer iIdRigaAttivita11; //Fix 14722

  protected Proxy iProdotto12 = new Proxy(Articolo.class);
  protected String iDescrizioneProdotto12; //Fix 17815
  protected Proxy iProdottoVersione12 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iProdottoConfig12 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLottoProdotto12 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoVrs12 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaVrsUmPrm12;
  protected BigDecimal iQtaVrsUmSec12;
  protected BigDecimal iQtaScartoUmPrm12;
  protected BigDecimal iQtaScartoUmSec12;
  protected String iIdAnnoOrdine12; //Fix 14722
  protected String iIdNumeroOrdine12; //Fix 14722
  protected Integer iIdRigaAttivita12; //Fix 14722

  protected Proxy iProdotto13 = new Proxy(Articolo.class);
  protected String iDescrizioneProdotto13; //Fix 17815
  protected Proxy iProdottoVersione13 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iProdottoConfig13 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLottoProdotto13 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoVrs13 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaVrsUmPrm13;
  protected BigDecimal iQtaVrsUmSec13;
  protected BigDecimal iQtaScartoUmPrm13;
  protected BigDecimal iQtaScartoUmSec13;
  protected String iIdAnnoOrdine13; //Fix 14722
  protected String iIdNumeroOrdine13; //Fix 14722
  protected Integer iIdRigaAttivita13; //Fix 14722

  protected Proxy iProdotto14 = new Proxy(Articolo.class);
  protected String iDescrizioneProdotto14; //Fix 17815
  protected Proxy iProdottoVersione14 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iProdottoConfig14 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLottoProdotto14 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoVrs14 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaVrsUmPrm14;
  protected BigDecimal iQtaVrsUmSec14;
  protected BigDecimal iQtaScartoUmPrm14;
  protected BigDecimal iQtaScartoUmSec14;
  protected String iIdAnnoOrdine14; //Fix 14722
  protected String iIdNumeroOrdine14; //Fix 14722
  protected Integer iIdRigaAttivita14; //Fix 14722

  protected Proxy iProdotto15 = new Proxy(Articolo.class);
  protected String iDescrizioneProdotto15; //Fix 17815
  protected Proxy iProdottoVersione15 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iProdottoConfig15 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLottoProdotto15 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoVrs15 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaVrsUmPrm15;
  protected BigDecimal iQtaVrsUmSec15;
  protected BigDecimal iQtaScartoUmPrm15;
  protected BigDecimal iQtaScartoUmSec15;
  protected String iIdAnnoOrdine15; //Fix 14722
  protected String iIdNumeroOrdine15; //Fix 14722
  protected Integer iIdRigaAttivita15; //Fix 14722

  protected Proxy iProdotto16 = new Proxy(Articolo.class);
  protected String iDescrizioneProdotto16; //Fix 17815
  protected Proxy iProdottoVersione16 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iProdottoConfig16 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLottoProdotto16 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoVrs16 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaVrsUmPrm16;
  protected BigDecimal iQtaVrsUmSec16;
  protected BigDecimal iQtaScartoUmPrm16;
  protected BigDecimal iQtaScartoUmSec16;
  protected String iIdAnnoOrdine16; //Fix 14722
  protected String iIdNumeroOrdine16; //Fix 14722
  protected Integer iIdRigaAttivita16; //Fix 14722

  protected Proxy iProdotto17 = new Proxy(Articolo.class);
  protected String iDescrizioneProdotto17; //Fix 17815
  protected Proxy iProdottoVersione17 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iProdottoConfig17 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLottoProdotto17 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoVrs17 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaVrsUmPrm17;
  protected BigDecimal iQtaVrsUmSec17;
  protected BigDecimal iQtaScartoUmPrm17;
  protected BigDecimal iQtaScartoUmSec17;
  protected String iIdAnnoOrdine17; //Fix 14722
  protected String iIdNumeroOrdine17; //Fix 14722
  protected Integer iIdRigaAttivita17; //Fix 14722

  protected Proxy iProdotto18 = new Proxy(Articolo.class);
  protected String iDescrizioneProdotto18; //Fix 17815
  protected Proxy iProdottoVersione18 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iProdottoConfig18 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLottoProdotto18 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoVrs18 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaVrsUmPrm18;
  protected BigDecimal iQtaVrsUmSec18;
  protected BigDecimal iQtaScartoUmPrm18;
  protected BigDecimal iQtaScartoUmSec18;
  protected String iIdAnnoOrdine18; //Fix 14722
  protected String iIdNumeroOrdine18; //Fix 14722
  protected Integer iIdRigaAttivita18; //Fix 14722

  protected Proxy iProdotto19 = new Proxy(Articolo.class);
  protected String iDescrizioneProdotto19; //Fix 17815
  protected Proxy iProdottoVersione19 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected ConfigurazioneProxyEnh iProdottoConfig19 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLottoProdotto19 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoVrs19 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaVrsUmPrm19;
  protected BigDecimal iQtaVrsUmSec19;
  protected BigDecimal iQtaScartoUmPrm19;
  protected BigDecimal iQtaScartoUmSec19;
  protected String iIdAnnoOrdine19; //Fix 14722
  protected String iIdNumeroOrdine19; //Fix 14722
  protected Integer iIdRigaAttivita19; //Fix 14722

  protected Proxy iProdotto20 = new Proxy(Articolo.class);
  protected String iDescrizioneProdotto20; //Fix 17815
  protected Proxy iProdottoVersione20 = new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
  protected  iProdottoConfig20 = new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
  protected Proxy iLottoProdotto20 = new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
  protected Proxy iMagazzinoVrs20 = new Proxy(it.thera.thip.base.azienda.Magazzino.class);
  protected BigDecimal iQtaVrsUmPrm20;
  protected BigDecimal iQtaVrsUmSec20;
  protected BigDecimal iQtaScartoUmPrm20;
  protected BigDecimal iQtaScartoUmSec20;
  protected String iIdAnnoOrdine20; //Fix 14722
  protected String iIdNumeroOrdine20; //Fix 14722
  protected Integer iIdRigaAttivita20; //Fix 14722
  */

  protected Map iMateriale = new Hashtable();
  protected Map iDescrizioneMateriale = new Hashtable();
  protected Map iMaterialeVersione = new Hashtable() ;
  protected Map iMaterialeConfig = new Hashtable();
  protected Map iLottoMateriale = new Hashtable();
  protected Map iMagazzinoPrl = new Hashtable();
  //protected Map iQtaPrlUmPrm = new Hashtable(); //Fix 27421
  //protected Map iQtaPrlUmSec = new Hashtable(); //Fix 27421
  protected Map iQtaPrlUmPrm = new HashMap(); //Fix 27421
  protected Map iQtaPrlUmSec = new HashMap(); //Fix 27421


  protected Map iProdotto = new Hashtable();
  protected Map iDescrizioneProdotto = new Hashtable();
  protected Map iProdottoVersione = new Hashtable() ;
  protected Map iProdottoConfig = new Hashtable();
  protected Map iLottoProdotto = new Hashtable();
  protected Map iMagazzinoVrs = new Hashtable();
  //protected Map iQtaVrsUmPrm = new Hashtable(); //Fix 27421
  //protected Map iQtaVrsUmSec = new Hashtable(); //Fix 27421
  //protected Map iQtaScartoUmPrm = new Hashtable(); //Fix 27421
  //protected Map iQtaScartoUmSec = new Hashtable(); //Fix 27421
  protected Map iQtaVrsUmPrm = new HashMap(); //Fix 27421
  protected Map iQtaVrsUmSec = new HashMap(); //Fix 27421
  protected Map iQtaScartoUmPrm = new HashMap(); //Fix 27421
  protected Map iQtaScartoUmSec = new HashMap(); //Fix 27421
  protected Map iIdAnnoOrdine = new Hashtable();
  protected Map iIdNumeroOrdine = new Hashtable();
  protected Map iIdRigaAttivita = new Hashtable();
  //Fix 18536 fine
  
  //Fix 39680 -- Inizio
  protected boolean iRicalcoloQuantita = true;
  protected Map iRicalcoloQuantitaPrl = new Hashtable();
  protected Map iRicalcoloQuantitaVers = new Hashtable();
  //Fix 39680 -- Fine
  
  protected Map iMappaUdc = new Hashtable(); //71953 SOF3

  protected String iIdRisorsaUmana; //Fix 17963

  protected char iTipoBolla=RilevazioneDatiProdTes.BOLLA_SINGOLA;
  //Fix 14721 Fine

  protected Proxy iBollaCucita = new Proxy(it.thera.thip.produzione.raccoltaDati.BollaCucitaTes.class); //Fix 14722

  protected int iCurrentNumPag  = 1;//Fix 18536

  /**
   * Constructor
   */

  public RilevDatiPrdTS() {
    setIdAziendaInternal(Azienda.getAziendaCorrente());
    if (Security.getCurrentUser() != null) {
      UtenteAzienda ua = ((ThipUser) Security.getCurrentUser()).getUtenteAzienda();
      setIdUtenteLgn(ua.getIdUtente());
    }
    setTipoRisorsa(Risorsa.ATTREZZI);
    setLivelloRisorsa(Risorsa.GRUPPO);
    setOraInizio(TimeUtils.getCurrentTime());
    setOraFine(TimeUtils.getCurrentTime());
    setDataFine(TimeUtils.getCurrentDate());// Fix 30440
  }

  /**
   * Valorizza l'oggetto iAzienda.
   * @param azienda Azienda
   */
  public void setAzienda(Azienda azienda) {
    setIdAziendaInternal(azienda.getKey());
    iAzienda.setObject(azienda);
  }

  /**
   * Restituisce l'oggetto iAzienda.
   * @return Azienda
   */
  public Azienda getAzienda() {
    return (Azienda) iAzienda.getObject();
  }

  /**
   * Valorizza la chiave dell'oggetto iAzienda.
   * @param key String
   */
  public void setAziendaKey(String key) {
    iAzienda.setKey(key);
    setIdAziendaInternal(key);
  }

  /**
   * Restituisce la chiave dell'oggetto iAzienda.
   * @return String
   */
  public String getAziendaKey() {
    return iAzienda.getKey();
  }

  /**
   * Valorizza l'attributo chiave dell'oggetto iAzienda.
   * @param idAzienda String
   */
  public void setIdAzienda(String idAzienda) {
    setIdAziendaInternal(idAzienda);
    iAzienda.setKey(idAzienda);
  }

  /**
   * Restituisce l'attributo chiave dell'oggetto iAzienda.
   * @return String
   */
  public String getIdAzienda() {
    String key = iAzienda.getKey();
    return key;
  }

  /**
   * setIdAziendaInternal(String idAzienda).
   * @param idAzienda String
   */
  protected void setIdAziendaInternal(String idAzienda) {
	//Fix 18536 Inizio
    if(idAzienda == null)
      return;
    //Fix 18536 Fine
    iAzienda.setKey(idAzienda);
    String key1 = iOperatore.getKey();
    iOperatore.setKey(KeyHelper.replaceTokenObjectKey(key1, 1, idAzienda));
    String key2 = iAttivitaEsecutiva.getKey();
    iAttivitaEsecutiva.setKey(KeyHelper.replaceTokenObjectKey(key2, 1, idAzienda));
    String key3 = iArticolo.getKey();
    iArticolo.setKey(KeyHelper.replaceTokenObjectKey(key3, 1, idAzienda));
    String key4 = iPersDatiPrdCausaleRilev.getKey();
    iPersDatiPrdCausaleRilev.setKey(KeyHelper.replaceTokenObjectKey(key4, 1, idAzienda));
    String key5 = iRisorsa.getKey();
    iRisorsa.setKey(KeyHelper.replaceTokenObjectKey(key5, 1, idAzienda));
    //Fix 12841 --inizio
    String key6 = iListaAttivita.getKey();
    iListaAttivita.setKey(KeyHelper.replaceTokenObjectKey(key6, 1, idAzienda));
     //Fix 12841 --fine
    //Fix 13573 --inizio
    String key7 = iPersDatiPrdUtenteRilev.getKey();
    iPersDatiPrdUtenteRilev.setKey(KeyHelper.replaceTokenObjectKey(key7, 1, idAzienda));
    //Fix 13573 --fine
    
    iCommessa.setKey(KeyHelper.replaceTokenObjectKey(iCommessa.getKey(), 1, idAzienda));//Fix 30572
    iConfigurazione.setKey(KeyHelper.replaceTokenObjectKey(iConfigurazione.getKey(), 1, idAzienda));//Fix 33517
    
    //Fix 14721 --Inizio
    //Fix 18536 inizio
    /*
    iMateriale1.setKey(KeyHelper.replaceTokenObjectKey(iMateriale1.getKey(), 1, idAzienda));
    iMaterialeVersione1.setKey(KeyHelper.replaceTokenObjectKey(iMaterialeVersione1.getKey(), 1, idAzienda));
    iConfigurazione1.setKey(KeyHelper.replaceTokenObjectKey(iConfigurazione1.getKey(), 1, idAzienda));
    iLotto1.setKey(KeyHelper.replaceTokenObjectKey(iLotto1.getKey(), 1, idAzienda));
    iMagazzinoPrl1.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoPrl1.getKey(), 1, idAzienda));

    iMateriale2.setKey(KeyHelper.replaceTokenObjectKey(iMateriale2.getKey(), 1, idAzienda));
    iMaterialeVersione2.setKey(KeyHelper.replaceTokenObjectKey(iMaterialeVersione2.getKey(), 1, idAzienda));
    iConfigurazione2.setKey(KeyHelper.replaceTokenObjectKey(iConfigurazione2.getKey(), 1, idAzienda));
    iLotto2.setKey(KeyHelper.replaceTokenObjectKey(iLotto2.getKey(), 1, idAzienda));
    iMagazzinoPrl2.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoPrl2.getKey(), 1, idAzienda));

    iMateriale3.setKey(KeyHelper.replaceTokenObjectKey(iMateriale3.getKey(), 1, idAzienda));
    iMaterialeVersione3.setKey(KeyHelper.replaceTokenObjectKey(iMaterialeVersione3.getKey(), 1, idAzienda));
    iConfigurazione3.setKey(KeyHelper.replaceTokenObjectKey(iConfigurazione3.getKey(), 1, idAzienda));
    iLotto3.setKey(KeyHelper.replaceTokenObjectKey(iLotto3.getKey(), 1, idAzienda));
    iMagazzinoPrl3.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoPrl3.getKey(), 1, idAzienda));

    iMateriale4.setKey(KeyHelper.replaceTokenObjectKey(iMateriale4.getKey(), 1, idAzienda));
    iMaterialeVersione4.setKey(KeyHelper.replaceTokenObjectKey(iMaterialeVersione4.getKey(), 1, idAzienda));
    iConfigurazione4.setKey(KeyHelper.replaceTokenObjectKey(iConfigurazione4.getKey(), 1, idAzienda));
    iLotto4.setKey(KeyHelper.replaceTokenObjectKey(iLotto4.getKey(), 1, idAzienda));
    iMagazzinoPrl4.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoPrl4.getKey(), 1, idAzienda));

    iMateriale5.setKey(KeyHelper.replaceTokenObjectKey(iMateriale5.getKey(), 1, idAzienda));
    iMaterialeVersione5.setKey(KeyHelper.replaceTokenObjectKey(iMaterialeVersione5.getKey(), 1, idAzienda));
    iConfigurazione5.setKey(KeyHelper.replaceTokenObjectKey(iConfigurazione5.getKey(), 1, idAzienda));
    iLotto5.setKey(KeyHelper.replaceTokenObjectKey(iLotto5.getKey(), 1, idAzienda));
    iMagazzinoPrl5.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoPrl5.getKey(), 1, idAzienda));

    iMateriale6.setKey(KeyHelper.replaceTokenObjectKey(iMateriale6.getKey(), 1, idAzienda));
    iMaterialeVersione6.setKey(KeyHelper.replaceTokenObjectKey(iMaterialeVersione6.getKey(), 1, idAzienda));
    iConfigurazione6.setKey(KeyHelper.replaceTokenObjectKey(iConfigurazione6.getKey(), 1, idAzienda));
    iLotto6.setKey(KeyHelper.replaceTokenObjectKey(iLotto6.getKey(), 1, idAzienda));
    iMagazzinoPrl6.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoPrl6.getKey(), 1, idAzienda));

    iMateriale7.setKey(KeyHelper.replaceTokenObjectKey(iMateriale7.getKey(), 1, idAzienda));
    iMaterialeVersione7.setKey(KeyHelper.replaceTokenObjectKey(iMaterialeVersione7.getKey(), 1, idAzienda));
    iConfigurazione7.setKey(KeyHelper.replaceTokenObjectKey(iConfigurazione7.getKey(), 1, idAzienda));
    iLotto7.setKey(KeyHelper.replaceTokenObjectKey(iLotto7.getKey(), 1, idAzienda));
    iMagazzinoPrl7.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoPrl7.getKey(), 1, idAzienda));

    iMateriale8.setKey(KeyHelper.replaceTokenObjectKey(iMateriale8.getKey(), 1, idAzienda));
    iMaterialeVersione8.setKey(KeyHelper.replaceTokenObjectKey(iMaterialeVersione8.getKey(), 1, idAzienda));
    iConfigurazione8.setKey(KeyHelper.replaceTokenObjectKey(iConfigurazione8.getKey(), 1, idAzienda));
    iLotto8.setKey(KeyHelper.replaceTokenObjectKey(iLotto8.getKey(), 1, idAzienda));
    iMagazzinoPrl8.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoPrl8.getKey(), 1, idAzienda));

    iMateriale9.setKey(KeyHelper.replaceTokenObjectKey(iMateriale9.getKey(), 1, idAzienda));
    iMaterialeVersione9.setKey(KeyHelper.replaceTokenObjectKey(iMaterialeVersione9.getKey(), 1, idAzienda));
    iConfigurazione9.setKey(KeyHelper.replaceTokenObjectKey(iConfigurazione9.getKey(), 1, idAzienda));
    iLotto9.setKey(KeyHelper.replaceTokenObjectKey(iLotto9.getKey(), 1, idAzienda));
    iMagazzinoPrl9.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoPrl9.getKey(), 1, idAzienda));

    iMateriale10.setKey(KeyHelper.replaceTokenObjectKey(iMateriale10.getKey(), 1, idAzienda));
    iMaterialeVersione10.setKey(KeyHelper.replaceTokenObjectKey(iMaterialeVersione10.getKey(), 1, idAzienda));
    iConfigurazione10.setKey(KeyHelper.replaceTokenObjectKey(iConfigurazione10.getKey(), 1, idAzienda));
    iLotto10.setKey(KeyHelper.replaceTokenObjectKey(iLotto10.getKey(), 1, idAzienda));
    iMagazzinoPrl10.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoPrl10.getKey(), 1, idAzienda));

    iMateriale11.setKey(KeyHelper.replaceTokenObjectKey(iMateriale11.getKey(), 1, idAzienda));
    iMaterialeVersione11.setKey(KeyHelper.replaceTokenObjectKey(iMaterialeVersione11.getKey(), 1, idAzienda));
    iConfigurazione11.setKey(KeyHelper.replaceTokenObjectKey(iConfigurazione11.getKey(), 1, idAzienda));
    iLotto11.setKey(KeyHelper.replaceTokenObjectKey(iLotto11.getKey(), 1, idAzienda));
    iMagazzinoPrl11.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoPrl11.getKey(), 1, idAzienda));

    iMateriale12.setKey(KeyHelper.replaceTokenObjectKey(iMateriale12.getKey(), 1, idAzienda));
    iMaterialeVersione12.setKey(KeyHelper.replaceTokenObjectKey(iMaterialeVersione12.getKey(), 1, idAzienda));
    iConfigurazione12.setKey(KeyHelper.replaceTokenObjectKey(iConfigurazione12.getKey(), 1, idAzienda));
    iLotto12.setKey(KeyHelper.replaceTokenObjectKey(iLotto12.getKey(), 1, idAzienda));
    iMagazzinoPrl12.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoPrl12.getKey(), 1, idAzienda));

    iMateriale13.setKey(KeyHelper.replaceTokenObjectKey(iMateriale13.getKey(), 1, idAzienda));
    iMaterialeVersione13.setKey(KeyHelper.replaceTokenObjectKey(iMaterialeVersione13.getKey(), 1, idAzienda));
    iConfigurazione13.setKey(KeyHelper.replaceTokenObjectKey(iConfigurazione13.getKey(), 1, idAzienda));
    iLotto13.setKey(KeyHelper.replaceTokenObjectKey(iLotto13.getKey(), 1, idAzienda));
    iMagazzinoPrl13.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoPrl13.getKey(), 1, idAzienda));

    iMateriale14.setKey(KeyHelper.replaceTokenObjectKey(iMateriale14.getKey(), 1, idAzienda));
    iMaterialeVersione14.setKey(KeyHelper.replaceTokenObjectKey(iMaterialeVersione14.getKey(), 1, idAzienda));
    iConfigurazione14.setKey(KeyHelper.replaceTokenObjectKey(iConfigurazione14.getKey(), 1, idAzienda));
    iLotto14.setKey(KeyHelper.replaceTokenObjectKey(iLotto14.getKey(), 1, idAzienda));
    iMagazzinoPrl14.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoPrl14.getKey(), 1, idAzienda));

    iMateriale15.setKey(KeyHelper.replaceTokenObjectKey(iMateriale15.getKey(), 1, idAzienda));
    iMaterialeVersione15.setKey(KeyHelper.replaceTokenObjectKey(iMaterialeVersione15.getKey(), 1, idAzienda));
    iConfigurazione15.setKey(KeyHelper.replaceTokenObjectKey(iConfigurazione15.getKey(), 1, idAzienda));
    iLotto15.setKey(KeyHelper.replaceTokenObjectKey(iLotto15.getKey(), 1, idAzienda));
    iMagazzinoPrl15.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoPrl15.getKey(), 1, idAzienda));

    iMateriale16.setKey(KeyHelper.replaceTokenObjectKey(iMateriale16.getKey(), 1, idAzienda));
    iMaterialeVersione16.setKey(KeyHelper.replaceTokenObjectKey(iMaterialeVersione16.getKey(), 1, idAzienda));
    iConfigurazione16.setKey(KeyHelper.replaceTokenObjectKey(iConfigurazione16.getKey(), 1, idAzienda));
    iLotto16.setKey(KeyHelper.replaceTokenObjectKey(iLotto16.getKey(), 1, idAzienda));
    iMagazzinoPrl16.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoPrl16.getKey(), 1, idAzienda));

    iMateriale17.setKey(KeyHelper.replaceTokenObjectKey(iMateriale17.getKey(), 1, idAzienda));
    iMaterialeVersione17.setKey(KeyHelper.replaceTokenObjectKey(iMaterialeVersione17.getKey(), 1, idAzienda));
    iConfigurazione17.setKey(KeyHelper.replaceTokenObjectKey(iConfigurazione17.getKey(), 1, idAzienda));
    iLotto17.setKey(KeyHelper.replaceTokenObjectKey(iLotto17.getKey(), 1, idAzienda));
    iMagazzinoPrl17.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoPrl17.getKey(), 1, idAzienda));

    iMateriale18.setKey(KeyHelper.replaceTokenObjectKey(iMateriale18.getKey(), 1, idAzienda));
    iMaterialeVersione18.setKey(KeyHelper.replaceTokenObjectKey(iMaterialeVersione18.getKey(), 1, idAzienda));
    iConfigurazione18.setKey(KeyHelper.replaceTokenObjectKey(iConfigurazione18.getKey(), 1, idAzienda));
    iLotto18.setKey(KeyHelper.replaceTokenObjectKey(iLotto18.getKey(), 1, idAzienda));
    iMagazzinoPrl18.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoPrl18.getKey(), 1, idAzienda));

    iMateriale19.setKey(KeyHelper.replaceTokenObjectKey(iMateriale19.getKey(), 1, idAzienda));
    iMaterialeVersione19.setKey(KeyHelper.replaceTokenObjectKey(iMaterialeVersione19.getKey(), 1, idAzienda));
    iConfigurazione19.setKey(KeyHelper.replaceTokenObjectKey(iConfigurazione19.getKey(), 1, idAzienda));
    iLotto19.setKey(KeyHelper.replaceTokenObjectKey(iLotto19.getKey(), 1, idAzienda));
    iMagazzinoPrl19.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoPrl19.getKey(), 1, idAzienda));

    iMateriale20.setKey(KeyHelper.replaceTokenObjectKey(iMateriale20.getKey(), 1, idAzienda));
    iMaterialeVersione20.setKey(KeyHelper.replaceTokenObjectKey(iMaterialeVersione20.getKey(), 1, idAzienda));
    iConfigurazione20.setKey(KeyHelper.replaceTokenObjectKey(iConfigurazione20.getKey(), 1, idAzienda));
    iLotto20.setKey(KeyHelper.replaceTokenObjectKey(iLotto20.getKey(), 1, idAzienda));
    iMagazzinoPrl20.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoPrl20.getKey(), 1, idAzienda));
    */

    /*
    iProdotto1.setKey(KeyHelper.replaceTokenObjectKey(iProdotto1.getKey(), 1, idAzienda));
    iProdottoVersione1.setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione1.getKey(), 1, idAzienda));
    iProdottoConfig1.setKey(KeyHelper.replaceTokenObjectKey(iProdottoConfig1.getKey(), 1, idAzienda));
    iLottoProdotto1.setKey(KeyHelper.replaceTokenObjectKey(iLottoProdotto1.getKey(), 1, idAzienda));
    iMagazzinoVrs1.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoVrs1.getKey(), 1, idAzienda));

    iProdotto2.setKey(KeyHelper.replaceTokenObjectKey(iProdotto2.getKey(), 1, idAzienda));
    iProdottoVersione2.setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione2.getKey(), 1, idAzienda));
    iProdottoConfig2.setKey(KeyHelper.replaceTokenObjectKey(iProdottoConfig2.getKey(), 1, idAzienda));
    iLottoProdotto2.setKey(KeyHelper.replaceTokenObjectKey(iLottoProdotto2.getKey(), 1, idAzienda));
    iMagazzinoVrs2.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoVrs2.getKey(), 1, idAzienda));

    iProdotto3.setKey(KeyHelper.replaceTokenObjectKey(iProdotto3.getKey(), 1, idAzienda));
    iProdottoVersione3.setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione3.getKey(), 1, idAzienda));
    iProdottoConfig3.setKey(KeyHelper.replaceTokenObjectKey(iProdottoConfig3.getKey(), 1, idAzienda));
    //iLottoProdotto3.setKey(KeyHelper.replaceTokenObjectKey(iLotto3.getKey(), 1, idAzienda));//Fix 15866
    iLottoProdotto3.setKey(KeyHelper.replaceTokenObjectKey(iLottoProdotto3.getKey(), 1, idAzienda));//Fix 15866
    iMagazzinoVrs3.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoVrs3.getKey(), 1, idAzienda));

    iProdotto4.setKey(KeyHelper.replaceTokenObjectKey(iProdotto4.getKey(), 1, idAzienda));
    iProdottoVersione4.setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione4.getKey(), 1, idAzienda));
    iProdottoConfig4.setKey(KeyHelper.replaceTokenObjectKey(iProdottoConfig4.getKey(), 1, idAzienda));
    iLottoProdotto4.setKey(KeyHelper.replaceTokenObjectKey(iLottoProdotto4.getKey(), 1, idAzienda));
    iMagazzinoVrs4.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoVrs4.getKey(), 1, idAzienda));

    iProdotto5.setKey(KeyHelper.replaceTokenObjectKey(iProdotto5.getKey(), 1, idAzienda));
    iProdottoVersione5.setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione5.getKey(), 1, idAzienda));
    iProdottoConfig5.setKey(KeyHelper.replaceTokenObjectKey(iProdottoConfig5.getKey(), 1, idAzienda));
    iLottoProdotto5.setKey(KeyHelper.replaceTokenObjectKey(iLottoProdotto5.getKey(), 1, idAzienda));
    iMagazzinoVrs5.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoVrs5.getKey(), 1, idAzienda));

    iProdotto6.setKey(KeyHelper.replaceTokenObjectKey(iProdotto6.getKey(), 1, idAzienda));
    iProdottoVersione6.setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione6.getKey(), 1, idAzienda));
    iProdottoConfig6.setKey(KeyHelper.replaceTokenObjectKey(iProdottoConfig6.getKey(), 1, idAzienda));
    iLottoProdotto6.setKey(KeyHelper.replaceTokenObjectKey(iLottoProdotto6.getKey(), 1, idAzienda));
    iMagazzinoVrs6.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoVrs6.getKey(), 1, idAzienda));

    iProdotto7.setKey(KeyHelper.replaceTokenObjectKey(iProdotto7.getKey(), 1, idAzienda));
    iProdottoVersione7.setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione7.getKey(), 1, idAzienda));
    iProdottoConfig7.setKey(KeyHelper.replaceTokenObjectKey(iProdottoConfig7.getKey(), 1, idAzienda));
    iLottoProdotto7.setKey(KeyHelper.replaceTokenObjectKey(iLottoProdotto7.getKey(), 1, idAzienda));
    iMagazzinoVrs7.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoVrs7.getKey(), 1, idAzienda));

    iProdotto8.setKey(KeyHelper.replaceTokenObjectKey(iProdotto8.getKey(), 1, idAzienda));
    iProdottoVersione8.setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione8.getKey(), 1, idAzienda));
    iProdottoConfig8.setKey(KeyHelper.replaceTokenObjectKey(iProdottoConfig8.getKey(), 1, idAzienda));
    iLottoProdotto8.setKey(KeyHelper.replaceTokenObjectKey(iLottoProdotto8.getKey(), 1, idAzienda));
    iMagazzinoVrs8.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoVrs8.getKey(), 1, idAzienda));

    iProdotto9.setKey(KeyHelper.replaceTokenObjectKey(iProdotto9.getKey(), 1, idAzienda));
    iProdottoVersione9.setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione9.getKey(), 1, idAzienda));
    iProdottoConfig9.setKey(KeyHelper.replaceTokenObjectKey(iProdottoConfig9.getKey(), 1, idAzienda));
    iLottoProdotto9.setKey(KeyHelper.replaceTokenObjectKey(iLottoProdotto9.getKey(), 1, idAzienda));
    iMagazzinoVrs9.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoVrs9.getKey(), 1, idAzienda));

    iProdotto10.setKey(KeyHelper.replaceTokenObjectKey(iProdotto10.getKey(), 1, idAzienda));
    iProdottoVersione10.setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione10.getKey(), 1, idAzienda));
    iProdottoConfig10.setKey(KeyHelper.replaceTokenObjectKey(iProdottoConfig10.getKey(), 1, idAzienda));
    iLottoProdotto10.setKey(KeyHelper.replaceTokenObjectKey(iLottoProdotto10.getKey(), 1, idAzienda));
    iMagazzinoVrs10.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoVrs10.getKey(), 1, idAzienda));

    iProdotto11.setKey(KeyHelper.replaceTokenObjectKey(iProdotto11.getKey(), 1, idAzienda));
    iProdottoVersione11.setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione11.getKey(), 1, idAzienda));
    iProdottoConfig11.setKey(KeyHelper.replaceTokenObjectKey(iProdottoConfig11.getKey(), 1, idAzienda));
    iLottoProdotto11.setKey(KeyHelper.replaceTokenObjectKey(iLottoProdotto11.getKey(), 1, idAzienda));
    iMagazzinoVrs11.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoVrs11.getKey(), 1, idAzienda));

    iProdotto12.setKey(KeyHelper.replaceTokenObjectKey(iProdotto12.getKey(), 1, idAzienda));
    iProdottoVersione12.setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione12.getKey(), 1, idAzienda));
    iProdottoConfig12.setKey(KeyHelper.replaceTokenObjectKey(iProdottoConfig12.getKey(), 1, idAzienda));
    iLottoProdotto12.setKey(KeyHelper.replaceTokenObjectKey(iLottoProdotto12.getKey(), 1, idAzienda));
    iMagazzinoVrs12.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoVrs12.getKey(), 1, idAzienda));

    iProdotto13.setKey(KeyHelper.replaceTokenObjectKey(iProdotto13.getKey(), 1, idAzienda));
    iProdottoVersione13.setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione13.getKey(), 1, idAzienda));
    iProdottoConfig13.setKey(KeyHelper.replaceTokenObjectKey(iProdottoConfig13.getKey(), 1, idAzienda));
    iLottoProdotto13.setKey(KeyHelper.replaceTokenObjectKey(iLottoProdotto13.getKey(), 1, idAzienda));
    iMagazzinoVrs13.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoVrs13.getKey(), 1, idAzienda));

    iProdotto14.setKey(KeyHelper.replaceTokenObjectKey(iProdotto14.getKey(), 1, idAzienda));
    iProdottoVersione14.setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione14.getKey(), 1, idAzienda));
    iProdottoConfig14.setKey(KeyHelper.replaceTokenObjectKey(iProdottoConfig14.getKey(), 1, idAzienda));
    iLottoProdotto14.setKey(KeyHelper.replaceTokenObjectKey(iLottoProdotto14.getKey(), 1, idAzienda));
    iMagazzinoVrs14.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoVrs14.getKey(), 1, idAzienda));

    iProdotto15.setKey(KeyHelper.replaceTokenObjectKey(iProdotto15.getKey(), 1, idAzienda));
    iProdottoVersione15.setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione15.getKey(), 1, idAzienda));
    iProdottoConfig15.setKey(KeyHelper.replaceTokenObjectKey(iProdottoConfig15.getKey(), 1, idAzienda));
    iLottoProdotto15.setKey(KeyHelper.replaceTokenObjectKey(iLottoProdotto15.getKey(), 1, idAzienda));
    iMagazzinoVrs15.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoVrs15.getKey(), 1, idAzienda));

    iProdotto16.setKey(KeyHelper.replaceTokenObjectKey(iProdotto16.getKey(), 1, idAzienda));
    iProdottoVersione16.setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione16.getKey(), 1, idAzienda));
    iProdottoConfig16.setKey(KeyHelper.replaceTokenObjectKey(iProdottoConfig16.getKey(), 1, idAzienda));
    iLottoProdotto16.setKey(KeyHelper.replaceTokenObjectKey(iLottoProdotto16.getKey(), 1, idAzienda));
    iMagazzinoVrs16.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoVrs16.getKey(), 1, idAzienda));

    iProdotto17.setKey(KeyHelper.replaceTokenObjectKey(iProdotto17.getKey(), 1, idAzienda));
    iProdottoVersione17.setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione17.getKey(), 1, idAzienda));
    iProdottoConfig17.setKey(KeyHelper.replaceTokenObjectKey(iProdottoConfig17.getKey(), 1, idAzienda));
    iLottoProdotto17.setKey(KeyHelper.replaceTokenObjectKey(iLottoProdotto17.getKey(), 1, idAzienda));
    iMagazzinoVrs17.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoVrs17.getKey(), 1, idAzienda));

    iProdotto18.setKey(KeyHelper.replaceTokenObjectKey(iProdotto18.getKey(), 1, idAzienda));
    iProdottoVersione18.setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione18.getKey(), 1, idAzienda));
    iProdottoConfig18.setKey(KeyHelper.replaceTokenObjectKey(iProdottoConfig18.getKey(), 1, idAzienda));
    iLottoProdotto18.setKey(KeyHelper.replaceTokenObjectKey(iLottoProdotto18.getKey(), 1, idAzienda));
    iMagazzinoVrs18.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoVrs18.getKey(), 1, idAzienda));

    iProdotto19.setKey(KeyHelper.replaceTokenObjectKey(iProdotto19.getKey(), 1, idAzienda));
    iProdottoVersione19.setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione19.getKey(), 1, idAzienda));
    iProdottoConfig19.setKey(KeyHelper.replaceTokenObjectKey(iProdottoConfig19.getKey(), 1, idAzienda));
    iLottoProdotto19.setKey(KeyHelper.replaceTokenObjectKey(iLottoProdotto19.getKey(), 1, idAzienda));
    iMagazzinoVrs19.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoVrs19.getKey(), 1, idAzienda));

    iProdotto20.setKey(KeyHelper.replaceTokenObjectKey(iProdotto20.getKey(), 1, idAzienda));
    iProdottoVersione20.setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione20.getKey(), 1, idAzienda));
    iProdottoConfig20.setKey(KeyHelper.replaceTokenObjectKey(iProdottoConfig20.getKey(), 1, idAzienda));
    iLottoProdotto20.setKey(KeyHelper.replaceTokenObjectKey(iLottoProdotto20.getKey(), 1, idAzienda));
    iMagazzinoVrs20.setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoVrs20.getKey(), 1, idAzienda));
    */

   for(int i=0; i<20;i++){
     String keyMat = null;
     if(iMateriale.isEmpty() || iMateriale.size() <= (i + (iCurrentNumPag - 1) * 20)){
       //iMateriale.put(new Integer(i + (iCurrentNumPag - 1) * 20), new Proxy(Articolo.class));
       iMateriale.put(new Integer((i + (iCurrentNumPag - 1) * 20)), (Articolo)Factory.createObject(Articolo.class));
       keyMat = ((Articolo)(iMateriale.get(new Integer(i + (iCurrentNumPag - 1) * 20)))).getKey();
       ((Articolo)iMateriale.get(new Integer(i + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(keyMat, 1, idAzienda));
     }

     if(iMaterialeVersione.isEmpty() || iMaterialeVersione.size() <= (i + (iCurrentNumPag - 1) * 20)){
       //iMaterialeVersione.put(new Integer(i + (iCurrentNumPag - 1) * 20), new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class));
       iMaterialeVersione.put(new Integer((i + (iCurrentNumPag - 1) * 20)), (ArticoloVersione)Factory.createObject(ArticoloVersione.class));
       keyMat = ((ArticoloVersione)(iMaterialeVersione.get(new Integer(i + (iCurrentNumPag - 1) * 20)))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(i + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(keyMat, 1, idAzienda));
     }

     if(iMaterialeConfig.isEmpty() || iMaterialeConfig.size() <= (i + (iCurrentNumPag - 1) * 20)){
       //iMaterialeConfig.put(new Integer(i + (iCurrentNumPag - 1) * 20), new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class));
       iMaterialeConfig.put(new Integer((i + (iCurrentNumPag - 1) * 20)), (Configurazione)Factory.createObject(Configurazione.class));
       keyMat = ((Configurazione)(iMaterialeConfig.get(new Integer(i + (iCurrentNumPag - 1) * 20)))).getKey();
       ((Configurazione)iMaterialeConfig.get(new Integer(i + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(keyMat, 1, idAzienda));
     }

     if(iLottoMateriale.isEmpty() || iLottoMateriale.size() <= (i + (iCurrentNumPag - 1) * 20)){
       //iLottoMateriale.put(new Integer(i + (iCurrentNumPag - 1) * 20), new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class));
       iLottoMateriale.put(new Integer((i + (iCurrentNumPag - 1) * 20)), (Lotto)Factory.createObject(Lotto.class));
       keyMat = ((Lotto)(iLottoMateriale.get(new Integer(i + (iCurrentNumPag - 1) * 20)))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(i + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(keyMat, 1, idAzienda));
     }

     if(iMagazzinoPrl.isEmpty() || iMagazzinoPrl.size() <= (i + (iCurrentNumPag - 1) * 20)){
       //iMagazzinoPrl.put(new Integer(i + (iCurrentNumPag - 1) * 20), new Proxy(it.thera.thip.base.azienda.Magazzino.class));
       iMagazzinoPrl.put(new Integer((i + (iCurrentNumPag - 1) * 20)), (Magazzino)Factory.createObject(Magazzino.class));
       keyMat = ((Magazzino)(iMagazzinoPrl.get(new Integer(i + (iCurrentNumPag - 1) * 20)))).getKey();
       ((Magazzino)iMagazzinoPrl.get(new Integer(i + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(keyMat, 1, idAzienda));
     }
   }

   for(int i=0; i<20;i++){
     String keyPrd = null;
     if(iProdotto.isEmpty() || iProdotto.size() <= (i + (iCurrentNumPag - 1) * 20)){
       //iProdotto.put(new Integer(i + (iCurrentNumPag - 1) * 20), new Proxy(Articolo.class));
       iProdotto.put(new Integer((i + (iCurrentNumPag - 1) * 20)), (Articolo)Factory.createObject(Articolo.class));
       keyPrd = ((Articolo)(iProdotto.get(new Integer(i + (iCurrentNumPag - 1) * 20)))).getKey();
       ((Articolo)iProdotto.get(new Integer(i + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(keyPrd, 1, idAzienda));
     }
     if(iProdottoVersione.isEmpty() || iProdottoVersione.size() <= (i + (iCurrentNumPag - 1) * 20)){
       //iProdottoVersione.put(new Integer(i + (iCurrentNumPag - 1) * 20), new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class));
       iProdottoVersione.put(new Integer((i + (iCurrentNumPag - 1) * 20)), (ArticoloVersione)Factory.createObject(ArticoloVersione.class));
       keyPrd = ((ArticoloVersione)(iProdottoVersione.get(new Integer(i + (iCurrentNumPag - 1) * 20)))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(i + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(keyPrd, 1, idAzienda));
     }

     if(iProdottoConfig.isEmpty() || iProdottoConfig.size() <= (i + (iCurrentNumPag - 1) * 20)){
       //iProdottoConfig.put(new Integer(i + (iCurrentNumPag - 1) * 20), new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class));
       iProdottoConfig.put(new Integer((i + (iCurrentNumPag - 1) * 20)), (Configurazione)Factory.createObject(Configurazione.class));
       keyPrd = ((Configurazione)(iProdottoConfig.get(new Integer(i + (iCurrentNumPag - 1) * 20)))).getKey();
       ((Configurazione)iProdottoConfig.get(new Integer(i + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(keyPrd, 1, idAzienda));
     }

     if(iLottoProdotto.isEmpty() || iLottoProdotto.size() <= (i + (iCurrentNumPag - 1) * 20)){
       //iLottoProdotto.put(new Integer(i + (iCurrentNumPag - 1) * 20), new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class));
       iLottoProdotto.put(new Integer((i + (iCurrentNumPag - 1) * 20)), (Lotto)Factory.createObject(Lotto.class));
       keyPrd = ((Lotto)(iLottoProdotto.get(new Integer(i + (iCurrentNumPag - 1) * 20)))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(i + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(keyPrd, 1, idAzienda));
     }

     if(iMagazzinoVrs.isEmpty() || iMagazzinoVrs.size() <= (i + (iCurrentNumPag - 1) * 20)){
       //iMagazzinoVrs.put(new Integer(i + (iCurrentNumPag - 1) * 20), new Proxy(it.thera.thip.base.azienda.Magazzino.class));
       iMagazzinoVrs.put(new Integer((i + (iCurrentNumPag - 1) * 20)), (Magazzino)Factory.createObject(Magazzino.class));
       keyPrd = ((Magazzino)(iMagazzinoVrs.get(new Integer(i + (iCurrentNumPag - 1) * 20)))).getKey();
       ((Magazzino)iMagazzinoVrs.get(new Integer(i + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(keyPrd, 1, idAzienda));
     }
   }
    /*
    //Prodotto n°1
    if(iProdotto[0 + (iCurrentNumPag - 1) * 20] == null){
    	iProdotto[0 + (iCurrentNumPag - 1) * 20] =  new Proxy(Articolo.class);
    	iProdotto[0 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iProdotto[0 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }
    if(iProdottoVersione[0 + (iCurrentNumPag - 1) * 20] == null){
    	iProdottoVersione[0 + (iCurrentNumPag - 1) * 20] =  new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
    	iProdottoVersione[0 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione[0 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

    if(iProdottoConfig[0 + (iCurrentNumPag - 1) * 20] == null){
    	iProdottoConfig[0 + (iCurrentNumPag - 1) * 20] =  new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
    	iProdottoConfig[0 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione[0 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

    if(iLottoProdotto[0 + (iCurrentNumPag - 1) * 20] == null){
    	iLottoProdotto[0 + (iCurrentNumPag - 1) * 20] =  new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
    	iLottoProdotto[0 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iLottoProdotto[0 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

    if(iMagazzinoVrs[0 + (iCurrentNumPag - 1) * 20] == null){
    	iMagazzinoVrs[0 + (iCurrentNumPag - 1) * 20] =  new Proxy(it.thera.thip.base.azienda.Magazzino.class);
    	iMagazzinoVrs[0 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoVrs[0 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

    //Prodotto n°2
  	if(iProdotto[1 + (iCurrentNumPag - 1) * 20] == null){
    	iProdotto[1 + (iCurrentNumPag - 1) * 20] =  new Proxy(Articolo.class);
    	iProdotto[1 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iProdotto[1 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }
    if(iProdottoVersione[1 + (iCurrentNumPag - 1) * 20] == null){
    	iProdottoVersione[1 + (iCurrentNumPag - 1) * 20] =  new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
    	iProdottoVersione[1 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione[1 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

    if(iProdottoConfig[1 + (iCurrentNumPag - 1) * 20] == null){
    	iProdottoConfig[1 + (iCurrentNumPag - 1) * 20] =  new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
    	iProdottoConfig[1 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione[1 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

    if(iLottoProdotto[1 + (iCurrentNumPag - 1) * 20] == null){
    	iLottoProdotto[1 + (iCurrentNumPag - 1) * 20] =  new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
    	iLottoProdotto[1 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iLottoProdotto[1 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

    if(iMagazzinoVrs[1 + (iCurrentNumPag - 1) * 20] == null){
    	iMagazzinoVrs[1 + (iCurrentNumPag - 1) * 20] =  new Proxy(it.thera.thip.base.azienda.Magazzino.class);
    	iMagazzinoVrs[1 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoVrs[1 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

    //Prodotto n°3
  	if(iProdotto[2 + (iCurrentNumPag - 1) * 20] == null){
    	iProdotto[2 + (iCurrentNumPag - 1) * 20] =  new Proxy(Articolo.class);
    	iProdotto[2 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iProdotto[2 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }
    if(iProdottoVersione[2 + (iCurrentNumPag - 1) * 20] == null){
    	iProdottoVersione[2 + (iCurrentNumPag - 1) * 20] =  new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
    	iProdottoVersione[2 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione[2 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

    if(iProdottoConfig[2 + (iCurrentNumPag - 1) * 20] == null){
    	iProdottoConfig[2 + (iCurrentNumPag - 1) * 20] =  new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
    	iProdottoConfig[2 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione[2 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

    if(iLottoProdotto[2 + (iCurrentNumPag - 1) * 20] == null){
    	iLottoProdotto[2 + (iCurrentNumPag - 1) * 20] =  new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
    	iLottoProdotto[2 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iLottoProdotto[2 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

    if(iMagazzinoVrs[2 + (iCurrentNumPag - 1) * 20] == null){
    	iMagazzinoVrs[2 + (iCurrentNumPag - 1) * 20] =  new Proxy(it.thera.thip.base.azienda.Magazzino.class);
    	iMagazzinoVrs[2 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoVrs[2 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

  	//Prodotto n°4
  	if(iProdotto[3 + (iCurrentNumPag - 1) * 20] == null){
    	iProdotto[3 + (iCurrentNumPag - 1) * 20] =  new Proxy(Articolo.class);
    	iProdotto[3 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iProdotto[3 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }
    if(iProdottoVersione[3 + (iCurrentNumPag - 1) * 20] == null){
    	iProdottoVersione[3 + (iCurrentNumPag - 1) * 20] =  new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
    	iProdottoVersione[3 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione[3 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

    if(iProdottoConfig[3 + (iCurrentNumPag - 1) * 20] == null){
    	iProdottoConfig[3 + (iCurrentNumPag - 1) * 20] =  new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
    	iProdottoConfig[3 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione[3 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

    if(iLottoProdotto[3 + (iCurrentNumPag - 1) * 20] == null){
    	iLottoProdotto[3 + (iCurrentNumPag - 1) * 20] =  new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
    	iLottoProdotto[3 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iLottoProdotto[3 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

    if(iMagazzinoVrs[3 + (iCurrentNumPag - 1) * 20] == null){
    	iMagazzinoVrs[3 + (iCurrentNumPag - 1) * 20] =  new Proxy(it.thera.thip.base.azienda.Magazzino.class);
    	iMagazzinoVrs[3 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoVrs[3 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

  	//Prodotto n°5
  	if(iProdotto[4 + (iCurrentNumPag - 1) * 20] == null){
    	iProdotto[4 + (iCurrentNumPag - 1) * 20] =  new Proxy(Articolo.class);
    	iProdotto[4 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iProdotto[4 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }
    if(iProdottoVersione[4 + (iCurrentNumPag - 1) * 20] == null){
    	iProdottoVersione[4 + (iCurrentNumPag - 1) * 20] =  new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
    	iProdottoVersione[4 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione[4 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

    if(iProdottoConfig[4 + (iCurrentNumPag - 1) * 20] == null){
    	iProdottoConfig[4 + (iCurrentNumPag - 1) * 20] =  new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
    	iProdottoConfig[4 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione[4 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

    if(iLottoProdotto[4 + (iCurrentNumPag - 1) * 20] == null){
    	iLottoProdotto[4 + (iCurrentNumPag - 1) * 20] =  new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
    	iLottoProdotto[4 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iLottoProdotto[4 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

    if(iMagazzinoVrs[4 + (iCurrentNumPag - 1) * 20] == null){
    	iMagazzinoVrs[4 + (iCurrentNumPag - 1) * 20] =  new Proxy(it.thera.thip.base.azienda.Magazzino.class);
    	iMagazzinoVrs[4 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoVrs[4 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

  	//Prodotto n°6
  	if(iProdotto[5 + (iCurrentNumPag - 1) * 20] == null){
    	iProdotto[5 + (iCurrentNumPag - 1) * 20] =  new Proxy(Articolo.class);
    	iProdotto[5 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iProdotto[5 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }
    if(iProdottoVersione[5 + (iCurrentNumPag - 1) * 20] == null){
    	iProdottoVersione[5 + (iCurrentNumPag - 1) * 20] =  new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
    	iProdottoVersione[5 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione[5 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

    if(iProdottoConfig[5 + (iCurrentNumPag - 1) * 20] == null){
    	iProdottoConfig[5 + (iCurrentNumPag - 1) * 20] =  new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
    	iProdottoConfig[5 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione[5 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

    if(iLottoProdotto[5 + (iCurrentNumPag - 1) * 20] == null){
    	iLottoProdotto[5 + (iCurrentNumPag - 1) * 20] =  new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
    	iLottoProdotto[5 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iLottoProdotto[5 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

    if(iMagazzinoVrs[5 + (iCurrentNumPag - 1) * 20] == null){
    	iMagazzinoVrs[5 + (iCurrentNumPag - 1) * 20] =  new Proxy(it.thera.thip.base.azienda.Magazzino.class);
    	iMagazzinoVrs[5 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoVrs[5 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

  	//Prodotto n°7
  	if(iProdotto[6 + (iCurrentNumPag - 1) * 20] == null){
    	iProdotto[6 + (iCurrentNumPag - 1) * 20] =  new Proxy(Articolo.class);
    	iProdotto[6 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iProdotto[6 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }
    if(iProdottoVersione[6 + (iCurrentNumPag - 1) * 20] == null){
    	iProdottoVersione[6 + (iCurrentNumPag - 1) * 20] =  new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
    	iProdottoVersione[6 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione[6 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

    if(iProdottoConfig[6 + (iCurrentNumPag - 1) * 20] == null){
    	iProdottoConfig[6 + (iCurrentNumPag - 1) * 20] =  new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
    	iProdottoConfig[6 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione[6 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

    if(iLottoProdotto[6 + (iCurrentNumPag - 1) * 20] == null){
    	iLottoProdotto[6 + (iCurrentNumPag - 1) * 20] =  new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
    	iLottoProdotto[6 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iLottoProdotto[6 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

    if(iMagazzinoVrs[6 + (iCurrentNumPag - 1) * 20] == null){
    	iMagazzinoVrs[6 + (iCurrentNumPag - 1) * 20] =  new Proxy(it.thera.thip.base.azienda.Magazzino.class);
    	iMagazzinoVrs[6 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoVrs[6 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

  	//Prodotto n°8
  	if(iProdotto[7 + (iCurrentNumPag - 1) * 20] == null){
    	iProdotto[7 + (iCurrentNumPag - 1) * 20] =  new Proxy(Articolo.class);
    	iProdotto[7 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iProdotto[7 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }
    if(iProdottoVersione[7 + (iCurrentNumPag - 1) * 20] == null){
    	iProdottoVersione[7 + (iCurrentNumPag - 1) * 20] =  new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
    	iProdottoVersione[7 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione[7 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

    if(iProdottoConfig[7 + (iCurrentNumPag - 1) * 20] == null){
    	iProdottoConfig[7 + (iCurrentNumPag - 1) * 20] =  new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
    	iProdottoConfig[7 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione[7 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

    if(iLottoProdotto[7 + (iCurrentNumPag - 1) * 20] == null){
    	iLottoProdotto[7 + (iCurrentNumPag - 1) * 20] =  new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
    	iLottoProdotto[7 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iLottoProdotto[7 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

    if(iMagazzinoVrs[7 + (iCurrentNumPag - 1) * 20] == null){
    	iMagazzinoVrs[7 + (iCurrentNumPag - 1) * 20] =  new Proxy(it.thera.thip.base.azienda.Magazzino.class);
    	iMagazzinoVrs[7 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoVrs[7 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

  	//Prodotto n°9
  	if(iProdotto[8 + (iCurrentNumPag - 1) * 20] == null){
    	iProdotto[8 + (iCurrentNumPag - 1) * 20] =  new Proxy(Articolo.class);
    	iProdotto[8 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iProdotto[8 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }
    if(iProdottoVersione[8 + (iCurrentNumPag - 1) * 20] == null){
    	iProdottoVersione[8 + (iCurrentNumPag - 1) * 20] =  new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
    	iProdottoVersione[8 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione[8 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

    if(iProdottoConfig[8 + (iCurrentNumPag - 1) * 20] == null){
    	iProdottoConfig[8 + (iCurrentNumPag - 1) * 20] =  new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
    	iProdottoConfig[8 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione[8 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

    if(iLottoProdotto[8 + (iCurrentNumPag - 1) * 20] == null){
    	iLottoProdotto[8 + (iCurrentNumPag - 1) * 20] =  new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
    	iLottoProdotto[8 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iLottoProdotto[8 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

    if(iMagazzinoVrs[8 + (iCurrentNumPag - 1) * 20] == null){
    	iMagazzinoVrs[8 + (iCurrentNumPag - 1) * 20] =  new Proxy(it.thera.thip.base.azienda.Magazzino.class);
    	iMagazzinoVrs[8 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoVrs[8 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

  	//Prodotto n°10
  	if(iProdotto[9 + (iCurrentNumPag - 1) * 20] == null){
    	iProdotto[9 + (iCurrentNumPag - 1) * 20] =  new Proxy(Articolo.class);
    	iProdotto[9 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iProdotto[9 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }
    if(iProdottoVersione[9 + (iCurrentNumPag - 1) * 20] == null){
    	iProdottoVersione[9 + (iCurrentNumPag - 1) * 20] =  new Proxy(it.thera.thip.base.articolo.ArticoloVersione.class);
    	iProdottoVersione[9 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione[9 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

    if(iProdottoConfig[9 + (iCurrentNumPag - 1) * 20] == null){
    	iProdottoConfig[9 + (iCurrentNumPag - 1) * 20] =  new ConfigurazioneProxyEnh(it.thera.thip.datiTecnici.configuratore.Configurazione.class);
    	iProdottoConfig[9 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iProdottoVersione[9 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

    if(iLottoProdotto[9 + (iCurrentNumPag - 1) * 20] == null){
    	iLottoProdotto[9 + (iCurrentNumPag - 1) * 20] =  new Proxy(it.thera.thip.magazzino.generalemag.Lotto.class);
    	iLottoProdotto[9 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iLottoProdotto[9 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }

    if(iMagazzinoVrs[9 + (iCurrentNumPag - 1) * 20] == null){
    	iMagazzinoVrs[9 + (iCurrentNumPag - 1) * 20] =  new Proxy(it.thera.thip.base.azienda.Magazzino.class);
    	iMagazzinoVrs[9 + (iCurrentNumPag - 1) * 20].setKey(KeyHelper.replaceTokenObjectKey(iMagazzinoVrs[9 + (iCurrentNumPag - 1) * 20].getKey(), 1, idAzienda));
    }
    */

    //Fix 18536 fine
    //Fix 14721 --Fine

    iBollaCucita.setKey(KeyHelper.replaceTokenObjectKey(iBollaCucita.getKey(), 1, idAzienda)); //Fix 14722
  }

  /**
   * Valorizza l'attributo.
   * @param operatore
   */

  public void setOperatore(Dipendente operatore) {
    String oldObjectKey = getKey();
    String idAzienda = null;
    if (operatore != null) {
      idAzienda = KeyHelper.getTokenObjectKey(operatore.getKey(), 1);
    }
    setIdAziendaInternal(idAzienda);
    this.iOperatore.setObject(operatore);
    setDirty();
    if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
      setOnDB(false);
    }
  }

  /**
   * Restituisce l'attributo.
   * @return Dipendente
   */

  public Dipendente getOperatore() {
    return (Dipendente) iOperatore.getObject();
  }

  /**
   * setOperatoreKey
   * @param key
   */

  public void setOperatoreKey(String key) {
    String oldObjectKey = getKey();
    iOperatore.setKey(key);
    String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
    setIdAziendaInternal(idAzienda);
    setDirty();
    if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
      setOnDB(false);
    }
  }

  /**
   * getOperatoreKey
   * @return String
   */

  public String getOperatoreKey() {
    return iOperatore.getKey();
  }

  /**
   * Valorizza l'attributo.
   * @param idOperatore
   */
  public void setIdOperatore(String idOperatore) {
    String key = iOperatore.getKey();
    iOperatore.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idOperatore));
    setDirty();
  }

  /**
   * Restituisce l'attributo.
   * @return String
   */

  public String getIdOperatore() {
    String key = iOperatore.getKey();
    String objIdOperatore = KeyHelper.getTokenObjectKey(key, 2);
    return objIdOperatore;
  }

  public void setDirty() {

  }

  /**
   * Valorizza l'attributo.
   * @param attivitaEsecutiva AttivitaEsecutiva
   */
  public void setAttivitaEsecutiva(AttivitaEsecutiva attivitaEsecutiva) {
    String idAzienda = null;
    if (attivitaEsecutiva != null) {
      idAzienda = KeyHelper.getTokenObjectKey(attivitaEsecutiva.getKey(), 1);
    }
    setIdAziendaInternal(idAzienda);
    iAttivitaEsecutiva.setObject(attivitaEsecutiva);
    setDirty();
  }

  /**
   * Restituisce l'attributo.
   * @return AttivitaEsecutiva
   */
  public AttivitaEsecutiva getAttivitaEsecutiva() {
    return (AttivitaEsecutiva) iAttivitaEsecutiva.getObject();
  }

  /**
   * setAttivitaEsecutivaKey
   * @param key String
   */
  public void setAttivitaEsecutivaKey(String key) {
    iAttivitaEsecutiva.setKey(key);
    String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
    setIdAziendaInternal(idAzienda);
    setDirty();
  }

  /**
   * getAttivitaEsecutivaKey
   * @return String
   */
  public String getAttivitaEsecutivaKey() {
    return iAttivitaEsecutiva.getKey();
  }

  /**
   * Valorizza l'attributo.
   * @param idAnnoOrdine String
   */
  public void setIdAnnoOrdine(String idAnnoOrdine) {
    String keyAtv = iAttivitaEsecutiva.getKey();
    iAttivitaEsecutiva.setKey(KeyHelper.replaceTokenObjectKey(keyAtv, 2, idAnnoOrdine));
    String keyListAtv = iListaAttivita.getKey(); //Fix12841
    iListaAttivita.setKey(KeyHelper.replaceTokenObjectKey(keyListAtv, 3, idAnnoOrdine)); //Fix 12841
  }

  /**
   * Restituisce l'attributo.
   * @return String
   */
  public String getIdAnnoOrdine() {
    String key = iAttivitaEsecutiva.getKey();
    String objIdAnnoOrdine = KeyHelper.getTokenObjectKey(key, 2);
    return objIdAnnoOrdine;

  }

  /**
   * Restituisce l'attributo.
   * @return String
   */
  public String getIdNumeroOrdine() {
    String key = iAttivitaEsecutiva.getKey();
    String objIdNumeroOrdine = KeyHelper.getTokenObjectKey(key, 3);
    return objIdNumeroOrdine;
  }

  /**
   * Valorizza l'attributo.
   * @param idNumeroOrdine String
   */
  public void setIdNumeroOrdine(String idNumeroOrdine) {
    String keyAtv = iAttivitaEsecutiva.getKey();
    iAttivitaEsecutiva.setKey(KeyHelper.replaceTokenObjectKey(keyAtv, 3, idNumeroOrdine));
    String keyListAtv = iListaAttivita.getKey(); //Fix12841
    iListaAttivita.setKey(KeyHelper.replaceTokenObjectKey(keyListAtv, 4, idNumeroOrdine)); //Fix12841
  }

  /**
   * Valorizza l'attributo.
   * @param idRigaAttivita Integer
   */
  public void setIdRigaAttivita(Integer idRigaAttivita) {
    String key = iAttivitaEsecutiva.getKey();
    iAttivitaEsecutiva.setKey(KeyHelper.replaceTokenObjectKey(key, 4, idRigaAttivita));
    String keyListAtv = iListaAttivita.getKey(); //Fix12841
    iListaAttivita.setKey(KeyHelper.replaceTokenObjectKey(keyListAtv, 5, idRigaAttivita)); //Fix12841
    setDirty();
  }

  /**
   * Restituisce l'attributo.
   * @return Integer
   */
  public Integer getIdRigaAttivita() {
    String key = iAttivitaEsecutiva.getKey();
    String objIdNumeroOrdine = KeyHelper.getTokenObjectKey(key, 4);
    return KeyHelper.stringToIntegerObj(objIdNumeroOrdine);

  }

  /**
   * Valorizza l'attributo.
   * @param articolo Articolo
   */
  public void setArticolo(Articolo articolo) {
    String oldObjectKey = getKey();
    String idAzienda = null;
    if (articolo != null) {
      idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
    }
    setIdAziendaInternal(idAzienda);
    iArticolo.setObject(articolo);
    setDirty();
    if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
      setOnDB(false);
    }
  }

  /**
   * Restituisce l'attributo.
   * @return Articolo
   */
  public Articolo getArticolo() {
    return (Articolo) iArticolo.getObject();
  }

  /**
   * setArticoloKey
   * @param key String
   */
  public void setArticoloKey(String key) {
    String oldObjectKey = getKey();
    iArticolo.setKey(key);
    String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
    setIdAziendaInternal(idAzienda);
    setDirty();
    if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
      setOnDB(false);
    }
  }

  /**
   * getArticoloKey
   * @return String
   */
  public String getArticoloKey() {
    return iArticolo.getKey();
  }

  /**
   * Valorizza l'attributo.
   * @param rArticolo String
   */
  public void setIdArticolo(String rArticolo) {
    String key = iArticolo.getKey();
    iArticolo.setKey(KeyHelper.replaceTokenObjectKey(key, 2, rArticolo));
    setDirty();
  }

  /**
   * Restituisce l'attributo.
   * @return String
   */
  public String getIdArticolo() {
    String key = iArticolo.getKey();
    String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
    return objRArticolo;
  }

  /**
   * Valorizza l'attributo.
   * @param persDatiPrdCausaleRilev
   */
  /*
   * Revisions:
   * Date          Owner      Description
   *
   */
  public void setPersDatiPrdCausaleRilev(PersDatiPrdCausaleRilev persDatiPrdCausaleRilev) {
    String oldObjectKey = getKey();
    String idAzienda = null;
    if (persDatiPrdCausaleRilev != null) {
      idAzienda = KeyHelper.getTokenObjectKey(persDatiPrdCausaleRilev.getKey(), 1);
    }
    setIdAziendaInternal(idAzienda);
    this.iPersDatiPrdCausaleRilev.setObject(persDatiPrdCausaleRilev);
    setDirty();
    if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
      setOnDB(false);
    }
  }

  /**
   * Restituisce l'attributo.
   * @return PersDatiPrdCausaleRilev
   */
  /*
   * Revisions:
   * Date          Owner      Description
   *
   */
  public PersDatiPrdCausaleRilev getPersDatiPrdCausaleRilev() {
    return (PersDatiPrdCausaleRilev) iPersDatiPrdCausaleRilev.getObject();
  }

  /**
   * setPersDatiPrdCausaleRilevKey
   * @param key
   */
  /*
   * Revisions:
   * Date          Owner      Description
   *
   */
  public void setPersDatiPrdCausaleRilevKey(String key) {
    String oldObjectKey = getKey();
    iPersDatiPrdCausaleRilev.setKey(key);
    String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
    setIdAziendaInternal(idAzienda);
    setDirty();
    if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
      setOnDB(false);
    }
  }

  /**
   * getPersDatiPrdCausaleRilevKey
   * @return String
   */
  /*
   * Revisions:
   * Date          Owner      Description
   *
   */
  public String getPersDatiPrdCausaleRilevKey() {
    return iPersDatiPrdCausaleRilev.getKey();
  }

  /**
   * Valorizza l'attributo.
   * @param idUtenteLgn
   */
  /*
   * Revisions:
   * Date          Owner      Description
   *
   */
  public void setIdUtenteLgn(String idUtenteLgn) {
    String key = iPersDatiPrdCausaleRilev.getKey();
    iPersDatiPrdCausaleRilev.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idUtenteLgn));
    //Fix 13573 --inizio
    String key2 = iPersDatiPrdUtenteRilev.getKey();
    iPersDatiPrdUtenteRilev.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, idUtenteLgn));
    //Fix 13573 --fine
    setDirty();
  }

  /**
   * Restituisce l'attributo.
   * @return String
   */
  /*
   * Revisions:
   * Date          Owner      Description
   *
   */
  public String getIdUtenteLgn() {
    //Fix 13573 --inizio
    //String key = iPersDatiPrdCausaleRilev.getKey();
    String key = iPersDatiPrdUtenteRilev.getKey();
    //Fix 13573 --fine
    String objIdUtenteLgn = KeyHelper.getTokenObjectKey(key, 2);
    return objIdUtenteLgn;

  }

  /**
   * Valorizza l'attributo.
   * @param idCausaleRilevazione
   */
  /*
   * Revisions:
   * Date          Owner      Description
   *
   */
  public void setIdCausaleRilevazione(String idCausaleRilevazione) {
    String key = iPersDatiPrdCausaleRilev.getKey();
    iPersDatiPrdCausaleRilev.setKey(KeyHelper.replaceTokenObjectKey(key, 3, idCausaleRilevazione));
    setDirty();
  }

  /**
   * Restituisce l'attributo.
   * @return String
   */
  /*
   * Revisions:
   * Date          Owner      Description
   *
   */
  public String getIdCausaleRilevazione() {
    String key = iPersDatiPrdCausaleRilev.getKey();
    String objIdCausaleRilevazione = KeyHelper.getTokenObjectKey(key, 3);
    return objIdCausaleRilevazione;
  }

  /**
   * Valorizza l'attributo.
   * @param risorsa
   */
  /*
   * Revisions:
   * Date          Owner      Description
   *
   */
  public void setRisorsa(Risorsa risorsa) {
    String oldObjectKey = getKey();
    String idAzienda = null;
    if (risorsa != null) {
      idAzienda = KeyHelper.getTokenObjectKey(risorsa.getKey(), 1);
    }
    setIdAziendaInternal(idAzienda);
    this.iRisorsa.setObject(risorsa);
    setDirty();
    if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
      setOnDB(false);
    }
  }

  /**
   * Restituisce l'attributo.
   * @return Risorsa
   */
  /*
   * Revisions:
   * Date          Owner      Description
   *
   */
  public Risorsa getRisorsa() {
    return (Risorsa) iRisorsa.getObject();
  }

  /**
   * setRisorsaKey
   * @param key
   */
  /*
   * Revisions:
   * Date          Owner      Description
   *
   */
  public void setRisorsaKey(String key) {
    String oldObjectKey = getKey();
    iRisorsa.setKey(key);
    String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
    setIdAziendaInternal(idAzienda);
    setDirty();
    if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
      setOnDB(false);
    }
  }

  /**
   * getRisorsaKey
   * @return String
   */
  /*
   * Revisions:
   * Date          Owner      Description
   *
   */
  public String getRisorsaKey() {
    return iRisorsa.getKey();
  }

  /**
   * Valorizza l'attributo.
   * @param tipoRisorsa
   */
  /*
   * Revisions:
   * Date          Owner      Description
   *
   */
  public void setTipoRisorsa(char tipoRisorsa) {
    String key = iRisorsa.getKey();
    Character tipoRisorsaTmp = new Character(tipoRisorsa);
    iRisorsa.setKey(KeyHelper.replaceTokenObjectKey(key, 2, tipoRisorsaTmp));
    setDirty();
  }

  /**
   * Restituisce l'attributo.
   * @return String
   */
  /*
   * Revisions:
   * Date          Owner      Description
   *
   */
  public char getTipoRisorsa() {
    String key = iRisorsa.getKey();
    String objTipoRisorsa = KeyHelper.getTokenObjectKey(key, 2);
    return KeyHelper.stringToChar(objTipoRisorsa);
  }

  /**
   * Valorizza l'attributo.
   * @param livelloRisorsa
   */
  /*
   * Revisions:
   * Date          Owner      Description
   *
   */
  public void setLivelloRisorsa(char livelloRisorsa) {
    String key = iRisorsa.getKey();
    Character livelloRisorsaTmp = new Character(livelloRisorsa);
    iRisorsa.setKey(KeyHelper.replaceTokenObjectKey(key, 3, livelloRisorsaTmp));
    setDirty();
  }

  /**
   * Restituisce l'attributo.
   * @return String
   */
  /*
   * Revisions:
   * Date          Owner      Description
   *
   */
  public char getLivelloRisorsa() {
    String key = iRisorsa.getKey();
    String objLivelloRisorsa = KeyHelper.getTokenObjectKey(key, 3);
    return KeyHelper.stringToChar(objLivelloRisorsa);
  }

  /**
   * Valorizza l'attributo.
   * @param idRisorsa
   */
  /*
   * Revisions:
   * Date          Owner      Description
   *
   */
  public void setIdRisorsa(String idRisorsa) {
    String key = iRisorsa.getKey();
    iRisorsa.setKey(KeyHelper.replaceTokenObjectKey(key, 4, idRisorsa));
    setDirty();
  }

  /**
   * Restituisce l'attributo.
   * @return String
   */
  /*
   * Revisions:
   * Date          Owner      Description
   *
   */
  public String getIdRisorsa() {
    String key = iRisorsa.getKey();
    String objIdRisorsa = KeyHelper.getTokenObjectKey(key, 4);
    return objIdRisorsa;
  }

  /**
   * Restituisce l'attributo.
   * @return String
   */
  public String getBollaLavorazione() {
    return iBollaLavorazione;
  }

  /**
   *
   * @param bollaLavorazione String
   */
  public void setBollaLavorazione(String bollaLavorazione) {
    this.iBollaLavorazione = bollaLavorazione;
  }

  /**
   * Restituisce l'attributo.
   * @return String
   */
  public String getDescrizioneOperatore() {
    if (getOperatore() != null) {
      //Fix 12974 --inizio
        //return getOperatore().getNome();
       return getOperatore().getDenominazione();
      //Fix 12974 --fine
    }
    return "";
  }

  /**
   * Restituisce l'attributo.
   * @return String
   */
  public String getDescrizioneArticolo() {
    if (getArticolo() != null) {
      return getArticolo().getDescrizioneArticoloNLS().getDescrizione();
    }
    return "";
  }

  /**
   * Restituisce l'attributo.
   * @return String
   */
  public String getDescrizioneBolla() {
    if (getAttivitaEsecutiva() != null) {
      return getAttivitaEsecutiva().getDescrizione().getDescrizione();
    }
    //Fix 14722 -- Inizio
    else if(getBollaCucita() != null){
      if(getBollaCucita().getAttivita() != null)
        return getBollaCucita().getAttivita().getDescrizione().getDescrizione();
    }
    //Fix 14722 -- fine
    return null;
  }

  /**
   * Restituisce l'attributo.
   * @return char
   */
  public char getTipoTimbratura() {
    return iTipoTimbratura;
  }

  /**
   *
   * @param tipoTimbratura char
   */
  public void setTipoTimbratura(char tipoTimbratura) {
    this.iTipoTimbratura = tipoTimbratura;
  }

  /**
   * Restituisce l'attributo.
   * @return String
   */
  public String getDescrizioneCausaleRilev() {
    if (getPersDatiPrdCausaleRilev() != null) {
      return getPersDatiPrdCausaleRilev().getDescrizione();
    }
    return "";
  }

  public boolean isSospendiRilevInCorso() {
    return iSospendiRilevInCorso;
  }

  public void setSospendiRilevInCorso(boolean sospendiRilevInCorso) {
    iSospendiRilevInCorso = sospendiRilevInCorso;
  }

  public boolean isRiprendiRilevSospesa() {
    return iRiprendiRilevSospesa;
  }

  public void setRiprendiRilevSospesa(boolean riprendiRilevSospesa) {
    iRiprendiRilevSospesa = riprendiRilevSospesa;
  }

  public String getNote() {
    return iNote;
  }

  public void setNote(String note) {
    iNote = note;
  }

  /**
   *
   * @return Time
   */

  public java.sql.Time getOraInizio() {
    return iOraInizio;
  }

  /**
   *
   * @param oraInizio Time
   */

  public void setOraInizio(java.sql.Time oraInizio) {
    iOraInizio = oraInizio;
  }

  /**
   *
   * @return Time
   */

  public java.sql.Time getOraFine() {
    return iOraFine;
  }

  /**
  *
  * @param oraFine Time
  */

  public void setOraFine(java.sql.Time oraFine) {
    iOraFine = oraFine;
  }

  /**
   * Valorizza l'attributo.
   * @param quantita
   */

  public void setQuantita(BigDecimal quantita) {
    this.iQuantita = quantita;
    setDirty();
  }

  /**
   * Restituisce l'attributo.
   * @return BigDecimal
   */

  public BigDecimal getQuantita() {
    return iQuantita;
  }

   //Fix 16109 inizio
  /**
   * Valorizza l'attributo.
   * @param quantita
   */
  public void setQuantitaSec(BigDecimal quantitaSec) {
    this.iQuantitaSec = quantitaSec;
    setDirty();
  }

  /**
   * Restituisce l'attributo.
   * @return BigDecimal
   */

  public BigDecimal getQuantitaSec() {
    return iQuantitaSec;
  }
  //Fix 16109 fine

  /**
   * Valorizza l'attributo.
   * @param qtaScarto
   */
  public void setQtaScarto(BigDecimal qtaScarto) {
    this.iQtaScarto = qtaScarto;
    setDirty();
  }

  /**
   * Restituisce l'attributo.
   * @return BigDecimal
   */
  public BigDecimal getQtaScarto() {
    return iQtaScarto;
  }

  //Fix 16109 inizio
  /**
   * Valorizza l'attributo.
   * @param qtaScarto
   */
  public void setQtaScartoSec(BigDecimal qtaScartoSec) {
    this.iQtaScartoSec = qtaScartoSec;
    setDirty();
  }

  /**
   * Restituisce l'attributo.
   * @return BigDecimal
   */
  public BigDecimal getQtaScartoSec() {
    return iQtaScartoSec;
  }
  //Fix 16109 fine

  /**
   * Restituisce l'attributo.
   * @return char
   */
  public char getSaldo() {
    return iSaldo;
  }

  /**
   *
   * @return String
   */
  public String getIdUMPrm(){
    if(getArticolo() != null){
      return getArticolo().getIdUMPrmMag();
    }
    return null;
  }

  //Fix 16109 inizio
  public String getIdUMSec(){
    if(getArticolo() != null){
      return getArticolo().getIdUMSecMag();
    }
    return null;
  }
  //Fix 16109 fine

  /**
   *
   * @param saldo char
   */
  public void setSaldo(char saldo) {
    this.iSaldo = saldo;
  }

  //Fix 12841 --inizio
  /**
   * Valorizza l'attributo.
   * @param idMacchina
   */
  public void setIdMacchina(String idMacchina) {
    this.iIdMacchina = idMacchina;
    setDirty();
  }

  /**
   * Restituisce l'attributo.
   * @return String
   */
  public String getIdMacchina() {
    return iIdMacchina;
  }

  public String getDescrizioneMacchina(){
    Risorsa macchina = getMacchina();
    if(macchina != null){
      return getMacchina().getDescrizione().getDescrizione();
    }
    return null;
  }

  /**
  * Valorizza l'attributo.
  * @param listaAttivita ListaAttivita
  */
 public void setListaAttivita(ListaAttivita listaAttivita) {
   String idAzienda = null;
   if (listaAttivita != null) {
     idAzienda = KeyHelper.getTokenObjectKey(listaAttivita.getKey(), 1);
   }
   setIdAziendaInternal(idAzienda);
   iListaAttivita.setObject(listaAttivita);
   setDirty();
 }

 /**
  * Restituisce l'attributo.
  * @return ListaAttivita
  */
  public ListaAttivita getListaAttivita() {
   return (ListaAttivita) iListaAttivita.getObject();
  }

 /**
  * setListaAttivitaKey
  * @param key String
  */
  public void setListaAttivitaKey(String key) {
   iListaAttivita.setKey(key);
   String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
   setIdAziendaInternal(idAzienda);
   setDirty();
  }

 /**
  * getListaAttivitaKey
  * @return String
  */
  public String getListaAttivitaKey() {
   return iListaAttivita.getKey();
  }

 /**
  * Valorizza l'attributo.
  * @param idAmbiente String
  */
  public void setIdAmbiente(String idAmbiente) {
   String keyAtv = iListaAttivita.getKey();
   iListaAttivita.setKey(KeyHelper.replaceTokenObjectKey(keyAtv, 2, idAmbiente));
  }

  /**
   *
   * @param idAmbiente String
   */
  public String getIdAmbiente() {
    String key = iListaAttivita.getKey();
    String objIdAmbiente = KeyHelper.getTokenObjectKey(key, 2);
    return objIdAmbiente;
  }

  //Fix 12841 --fine

  public List getRisorse() {
    List risorse = new ArrayList();
    //Fix 13175 --inizio
    Risorsa risorsa = getRisorsa();
    if (risorsa == null)
      risorsa = getIdMacchina() != null ? getMacchina() : getRisorsaPrincipale();
    //Fix 13175 --fine
    if (risorsa == null)
      return risorse;
    //Fix 32334 -- inizio 
    if(getPersDatiPrdCausaleRilev() != null && getPersDatiPrdCausaleRilev().isOreUomoRsrSec()) {
    	risorse.add(getOperatoreRisorsa());
    }else {
    //Fix 32334 -- fine
    	if (risorsa.getLivelloRisorsa() == Risorsa.RISORSA) {
		   //Fix 19887 inizio
	    	if(risorsa.getTipoRisorsa() == Risorsa.RISORSE_UMANE) {
	    		risorse.addAll(trovaRisorse(risorsa));
	    	}
	    	else {
	    	//Fix 19887 fine
	          String where = RisorsaTM.ID_AZIENDA + " = '" + getIdAzienda() + "' AND " +
	                         RisorsaTM.TIPO_RISORSA + " = '" + risorsa.getTipoRisorsa() + "' AND " +
	                         RisorsaTM.LIVELLO_RISORSA + " = '" + Risorsa.MATRICOLA + "' AND " +
	                         RisorsaTM.R_RISORSA_APPART + " = '" + risorsa.getIdRisorsa() + "' AND " +
	                         RisorsaTM.STATO + " = '" + DatiComuniEstesi.VALIDO + "'"; //Fix 24437
	           try {
	             risorse = Risorsa.retrieveList(where, "", false);
	           }
	           catch (Exception ex) {
	             ex.printStackTrace(Trace.excStream);
	           }
			}
	    }
	    else if (risorsa.getLivelloRisorsa() == Risorsa.MATRICOLA) {
		   //Fix 19887 inizio
	    	if(risorsa.getTipoRisorsa() == Risorsa.RISORSE_UMANE) {
	    		String rsrApp = getRisorseAppartenenza(risorsa);
	    		risorse.addAll(trovaRisorse(risorsa, rsrApp));
	    	}
	    	else {
	    	//Fix 19887 fine
	          risorse.add(risorsa);
	          String where = RisorsaTM.ID_AZIENDA + " = '" + getIdAzienda() + "' AND " +
	                         RisorsaTM.TIPO_RISORSA + " = '" + risorsa.getTipoRisorsa() + "' AND " +
	                         RisorsaTM.LIVELLO_RISORSA + " = '" + Risorsa.MATRICOLA + "' AND " +
	                         RisorsaTM.R_RISORSA_APPART + " = '" + risorsa.getIdRisorsaAppart() + "' AND " +
	                         RisorsaTM.ID_RISORSA + " <> '" + risorsa.getIdRisorsa() + "'";
	          try {
	            risorse.addAll(Risorsa.retrieveList(where, "", false));
	          }
	          catch (Exception ex) {
	            ex.printStackTrace(Trace.excStream);
	          }
		    }
	    }
    }//Fix 32334
    //Fix 13264 --inizio
    /*if (risorsa.getTipoRisorsa() == Risorsa.MACCHINE) { //Fix 13264
      eliminaRisorseOccupata(risorse); //Fix 13082
    }*/
    //Fix 13264 --fine
    return risorse;
  }

  public Risorsa getRisorsaPrincipale() {
    AttivitaEsecutiva atvEsec = getAttivitaEsecutiva();
    BollaCucitaTes bollaCucita = getBollaCucita(); //Fix 14722
    if (atvEsec != null) {
      Iterator ris = atvEsec.getRisorse().iterator();
      while (ris.hasNext()) {
        AttivitaEsecRisorsa atvEsecRis = (AttivitaEsecRisorsa) ris.next();
        //if (atvEsecRis.getPoliticaConsRisorsa() == AttivitaEsecRisorsa.PRINCIPALE) {//Fix 29945
        if (atvEsecRis.getPoliticaConsRisorsa() == AttivitaEsecRisorsa.PRINCIPALE && atvEsecRis.getStato() == DatiComuniEstesi.VALIDO) { //Fix 29945
          return atvEsecRis.getRisorsa();
        }
      }
    }
    //Fix 14722 --inizio
    else if (bollaCucita != null){
      return bollaCucita.getRisorsa();
    }
    //Fix 14722 --fine
    return null;
  }

  /**
   * leggiRigaAtvEsec.
   * @return Vector
   */
  public AttivitaEsecutiva leggiAtvEsec() {
    String where = AttivitaEsecutivaTM.ID_AZIENDA + " = '" + Azienda.getAziendaCorrente() + "' AND " +
                   AttivitaEsecutivaTM.NUM_RITORNO + " = '" + getBollaLavorazione() + "'";
    try {
      Vector vect = AttivitaEsecutiva.retrieveList(where, "", true);
      if (!vect.isEmpty()) {
        return (AttivitaEsecutiva) vect.firstElement();
      }
    }
    catch (Exception e) {
      e.printStackTrace(Trace.excStream);
    }
    return null;
  }

  public Articolo leggiArticolo() {
    AttivitaEsecutiva atvEsec = getAttivitaEsecutiva();
    if (atvEsec != null) {
      return atvEsec.getOrdineEsecutivo().getArticolo();
    }
    return null;
  }

  public Vector getCausaliRilevazioniProduttive() {
    try {
      UtenteAzienda ua = UtenteAzienda.getUtenteAziendaConnesso();
      String where = PersDatiPrdCausaleRilevTM.ID_AZIENDA + " = '" + getIdAzienda() + "' AND " +
                     PersDatiPrdCausaleRilevTM.ID_UTENTE_LGN + " = '" + ua.getIdUtente() + "' AND " +
                     PersDatiPrdCausaleRilevTM.TIPO_DICHIAR + " <> '" + PersDatiPrdCausaleRilev.NON_PRODUTTIVA + "' AND " +
                     PersDatiPrdCausaleRilevTM.TIPO_DICHIAR + " <> '" + PersDatiPrdCausaleRilev.FERMO + "'" ;//Fix 16741
      //Fix 13264 --inizio
      if(getTipoTimbratura() != RilevazioneDatiProdRig.FINE){
        where += " AND " + PersDatiPrdCausaleRilevTM.TIPO_DICHIAR + " <> '" + PersDatiPrdCausaleRilev.AVANZAMENTO + "'";
        where += " AND " + PersDatiPrdCausaleRilevTM.TIPO_DICHIAR + " <> '" + PersDatiPrdCausaleRilev.VERSAMENTO + "'";
      }
      //Fix 13264 --fine
      return PersDatiPrdCausaleRilev.retrieveList(where, PersDatiPrdCausaleRilevTM.SEQUENZA_ORDIN, true); //Fix 13175
    }
    catch (Exception ex) {
      ex.printStackTrace(Trace.excStream);
    }
    return new Vector();
  }

  public Vector getCausaliRilevazioniNonProduttive() {
    try {
      UtenteAzienda ua = UtenteAzienda.getUtenteAziendaConnesso();
      String where = PersDatiPrdCausaleRilevTM.ID_AZIENDA + " = '" + getIdAzienda() + "' AND " +
                     PersDatiPrdCausaleRilevTM.ID_UTENTE_LGN + " = '" + ua.getIdUtente() + "' AND " +
                     PersDatiPrdCausaleRilevTM.TIPO_DICHIAR + " = '" + PersDatiPrdCausaleRilev.NON_PRODUTTIVA + "'";
      return PersDatiPrdCausaleRilev.retrieveList(where, PersDatiPrdCausaleRilevTM.SEQUENZA_ORDIN, true); //Fix 13175
    }
    catch (Exception ex) {
      ex.printStackTrace(Trace.excStream);
    }
    return new Vector();
  }

  public void completaBO() {
    //Fix 12841 --inizio
    /*setTipoRisorsa(Risorsa.ATTREZZI);
    setLivelloRisorsa(Risorsa.GRUPPO);*/
    //Fix 12841 --inizio
    if (getBollaLavorazione() != null) {
      AttivitaEsecutiva atvEsec = leggiAtvEsec();
      //Fix 22630 Inizio
      BollaCucitaTes bollaCucitaRag = leggiBollaRaggruppata();
      if(bollaCucitaRag != null){
        setBollaCucita(bollaCucitaRag);
        setBollaLavorazione(bollaCucitaRag.getNumeroRitorno());
        setTipoBolla(RilevazioneDatiProdTes.BOLLA_RAGGRUPPATA);
      }
      //Fix 22630 Fine
      else if (atvEsec != null) { //Fix 22630
        setIdAnnoOrdine(atvEsec.getIdAnnoOrdine());
        setIdNumeroOrdine(atvEsec.getIdNumeroOrdine());
        setIdRigaAttivita(atvEsec.getIdRigaAttivita());
      }
      //Fix 14721 inizio
      else {
        BollaCucitaTes bollaCucita = leggiBollaCucita();
        if (bollaCucita != null){
          setBollaCucita(bollaCucita);
          setTipoBolla(RilevazioneDatiProdTes.BOLLA_CUCITA);
        }
      }
      //Fix 14721 fine
      Articolo articolo = leggiArticolo();
      if (articolo != null) {
        setIdArticolo(articolo.getIdArticolo());
      }
      //Fix 30572 -- inizio
      Commessa commessa = leggiCommessa();
      if (commessa != null) {
        setIdCommessa(commessa.getIdCommessa());
      }
      //Fix 30572 -- fine
      //Fix 33517 --Inizio
      Configurazione configurazione = leggiConfigurazione();
      if(configurazione != null) {
    	setIdConfigurazione(configurazione.getIdConfigurazione());
      }
      //Fix 33517 -- Fine
    }
  }

  public ErrorMessage checkQuantita() {
   if(getPersDatiPrdCausaleRilev() != null && getPersDatiPrdCausaleRilev().getTipoDichiarazione() != PersDatiPrdCausaleRilev.NON_PRODUTTIVA
            &&(getTipoTimbratura() == RilevazioneDatiProdRig.SOSPENSIONE || getTipoTimbratura() == RilevazioneDatiProdRig.FINE)
             && (getPersDatiPrdCausaleRilev().getCausaleDocumento().getRilevaQuantita() == CausaleDocProduzione.SI)) { //Fix 13175
     // Fix 14721 inizio
     //List prodotti = getAttivitaEsecutiva().getProdotti(); //Fix 14722
     //List prodotti = getAttivitaEsecutiva() != null ? getAttivitaEsecutiva().getProdotti(): new ArrayList(); //Fix 14722 //Fix 27657
     if (getPersDatiPrdCausaleRilev().getTipoDichiarazione() != PersDatiPrdCausaleRilev.PRELIEVO &&
         /*getPersDatiPrdCausaleRilev().getCausaleDocumento().getAbilitaVersamenti() != CausaleDocProduzione.NO &&*/ //Fix 27463 riga commentata
         //!checkAttivitaProdotti(prodotti)) { // Fix 14721 fine //Fix 16109 //Fix 27657
    	 !verificaCondizioneVersamenti()) { //Fix 27657
       if (getQuantita() == null && getTipoBolla() != RilevazioneDatiProdTes.BOLLA_CUCITA) { //Fix 14722
         return new ErrorMessage("BAS0000000");
       }
     } //Fix 14721
   }
   return null;
  }

  public ErrorMessage checkOraFine() {
   if(getIdCausaleRilevazione() != null && (getTipoTimbratura() == RilevazioneDatiProdRig.SOSPENSIONE || getTipoTimbratura() == RilevazioneDatiProdRig.FINE)) {
     if(getOraFine() == null){
        return new ErrorMessage("BAS0000000");
     }
   }
   return null;
  }

  public ErrorMessage checkOraInizio() {
   if(getIdCausaleRilevazione() != null && (getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO || getTipoTimbratura() == RilevazioneDatiProdRig.RIPRESA)) {
     if(getOraInizio() == null){
        return new ErrorMessage("BAS0000000");
     }
   }
   return null;
  }

  //39515 inizio
  public ErrorMessage checkIdOperatore() {
	  if((getBollaLavorazione() == null || getBollaLavorazione().equals("")) && getOperatoreRisorsa() == null && getMacchina() == null) {
		  return new ErrorMessage("THIP40T798", getIdOperatore());
	  }
	  return null;
  }
  //39515 fine

  public ErrorMessage checkBollaLavorazione() {
    if (getBollaLavorazione() != null) {
      if (getAttivitaEsecutiva() == null && getTipoBolla() == RilevazioneDatiProdTes.BOLLA_SINGOLA
          || getBollaCucita() == null && getTipoBolla() == RilevazioneDatiProdTes.BOLLA_CUCITA) { //Fix 14722
        return new ErrorMessage("THIP30T230");
      }
      //Fix 22630 Inizio
      else if(getBollaCucita() != null && getTipoBolla() == RilevazioneDatiProdTes.BOLLA_RAGGRUPPATA){
        return new ErrorMessage("THIP40T423", true);
      }
      //Fix 22630 Fine
      else if (!hasRisorsaPrincMacchinaRisorsaUmana()) {
        return new ErrorMessage("THIP30T229");
      }
      //Fix 27124 inizio
      else if(getTipoTimbratura() == RilevazioneDatiProdRig.RIPRESA){
        RilevazioneDatiProdTes testata = cercaRilevazioneSospesa();
        if (testata == null)
          return new ErrorMessage("THIP300304");
      }
      //Fix 27124 fine
      //Fix 17000 inizio
      else if (getAttivitaEsecutiva() != null) {
        if (getAttivitaEsecutiva().getStatoAttivita() == AttivitaEsecutiva.IMMESSO)
          return new ErrorMessage("THIP40T267");
        if (getAttivitaEsecutiva().getStato() != DatiComuniEstesi.VALIDO)
          return new ErrorMessage("THIP40T266");
        //Fix 30289 inizio
		if (getAttivitaEsecutiva() != null) {
			if ((getAttivitaEsecutiva().getStatoAttivita() != AttivitaEsecutiva.CONFERMATO &&
          getAttivitaEsecutiva().getStatoAttivita() != AttivitaEsecutiva.IN_CORSO &&
          getAttivitaEsecutiva().getStatoAttivita() != AttivitaEsecutiva.COMPLETATO_ATV) ||
          getAttivitaEsecutiva().getDatiComuniEstesi().getStato() != DatiComuniEstesi.VALIDO)
				return new ErrorMessage("THIP110196");
		}
		//Fix 30289 fine
      }
      //Fix 17000 fine
      //Fix 16109 blocco commentato
      //Fix 14722 inizio
      /*else if(getBollaCucita() != null && getTipoBolla() == RilevazioneDatiProdTes.BOLLA_CUCITA){
        if(getBollaCucita().getStatoAvanzamento() == BollaCucitaTes.COMPLETATO)
          return new ErrorMessage("THIP40T145");

      }*/
      //Fix 14722 fine
    }
   /* else if(getIdMacchina() != null){
      return new ErrorMessage("BAS0000000"); //Fix 13082
    }*/ //Fix 16741
    return null;
  }

  //Fix 12841 --inizio
  public ErrorMessage checkIdMacchina(){
    if(getIdMacchina() != null){
       Risorsa macchina = getMacchina();
       if(macchina == null){
         return new ErrorMessage("THIP30T249");
       }
    }
    //Fix 34773 -- Inizio
    if (!macchinaAppartieneRsrPrinc()) {
 	  ErrorMessage ret = new ErrorMessage("THIP_TN778", new String[] { getIdMacchina(), getAttivitaEsecutiva().getAtvEsecRsrPrincipale().getIdRisorsa()});
 	  if (ret.getSeverity() == ErrorMessage.ERROR)
 	    return ret;
    }
    //Fix 34773 -- Fine
    return null;
  }

  public ErrorMessage checkProssimaAttivita(){
     if(getProssimaAttivita() == null){
       return new ErrorMessage("THIP30T251");
     }
     return null;
  }

  public Risorsa getMacchina() {
    String key = KeyHelper.buildObjectKey(new Object[]{getIdAzienda(), new Character(Risorsa.MACCHINE), new Character(Risorsa.MATRICOLA), getIdMacchina()});
    try{
      return (Risorsa)Risorsa.elementWithKey(Risorsa.class, key, PersistentObject.NO_LOCK);

    }catch(Exception ex){
      ex.printStackTrace(Trace.excStream);
    }
    return null;
  }

  public Risorsa getOperatoreRisorsa() {
   String key = KeyHelper.buildObjectKey(new Object[]{getIdAzienda(), new Character(Risorsa.RISORSE_UMANE), new Character(Risorsa.MATRICOLA), getIdOperatore()});
   try{
     return (Risorsa)Risorsa.elementWithKey(Risorsa.class, key, PersistentObject.NO_LOCK);

   }catch(Exception ex){
     ex.printStackTrace(Trace.excStream);
   }
   return null;
 }

  public ErrorMessage checkIdRisorsa(){
   if(getPersDatiPrdCausaleRilev() != null &&
      // getPersDatiPrdCausaleRilev().getTipoDichiarazione() != PersDatiPrdCausaleRilev.NON_PRODUTTIVA && //Fix 16741
       getPersDatiPrdCausaleRilev().getTipoDichiarazione() != PersDatiPrdCausaleRilev.NON_PRODUTTIVA &&  getPersDatiPrdCausaleRilev().getTipoDichiarazione() != PersDatiPrdCausaleRilev.FERMO && //Fix 16741
       getPersDatiPrdCausaleRilev().getTipoDichiarazione() != PersDatiPrdCausaleRilev.PRELIEVO &&
       getPersDatiPrdCausaleRilev().getTipoDichiarazione() != PersDatiPrdCausaleRilev.VERSAMENTO){ //Fix 13264 //Fix 16109
      if(getIdRisorsa() == null){
        return new ErrorMessage("BAS0000000");
      }
   }
   return null;
 }

 //Fix 12841 --fine

  public boolean hasRisorsaPrincMacchinaRisorsaUmana() {
    AttivitaEsecutiva atvEsec = getAttivitaEsecutiva();
    BollaCucitaTes bollaCucita = getBollaCucita(); //Fix 14722
    if (atvEsec != null) {
      Iterator ris = atvEsec.getRisorse().iterator();
      while (ris.hasNext()) {
        AttivitaEsecRisorsa atvEsecRis = (AttivitaEsecRisorsa) ris.next();
        if (atvEsecRis.getPoliticaConsRisorsa() == AttivitaEsecRisorsa.PRINCIPALE) {
          if (atvEsecRis.getTipoRisorsa() == Risorsa.MACCHINE || atvEsecRis.getTipoRisorsa() == Risorsa.RISORSE_UMANE)
            return true;
        }
      }
    }
    // Fix 14722 inizio
    else if(bollaCucita != null && bollaCucita.getRisorsa() != null){
      if (bollaCucita.getTipoRisorsa() == Risorsa.MACCHINE ||bollaCucita.getTipoRisorsa() == Risorsa.RISORSE_UMANE)
        return true;
    }
    // Fix 14722 fine
    return false;
  }

  public List cercaDichiarazioneInCorso(){
    List dichiarazioneInCorsoList = new ArrayList();
    String where = RilevazioneDatiProdTesTM.ID_AZIENDA + " ='" + getIdAzienda() + "' AND ";
    //Fix 13264 inizio
    if (getIdMacchina() != null) {
      where += RilevazioneDatiProdTesTM.TIPO_RISORSA + " ='" + Risorsa.MACCHINE + "' AND " +
               RilevazioneDatiProdTesTM.LIVELLO_RISORSA + " ='" + Risorsa.MATRICOLA + "' AND " +
               RilevazioneDatiProdTesTM.R_RISORSA + " ='" + getIdMacchina() + "' AND ";
    }
    where += RilevazioneDatiProdTesTM.R_OPERATORE + " ='" + getIdOperatore() + "' AND " +
             RilevazioneDatiProdTesTM.TIPO_BOLLA + " <>'" + RilevazioneDatiProdTes.BOLLA_RAGGRUPPATA + "' AND " + //Fix 15030 //Fix 15064
             RilevazioneDatiProdTesTM.STATO_RIL + " IN ('" + RilevazioneDatiProdTes.IN_CORSO + "', '" +  RilevazioneDatiProdTes.SOSPESA + "') AND " +
             RilevazioneDatiProdTesTM.STATO + " ='" + DatiComuniEstesi.INCOMPLETO + "'";
    //Fix 13264 fine
    //RilevazioneDatiProdTesTM.DATA_RIL + " =" + ConnectionManager.getCurrentDatabase().getLiteral(TimeUtils.getCurrentDate()) + " AND " + //Fix 13175
    try{
      dichiarazioneInCorsoList = RilevazioneDatiProdTes.retrieveList(where, RilevazioneDatiProdTesTM.TIPO_DICHIAR, true);
    }catch(Exception ex){
      ex.printStackTrace(Trace.excStream);
    }

    return dichiarazioneInCorsoList;
  }

  public RilevazioneDatiProdTes cercaRilevazioneInCorso(){
    RilevazioneDatiProdTes ret = null; //Fix 23542
    String idRisorsa = getIdMacchina() != null ? getIdMacchina() : getIdRisorsaUmana();//Fix 26028
    String where = RilevazioneDatiProdTesTM.ID_AZIENDA + " ='" + getIdAzienda() + "' AND " +
    							 //Fix 26028 inizio
                   //RilevazioneDatiProdTesTM.R_OPERATORE + " ='" + getIdOperatore() + "' AND " +
                   RilevazioneDatiProdTesTM.R_OPERATORE + " ='" + getIdOperatore() + "' AND ";
									 if (idRisorsa != null)
										 where += RilevazioneDatiProdTesTM.R_RISORSA + " ='" + idRisorsa + "' AND ";
									 //Fix 26028 fine
                   //RilevazioneDatiProdTesTM.DATA_RIL + " =" + ConnectionManager.getCurrentDatabase().getLiteral(TimeUtils.getCurrentDate()) + " AND " + //Fix 13175
									 //Fix 26028 inizio
                   //RilevazioneDatiProdTesTM.NUM_RITORNO + " ='" + getBollaLavorazione() + "' AND " +
									 where += RilevazioneDatiProdTesTM.NUM_RITORNO + " ='" + getBollaLavorazione() + "' AND " +
									 //Fix 26028 fine
                   RilevazioneDatiProdTesTM.STATO_RIL + " ='" + RilevazioneDatiProdTes.IN_CORSO + "' AND " +
                   RilevazioneDatiProdTesTM.STATO + " ='" + DatiComuniEstesi.INCOMPLETO + "'"; //Fix 13264
			       //Fix 35799 inizio
				   if (getPersDatiPrdCausaleRilev() != null)
				      where += " AND " + RilevazioneDatiProdTesTM.R_CAUSALE_RIL + " ='" + getPersDatiPrdCausaleRilev().getIdCausaleRilevazione() + "'";
				   //Fix 35799 fine									 
   //Fix 13264 inizio
	PersistentObjectCursor poCursor = null;//40762
    try{
      //Fix 17768 inizio
      String className = RilevazioneDatiProdTes.class.getName();
      String orderBy ="";
      poCursor = new PersistentObjectCursor(className, where, orderBy, PersistentObject.NO_LOCK);
      //Fix 23542 Inizio
      /*if (poCursor.hasNext())
        return (RilevazioneDatiProdTes) poCursor.next();*/
      RilevazioneDatiProdTes first = null;
      while (poCursor.hasNext() && ret == null) {
        RilevazioneDatiProdTes tmp = (RilevazioneDatiProdTes) poCursor.next();
        if (first == null){
          first=tmp;
        }
        if (Utils.areEqual(tmp.getIdRisorsa(), getIdMacchina())){
          ret=tmp;
        }
      }
      if (ret == null)
        ret = first;
      //Fix 23542 Fine
      //poCursor.close();//Fix 23584//40762
      /*Vector vect = RilevazioneDatiProdTes.retrieveList(where, RilevazioneDatiProdTesTM.DATA_RIL + " DESC", true);
      if(!vect.isEmpty()){
        return (RilevazioneDatiProdTes)vect.get(0);
      }*/
      //Fix 17768 fine
   }catch(Exception ex){
     ex.printStackTrace(Trace.excStream);
   }
    //40762 inizio
    finally {
		if(poCursor != null)
			try{poCursor.free();}catch(SQLException e) {e.printStackTrace(Trace.excStream);}
	}
    //40762 fine
   //Fix 13264 fine
   //return null; //Fix 23542 --Riga commentata
   return ret; //Fix 23542
  }

  //Fix 13434 inizio
  public RilevazioneDatiProdTes cercaRilevazioneIncompleta(){
    String where = RilevazioneDatiProdTesTM.ID_AZIENDA + " ='" + getIdAzienda() + "' AND " +
                   RilevazioneDatiProdTesTM.R_OPERATORE + " ='" + getIdOperatore() + "' AND " +
                   RilevazioneDatiProdTesTM.MODALITA_RIL + " <>'" + RilevazioneDatiProdTes.RIDOTTA + "' AND " + // Fix 14721
                   //RilevazioneDatiProdTesTM.DATA_RIL + " =" + ConnectionManager.getCurrentDatabase().getLiteral(TimeUtils.getCurrentDate()) + " AND " + //Fix 13175
                   RilevazioneDatiProdTesTM.NUM_RITORNO + " ='" + getBollaLavorazione() + "' AND " +
                   RilevazioneDatiProdTesTM.STATO + " ='" + DatiComuniEstesi.INCOMPLETO + "'"; //Fix 13264
    //Fix 35799 inizio
    if (getPersDatiPrdCausaleRilev() != null)
       where += " AND " + RilevazioneDatiProdTesTM.R_CAUSALE_RIL + " ='" + getPersDatiPrdCausaleRilev().getIdCausaleRilevazione() + "'";
    //Fix 35799 fine
    RilevazioneDatiProdTes ret = null; //Fix 23584
    PersistentObjectCursor poCursor = null;//40762
    try{
      //Fix 17768 inizio
      String className = RilevazioneDatiProdTes.class.getName();
      String orderBy = RilevazioneDatiProdTesTM.DATA_RIL + " DESC";
      poCursor = new PersistentObjectCursor(className, where, orderBy, PersistentObject.NO_LOCK);
      if (poCursor.hasNext())
      	//Fix 23584 inizio
        //return (RilevazioneDatiProdTes) poCursor.next();
      	ret = (RilevazioneDatiProdTes) poCursor.next();
      //poCursor.close();//40762
      	//Fix 23584 fine
      /*Vector vect = RilevazioneDatiProdTes.retrieveList(where, RilevazioneDatiProdTesTM.DATA_RIL + " DESC", true);
      if(!vect.isEmpty()){
        return (RilevazioneDatiProdTes)vect.get(0);
      }*/
      //Fix 17768 fine
   }catch(Exception ex){
     ex.printStackTrace(Trace.excStream);
   }
    //40762 inizio
    finally {
		if(poCursor != null)
			try{poCursor.free();}catch(SQLException e) {e.printStackTrace(Trace.excStream);}
	}
    //40762 fine
   //Fix 23584 inizio
   //return null;
   return ret;
   //Fix 23584 fine
  }
  //Fix 13434 fine

  public RilevazioneDatiProdTes cercaRilevazioneSospesa(){
    String where = RilevazioneDatiProdTesTM.ID_AZIENDA + " ='" + getIdAzienda() + "' AND " +
                   RilevazioneDatiProdTesTM.R_OPERATORE + " ='" + getIdOperatore() + "' AND " +
                   //RilevazioneDatiProdTesTM.DATA_RIL + " =" + ConnectionManager.getCurrentDatabase().getLiteral(TimeUtils.getCurrentDate()) + " AND " + //Fix 13175
                   RilevazioneDatiProdTesTM.NUM_RITORNO + " ='" + getBollaLavorazione() + "' AND " +
                   RilevazioneDatiProdTesTM.STATO_RIL + " ='" + RilevazioneDatiProdTes.SOSPESA + "' AND " +
                   RilevazioneDatiProdTesTM.STATO + " ='" + DatiComuniEstesi.INCOMPLETO + "'"; //Fix 13264
    //Fix 35799 inizio
	if (getPersDatiPrdCausaleRilev() != null)
	    where += " AND " + RilevazioneDatiProdTesTM.R_CAUSALE_RIL + " ='" + getPersDatiPrdCausaleRilev().getIdCausaleRilevazione() + "'";
	//Fix 35799 fine	
    RilevazioneDatiProdTes ret = null;//Fix 23584
    PersistentObjectCursor poCursor = null;//40762
    try{
      //Fix 17768 inizio
      String className = RilevazioneDatiProdTes.class.getName();
      String orderBy = RilevazioneDatiProdTesTM.DATA_RIL + " DESC";
      poCursor = new PersistentObjectCursor(className, where, orderBy, PersistentObject.NO_LOCK);
      if (poCursor.hasNext())
      	//Fix 23584 inizio
        //return (RilevazioneDatiProdTes) poCursor.next();
      	ret = (RilevazioneDatiProdTes) poCursor.next();
      //poCursor.close();//40762
        //Fix 23584 fine
      /*Vector vect = RilevazioneDatiProdTes.retrieveList(where, RilevazioneDatiProdTesTM.DATA_RIL + " DESC", true);
      if(!vect.isEmpty()){
        return (RilevazioneDatiProdTes)vect.get(0);
      }*/
      //Fix 17768 fine
   }catch(Exception ex){
     ex.printStackTrace(Trace.excStream);
   }
	//40762 inizio
    finally {
		if(poCursor != null)
			try{poCursor.free();}catch(SQLException e) {e.printStackTrace(Trace.excStream);}
	}
    //40762 fine
   //Fix 23584 inizio
   //return null;
    return ret;
   //Fix 23584 fine
  }

  //Fix 13434 inizio
  public RilevazioneDatiProdTes cercaRilevazioneIncompletaNonProd(){
    String where = RilevazioneDatiProdTesTM.ID_AZIENDA + " ='" + getIdAzienda() + "' AND " +
                   RilevazioneDatiProdTesTM.R_OPERATORE + " ='" + getIdOperatore() + "' AND " +
                   //RilevazioneDatiProdTesTM.DATA_RIL + " =" + ConnectionManager.getCurrentDatabase().getLiteral(TimeUtils.getCurrentDate()) + " AND " + //Fix 13175
                   RilevazioneDatiProdTesTM.TIPO_DICHIAR + " ='" + PersDatiPrdCausaleRilev.NON_PRODUTTIVA + "' AND " +
                   RilevazioneDatiProdTesTM.STATO + " ='" + DatiComuniEstesi.INCOMPLETO + "'"; //Fix 13434
    RilevazioneDatiProdTes ret = null;//Fix 23584
    PersistentObjectCursor poCursor = null;//40762
    try{
      //Fix 17768 inizio
      String className = RilevazioneDatiProdTes.class.getName();
      String orderBy = RilevazioneDatiProdTesTM.DATA_RIL + " DESC";
      poCursor = new PersistentObjectCursor(className, where, orderBy, PersistentObject.NO_LOCK);
      if (poCursor.hasNext())
      	//Fix 23584 inizio
        //return (RilevazioneDatiProdTes) poCursor.next();
      	ret = (RilevazioneDatiProdTes) poCursor.next();
      //poCursor.close();//40762
      	//Fix 23584 fine
      /*Vector vect = RilevazioneDatiProdTes.retrieveList(where, RilevazioneDatiProdTesTM.DATA_RIL + " DESC", true);
      if(!vect.isEmpty()){
        return (RilevazioneDatiProdTes)vect.get(0);
      }*/
      //Fix 17768 fine
   }catch(Exception ex){
     ex.printStackTrace(Trace.excStream);
   }
    //40762 inizio
    finally {
		if(poCursor != null)
			try{poCursor.free();}catch(SQLException e) {e.printStackTrace(Trace.excStream);}
	}
    //40762 fine
   //Fix 23584 inizio
   //return null;
   return ret;
   //Fix 23584 fine
  }
  //Fix 13434 fine

  public RilevazioneDatiProdTes cercaRilevazioneInCorsoNonProd(){
    String where = RilevazioneDatiProdTesTM.ID_AZIENDA + " ='" + getIdAzienda() + "' AND " +
                   RilevazioneDatiProdTesTM.R_OPERATORE + " ='" + getIdOperatore() + "' AND " +
                   //RilevazioneDatiProdTesTM.DATA_RIL + " =" + ConnectionManager.getCurrentDatabase().getLiteral(TimeUtils.getCurrentDate()) + " AND " + //Fix 13175
                   RilevazioneDatiProdTesTM.TIPO_DICHIAR + " ='" + PersDatiPrdCausaleRilev.NON_PRODUTTIVA + "' AND " +
                   RilevazioneDatiProdTesTM.STATO_RIL + " ='" + RilevazioneDatiProdTes.IN_CORSO + "' AND " +
                   RilevazioneDatiProdTesTM.STATO + " ='" + DatiComuniEstesi.INCOMPLETO + "'"; //Fix 13434
    RilevazioneDatiProdTes ret = null;//Fix 23584
    PersistentObjectCursor poCursor = null;//40762
    try{
      //Fix 17768 inizio
      String className = RilevazioneDatiProdTes.class.getName();
      String orderBy = RilevazioneDatiProdTesTM.DATA_RIL + " DESC";
      poCursor = new PersistentObjectCursor(className, where, orderBy, PersistentObject.NO_LOCK);
      if (poCursor.hasNext())
      	//Fix 23584 inizio
        //return (RilevazioneDatiProdTes) poCursor.next();
      	ret = (RilevazioneDatiProdTes) poCursor.next();
      //poCursor.close();//40762
      	//Fix 23584 fine
      /*Vector vect = RilevazioneDatiProdTes.retrieveList(where, RilevazioneDatiProdTesTM.DATA_RIL + " DESC", true);
      if(!vect.isEmpty()){
        return (RilevazioneDatiProdTes)vect.get(0);
      }*/
      //Fix 17768 fine
   }catch(Exception ex){
     ex.printStackTrace(Trace.excStream);
   }
	//40762 inizio
    finally {
		if(poCursor != null)
			try{poCursor.free();}catch(SQLException e) {e.printStackTrace(Trace.excStream);}
	}
    //40762 fine
   //Fix 23584 inizio
   //return null;
   return ret;
   //Fix 23584 fine
  }

  //Fix 13434 inizio
  public RilevazioneDatiProdTes cercaRilevazioneSospesaNonProd(){
    String where = RilevazioneDatiProdTesTM.ID_AZIENDA + " ='" + getIdAzienda() + "' AND " +
                   RilevazioneDatiProdTesTM.R_OPERATORE + " ='" + getIdOperatore() + "' AND " +
                   //RilevazioneDatiProdTesTM.DATA_RIL + " =" + ConnectionManager.getCurrentDatabase().getLiteral(TimeUtils.getCurrentDate()) + " AND " + //Fix 13175
                   RilevazioneDatiProdTesTM.TIPO_DICHIAR + " ='" + PersDatiPrdCausaleRilev.NON_PRODUTTIVA + "' AND " +
                   RilevazioneDatiProdTesTM.STATO_RIL + " ='" + RilevazioneDatiProdTes.SOSPESA + "' AND " +
                   RilevazioneDatiProdTesTM.STATO + " ='" + DatiComuniEstesi.INCOMPLETO + "'";
    RilevazioneDatiProdTes ret = null;//Fix 23584
    PersistentObjectCursor poCursor = null;//40762
    try{
      //Fix 17768 inizio
      String className = RilevazioneDatiProdTes.class.getName();
      String orderBy = RilevazioneDatiProdTesTM.DATA_RIL + " DESC";
      poCursor = new PersistentObjectCursor(className, where, orderBy, PersistentObject.NO_LOCK);
      if (poCursor.hasNext())
      	//Fix 23584 inizio
        //return (RilevazioneDatiProdTes) poCursor.next();
      	ret = (RilevazioneDatiProdTes) poCursor.next();
      //poCursor.close();//40762
      	//Fix 23584 fine
      /*Vector vect = RilevazioneDatiProdTes.retrieveList(where, RilevazioneDatiProdTesTM.DATA_RIL + " DESC", true);
      if(!vect.isEmpty()){
        return (RilevazioneDatiProdTes)vect.get(0);
      }*/
      //Fix 17768 fine
   }catch(Exception ex){
     ex.printStackTrace(Trace.excStream);
   }
	//40762 inizio
    finally {
		if(poCursor != null)
			try{poCursor.free();}catch(SQLException e) {e.printStackTrace(Trace.excStream);}
	}
    //40762 fine
   //Fix 23584 inizio
   //return null;
   return ret;
   //Fix 23584 fine
  }
  //Fix 13434 fine

  public String getJspName(){
    //Fix 15582 inizio
    if(getPersDatiPrdCausaleRilev() != null && getPersDatiPrdCausaleRilev().isAbilitaDichRidotta()){
      if(getBollaLavorazione() != null)
        return "it/thera/thip/produzione/raccoltaDati/DichiarazioneRidotta.jsp";
      else
        return "it/thera/thip/produzione/raccoltaDati/DichiarazioneRidottaNonProd.jsp";
    }
    //Fix 15582 fine
    else if(getBollaLavorazione() != null){
      //Fix 14721 inizio
      //Fix 14721 fine
      if(getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO || getTipoTimbratura() == RilevazioneDatiProdRig.RIPRESA){
        return "it/thera/thip/produzione/raccoltaDati/DichiarazioneConBollaInizRep.jsp";
      }
      else{
        //Fix 15030 inizio
        char abilitaVers;
        if(getTipoBolla() != RilevazioneDatiProdTes.BOLLA_CUCITA){
          if(getPersDatiPrdCausaleRilev().getCausaleDocumento() != null){
            abilitaVers = getPersDatiPrdCausaleRilev().getCausaleDocumento().getAbilitaVersamenti();
            List prodotti = (getAttivitaEsecutiva() != null ? getAttivitaEsecutiva().getProdotti() : new ArrayList());
            if (abilitaVers != CausaleDocProduzione.NO && checkAttivitaProdotti(prodotti))
              return "it/thera/thip/produzione/raccoltaDati/DichiarazioneVersamenti.jsp";
          }
        }
        if(getTipoBolla() == RilevazioneDatiProdTes.BOLLA_CUCITA){
          if(getMateriale1() != null && getProdotto1() == null)
            return "it/thera/thip/produzione/raccoltaDati/DichiarazionePrelievi.jsp";
          else if(getMateriale1() == null && getProdotto1() != null)
            return "it/thera/thip/produzione/raccoltaDati/DichiarazioneVersamenti.jsp";
          else if(getMateriale1() != null && getProdotto1() != null)
            return "it/thera/thip/produzione/raccoltaDati/DichiarazioneVersamenti.jsp";
        }
        //Fix 15030 fine
        return "it/thera/thip/produzione/raccoltaDati/DichiarazioneConBollaSospFine.jsp";
      }
    }
    else{
       if(getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO || getTipoTimbratura() == RilevazioneDatiProdRig.RIPRESA){
         return "it/thera/thip/produzione/raccoltaDati/DichiarazioneSenzaBollaInizRep.jsp";
       }
       else{
         return "it/thera/thip/produzione/raccoltaDati/DichiarazioneSenzaBollaSospFine.jsp";
       }
    }
  }


  /**
   * Salva l'oggetto.
   * @return <code>ErrorCodes</code> Codice di errore.
   * @throws SQLException Eccezione sql.
   * @see com.thera.thermfw.persist.ErrorCodes
   * @see com.thera.thermfw.persist.PersistentObject#save
   */
   public int save(boolean force) throws SQLException{
     if(getBollaLavorazione() != null){
       int rc = 0;
       if (getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO || getTipoTimbratura() == RilevazioneDatiProdRig.RIPRESA) {
         //return SaveInizioRipresa(); //Fix 12841
         rc = SaveInizioRipresa(); //Fix 12841
       }
       else if (getTipoTimbratura() == RilevazioneDatiProdRig.SOSPENSIONE || getTipoTimbratura() == RilevazioneDatiProdRig.FINE) {
         //return SaveSospensioneFine();
         rc = SaveSospensioneFine(); //Fix 12841
       }
       //Fix 12841 --inizio
       if(rc < 0){
         return rc;
       }
       return saveListaAttivita(rc);
       //Fix 12841 --fine
     }
    // else {
    else if(getBollaLavorazione() == null && getIdMacchina() == null){//Fix 16741
       if (getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO || getTipoTimbratura() == RilevazioneDatiProdRig.RIPRESA) {
         return SaveInizioRipresaNonProd();
       }
       else if (getTipoTimbratura() == RilevazioneDatiProdRig.SOSPENSIONE || getTipoTimbratura() == RilevazioneDatiProdRig.FINE) {
         return SaveSospensioneFineNonProd();
       }
     }
     else { //Fix 16741 inizio
       if (getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO || getTipoTimbratura() == RilevazioneDatiProdRig.RIPRESA) {
         return SaveInizioRipresaFermo();
       }
       else if (getTipoTimbratura() == RilevazioneDatiProdRig.SOSPENSIONE || getTipoTimbratura() == RilevazioneDatiProdRig.FINE) {
         return SaveSospensioneFineFermo();
       }
     } //Fix 16741 fine
     return super.save(force);
   }

  public int SaveInizioRipresa() throws SQLException {
    int rc = 0;
    RilevazioneDatiProdTes rilevazione = cercaRilevazioneSospesa(); //Fix 13434
    if (rilevazione != null) {
      if (getPersDatiPrdCausaleRilev().getTipoDichiarazione() == PersDatiPrdCausaleRilev.FERMO
           && isSospendiRilevInCorso()) {
          RilevazioneDatiProdRig riga = creaRigaRilevazioneFine(rilevazione);
          rilevazione.getRighe().add(riga);
          rc = rilevazione.save();
          if(rc <0)
             return rc;
          RilevazioneDatiProdTes testata = creaNuovoTestataRilevazione();
          return saveNuovoRilevazione(testata);
      }
      else {
        if (getTipoTimbratura() == RilevazioneDatiProdRig.RIPRESA) {
          //Fix 16109 inizio
          if (rilevazione != null) {
            RilevazioneDatiProdTes testata = rilevazione;
            if(testata.getTipoDichiarazione() != PersDatiPrdCausaleRilev.NON_PRODUTTIVA){
              testata.setTipoRisorsa(getTipoRisorsa());
              testata.setLivelloRisorsa(getLivelloRisorsa());
              testata.setIdRisorsa(getIdRisorsa());
            }
            testata.setNote(getNote());
          }
          //Fix 16109 fine
          RilevazioneDatiProdRig riga = creaRigaRilevazione(rilevazione);
          rilevazione.getRighe().add(riga);
          return rilevazione.save(rc); //Fix 15064
          /*
          if(rilevazione.getTipoBolla() != RilevazioneDatiProdTes.BOLLA_CUCITA) //Fix 14722 inizio
            return rilevazione.save(rc);
          // Fix 14722 inizio
          else{
            int ret = rilevazione.save();
            if(ret >= 0)
              return aggiornaRigaBollaRagg(rilevazione, riga);
            return ret;
          }
          // Fix 14722 fine
          */
        }
        else {
          RilevazioneDatiProdTes testata = creaNuovoTestataRilevazione();
          return saveNuovoRilevazione(testata);
        }
      }
    }
    else{
      RilevazioneDatiProdTes testata = creaNuovoTestataRilevazione();
      return saveNuovoRilevazione(testata);
    }
  }

  public int SaveSospensioneFine() throws SQLException {
   RilevazioneDatiProdTes nuovoTestata = null;
   RilevazioneDatiProdTes rilevazione = iRilevazioneTesFine; //Fix 27778
   if (rilevazione == null) //Fix 27778
	  rilevazione = cercaRilevazioneInCorso();//Fix 27778
   //RilevazioneDatiProdTes rilevazione = cercaRilevazioneInCorso(); //Fix 27778
   //Fix 14721 inizio
   if(getPersDatiPrdCausaleRilev() != null && getPersDatiPrdCausaleRilev().isAbilitaDichRidotta())
     rilevazione = null;
   //Fix 14721 fine
   if (rilevazione != null) {
     //Fix 13434 blocco commentato
     /*if(getPersDatiPrdCausaleRilev().getTipoDichiarazione() == PersDatiPrdCausaleRilev.FERMO
         && isRiprendiRilevSospesa()){
         nuovoTestata = creaNuovoTestataRilevazione(rilevazione.getPersDatiPrdCausaleRilev());
         RilevazioneDatiProdRig rigaInizio = creaRigaRilevazioneInizio(nuovoTestata);
         nuovoTestata.getRighe().add(rigaInizio);
     }
     RilevazioneDatiProdTes testata = nuovoTestata != null ? nuovoTestata : rilevazione;
     if(nuovoTestata != null){ //Nuovo testata
       return saveNuovoRilevazione(testata);
     }
     else{*/
       RilevazioneDatiProdTes testata = rilevazione; //Fix 13434
       //Fix 16109 inizio
       if(testata.getTipoDichiarazione() != PersDatiPrdCausaleRilev.NON_PRODUTTIVA){
         testata.setTipoRisorsa(getTipoRisorsa());
         testata.setLivelloRisorsa(getLivelloRisorsa());
         testata.setIdRisorsa(getIdRisorsa());
       }
       //Fix 16109 fine
       testata.setNote(getNote()); //Fix 15866
       testata.setStatoSaldo(getSaldo()); // Fix 16333
       RilevazioneDatiProdRig riga = creaRigaRilevazione(testata);
       testata.getRighe().add(riga);
       //Fix 12841 --inizio
       if(getTipoTimbratura() == RilevazioneDatiProdRig.FINE){
         iRilevazioneTesFine = testata;
       }
       //Fix 12841 --fine
       //Fix 12974 --inizio
       //return testata.save();
        int rc = testata.save();
        if(rc < 0)
           return rc;
         //Fix 14722 --inizio
         if(rc >= 0){
          testata.getRigheMateriali().addAll(creaRigheRilevazioneMateriali(testata));
          testata.getRigheVersamenti().addAll(creaRigheRilevazioneVersamenti(testata));
          rc = testata.save();
        }
        //Fix 14722 --fine
        return rc; //Fix 13434
       //Fix 12974 --fine
     //}//Fix 13434
   }
   else{
     nuovoTestata = creaNuovoTestataRilevazione();
     return saveNuovoRilevazione(nuovoTestata);
   }
  }

  public int SaveInizioRipresaNonProd() throws SQLException {
    if (getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO) {
      RilevazioneDatiProdTes testata = creaNuovoTestataRilevazione();
      return saveNuovoRilevazione(testata);
    }
    else{
      RilevazioneDatiProdTes rilevazioneEsistente = cercaRilevazioneSospesaNonProd();
      if (rilevazioneEsistente != null) {
        RilevazioneDatiProdRig riga = creaRigaRilevazione(rilevazioneEsistente);
        rilevazioneEsistente.setNote(getNote()); //Fix 29435
        rilevazioneEsistente.getRighe().add(riga);
        return rilevazioneEsistente.save();
      }
      RilevazioneDatiProdTes testata = creaNuovoTestataRilevazione();
       return saveNuovoRilevazione(testata);
    }
  }

  public int SaveSospensioneFineNonProd() throws SQLException {
    if(!getPersDatiPrdCausaleRilev().isAbilitaDichRidotta()){ //Fix 16741
      RilevazioneDatiProdTes rilevazioneEsistente = cercaRilevazioneInCorsoNonProd();
      if (rilevazioneEsistente != null) {
        RilevazioneDatiProdRig riga = creaRigaRilevazione(rilevazioneEsistente);
        //Fix 18667 Inizio
        if(getTipoTimbratura() == RilevazioneDatiProdRig.FINE){
          iRilevazioneTesFine = rilevazioneEsistente;
        }
        //Fix 18667 Fine
        rilevazioneEsistente.setNote(getNote()); //Fix 29435
        rilevazioneEsistente.getRighe().add(riga);
        return rilevazioneEsistente.save();
      }
    }
    RilevazioneDatiProdTes testata = creaNuovoTestataRilevazione();
    return saveNuovoRilevazione(testata);
  }

  public int saveNuovoRilevazione(RilevazioneDatiProdTes testata) throws SQLException {
    int ret = 0;
    RilevazioneDatiProdTesDataCollector bodc = (RilevazioneDatiProdTesDataCollector) getRilevTestataBodc(testata);
    if (bodc != null) {
      bodc.completaDocumento();
      ret = bodc.save();
      if (ret >= 0) { //Fix 13264
        completaDatiTestataRilevazione(testata);
        RilevazioneDatiProdRig riga = creaRigaRilevazione(testata);
        testata.getRighe().add(riga);
        //Fix 12841 --inizio
        if(getTipoTimbratura() == RilevazioneDatiProdRig.FINE){
          iRilevazioneTesFine = testata;
        }
        //Fix 12841 --fine
        //Fix 13264 inizio

        if(getTipoTimbratura() == RilevazioneDatiProdRig.SOSPENSIONE ||
           //getTipoTimbratura() == RilevazioneDatiProdRig.FINE) { //Fix 16109 //Fix 24177
        		getTipoTimbratura() == RilevazioneDatiProdRig.FINE 
        		|| (getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO 
        				&& getPersDatiPrdCausaleRilev() != null && getPersDatiPrdCausaleRilev().isAbilitaPrelievo()
        				&& getPersDatiPrdCausaleRilev().getPosizionePrelievo() == PersDatiPrdCausaleRilev.INIZIO)) {
          testata.getRigheMateriali().addAll(creaRigheRilevazioneMateriali(testata));//Fix 14722
          if(getTipoTimbratura() == RilevazioneDatiProdRig.SOSPENSIONE || getTipoTimbratura() == RilevazioneDatiProdRig.FINE) //Fix 30509
             testata.getRigheVersamenti().addAll(creaRigheRilevazioneVersamenti(testata));//Fix 14722
        }

        ret = testata.save();
        //Fix 13434 blocco commentato
        /*char td = getPersDatiPrdCausaleRilev().getTipoDichiarazione();
        if (ret >= 0 && (td == PersDatiPrdCausaleRilev.AVANZAMENTO || td == PersDatiPrdCausaleRilev.VERSAMENTO))
          ret = convalidaRilevazione(testata, ret);*/
        //Fix 13264 fine

        //Fix 14722 blocco commentato
        /*
        //Fix 14721 --inizio
        if(ret >= 0){
          testata.getRigheMateriali().addAll(creaRigheRilevazioneMateriali(testata));
          testata.getRigheVersamenti().addAll(creaRigheRilevazioneVersamenti(testata));
          ret = testata.save();
        }
        //Fix 14721 --Fine
         **/
      }
    }
    else //Fix 13264
      ret = super.save();
    return ret;
  }

  public RilevazioneDatiProdTes creaNuovoTestataRilevazione(){
      RilevazioneDatiProdTes testata = (RilevazioneDatiProdTes)Factory.createObject(RilevazioneDatiProdTes.class);
      testata.setIdAzienda(getIdAzienda());
      testata.setIdUtenteLgn(getIdUtenteLgn());
      testata.setIdOperatore(getIdOperatore());
      testata.setIdCausaleRilevazione(getIdCausaleRilevazione());
      testata.setTipoDichiarazione(getPersDatiPrdCausaleRilev().getTipoDichiarazione());
      testata.setIdCausaleDocPrd(getPersDatiPrdCausaleRilev().getIdCausaleDocumento());
      testata.setNumeroRitorno(getBollaLavorazione());
      testata.getNumeratoreHandler().setIdNumeratore(getPersDatiPrdCausaleRilev().getIdNumeratoreRil());
      testata.getNumeratoreHandler().setNumeratore(getPersDatiPrdCausaleRilev().getNumeratoreRil()); //Fix 15064
      testata.getNumeratoreHandler().setIdSerie(getPersDatiPrdCausaleRilev().getIdSerieRil());
      //Fix 14721 inizio
      if(getPersDatiPrdCausaleRilev() != null && getPersDatiPrdCausaleRilev().isAbilitaDichRidotta()){
        if(getTempo() != null){
          int[] oreMinuti = TimeUtils.getValues(getTempo());
          BigDecimal ore = new BigDecimal(oreMinuti[0]);
          BigDecimal minuti = new BigDecimal(oreMinuti[1]);
          testata.setOreMillesimi(testata.calcolaOreMillesimi(ore, minuti, null)); //Fix 17082
        }
		//Fix 19758 inizio
        else /*if(getOreRilevate() != null && getMinutiRilevati() != null)*/ { //Fix 25810
          //testata.setOreMillesimi(testata.calcolaOreMillesimi(getOreRilevate(), getMinutiRilevati(), null));//Fix 30080
          testata.setOreMillesimi(testata.calcolaOreMillesimi(getOreRilevate(), getMinutiRilevati(), getSecondiRilevati()));//Fix 30080
        }
        //Fix 19758 fine
        testata.setModalitaRilevazione(RilevazioneDatiProdTes.RIDOTTA);
        testata.setStatoRilevazione(RilevazioneDatiProdTes.TERMINATA);
      }
      //Fix 14721 fine
      //Fix 14722 inizio
      if(getTipoBolla() == RilevazioneDatiProdTes.BOLLA_CUCITA && getBollaCucita() != null){
        testata.setBollaCucita(getBollaCucita());
        testata.setTipoBolla(RilevazioneDatiProdTes.BOLLA_CUCITA);
        testata.setModalitaRilevazione(RilevazioneDatiProdTes.COMPLETA);
      }
      //Fix 14722 fine
      //Fix 19592 Inzio
      testata.setStatoSaldo(getSaldo());
      testata.setNote(getNote());
      //Fix 19592 Fine
      //Fix 19702 - inizio
      impostaDatiTestataPers(testata);
      //Fix 19702 - fine
      return testata;
  }

  public RilevazioneDatiProdTes creaNuovoTestataRilevazione(PersDatiPrdCausaleRilev causaleRilevazione){
     RilevazioneDatiProdTes testata = (RilevazioneDatiProdTes)Factory.createObject(RilevazioneDatiProdTes.class);
     testata.setIdAzienda(getIdAzienda());
     testata.setIdUtenteLgn(causaleRilevazione.getIdUtenteLogin());
     testata.setIdOperatore(getIdOperatore());
     testata.setIdCausaleRilevazione(causaleRilevazione.getIdCausaleRilevazione());
     testata.setTipoDichiarazione(causaleRilevazione.getTipoDichiarazione());
     testata.setIdCausaleDocPrd(causaleRilevazione.getIdCausaleDocumento());
     testata.setNumeroRitorno(getBollaLavorazione());
     testata.getNumeratoreHandler().setIdNumeratore(causaleRilevazione.getIdNumeratoreRil());
     testata.getNumeratoreHandler().setIdSerie(causaleRilevazione.getIdSerieRil());
     return testata;
 }

  public void completaDatiTestataRilevazione(RilevazioneDatiProdTes testata){
      testata.setIdAnnoOrdine(getIdAnnoOrdine());
      testata.setIdNumeroOrdine(getIdNumeroOrdine());
      testata.setIdRigaAttivita(getIdRigaAttivita());
      testata.setIdArticolo(getIdArticolo());
      if(testata.getTipoDichiarazione() != PersDatiPrdCausaleRilev.NON_PRODUTTIVA){
        testata.setTipoRisorsa(getTipoRisorsa());
        testata.setLivelloRisorsa(getLivelloRisorsa());
        testata.setIdRisorsa(getIdRisorsa());
      }
      testata.setNote(getNote());
   }

   public RilevazioneDatiProdRig creaRigaRilevazione(RilevazioneDatiProdTes testata){
     RilevazioneDatiProdRig riga = (RilevazioneDatiProdRig)Factory.createObject(RilevazioneDatiProdRig.class);
     riga.setIdAzienda(getIdAzienda());
     if (testata.getModalitaRilevazione() == RilevazioneDatiProdTes.RIDOTTA) //Fix 30621
        testata.getNumeratoreHandler().setDataDocumento(getDataFine()); //Fix 30440
     riga.setTestata(testata);
     riga.setTipoTimbratura(getTipoTimbratura());
     //riga.setDataRilevazione(TimeUtils.getCurrentDate()); //Fix 13434 //Fix 30440
     if (testata.getModalitaRilevazione() == RilevazioneDatiProdTes.RIDOTTA) //Fix 30621
        riga.setDataRilevazione(getDataFine());//Fix 30440
     else//Fix 30621
    	riga.setDataRilevazione(TimeUtils.getCurrentDate()); //Fix 30621	 
     if(getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO || getTipoTimbratura() == RilevazioneDatiProdRig.RIPRESA){
       riga.setOraRilevazione(getOraInizio());
     }
     else{
       riga.setOraRilevazione(getOraFine());
       riga.setQuantita(getQuantita());
       riga.setQuantitaScarto(getQtaScarto());
       //Fix 14725 --inizio
       Articolo articolo = testata.getArticolo();
       if(articolo != null && articolo.getIdUMSecMag() != null) {
         //Fix 16109 inizio
         riga.setQtaSec(getQuantitaSec());
         riga.setQtaScartoSec(getQtaScartoSec());
         if (getQuantita() != null && getQuantitaSec() == null) {
           BigDecimal qtaSec = calcolaQuantitaSec(getQuantita(), testata.getArticolo(), testata.getIdVersione());
           riga.setQtaSec(qtaSec);
         }
         else if (getQuantita() == null && getQuantitaSec() != null) {
           BigDecimal qtaPrm = calcolaQuantitaPrm(getQuantitaSec(), testata.getArticolo(), testata.getIdVersione());
           riga.setQuantita(qtaPrm);
         }

         if (getQtaScarto() != null && getQtaScartoSec() == null) {
           BigDecimal qtaScaSec = calcolaQuantitaSec(getQtaScarto(), testata.getArticolo(), testata.getIdVersione());
           riga.setQtaScartoSec(qtaScaSec);
         }
         else if (getQtaScarto() == null && getQtaScartoSec() != null) {
           BigDecimal qtaScaPrm = calcolaQuantitaPrm(getQtaScartoSec(), testata.getArticolo(), testata.getIdVersione());
           riga.setQuantitaScarto(qtaScaPrm);
         }
         //Fix 16109 fine
       }
       //Fix 14725 --fine
     }
     return riga;
   }

   public RilevazioneDatiProdRig creaRigaRilevazioneFine(RilevazioneDatiProdTes testata){
     RilevazioneDatiProdRig riga = (RilevazioneDatiProdRig)Factory.createObject(RilevazioneDatiProdRig.class);
     riga.setIdAzienda(getIdAzienda());
     riga.setTestata(testata);
     riga.setTipoTimbratura(RilevazioneDatiProdRig.FINE);
     riga.setDataRilevazione(TimeUtils.getCurrentDate()); //Fix 13434
     riga.setOraRilevazione(getOraInizio());
     riga.setQuantita(RilevazioneDatiProdTes.ZERO);
     riga.setQuantitaScarto(RilevazioneDatiProdTes.ZERO);
     return riga;
   }

   public RilevazioneDatiProdRig creaRigaRilevazioneInizio(RilevazioneDatiProdTes testata){
     RilevazioneDatiProdRig riga = (RilevazioneDatiProdRig)Factory.createObject(RilevazioneDatiProdRig.class);
     riga.setIdAzienda(getIdAzienda());
     riga.setTestata(testata);
     riga.setTipoTimbratura(RilevazioneDatiProdRig.INIZIO);
     riga.setDataRilevazione(TimeUtils.getCurrentDate()); //Fix 13434
     riga.setOraRilevazione(getOraFine());
     return riga;
   }

  public BODataCollector getRilevTestataBodc(RilevazioneDatiProdTes testata){
     try{
       ClassADCollection cadc = ClassADCollectionManager.collectionWithName("RilevazioneDatiProdTes");
       String collectorName = cadc.getBODataCollector();
       if (collectorName == null || collectorName.equals(""))
        collectorName = BODataCollector.class.getName();
       BODataCollector bodc = (BODataCollector) Factory.createObject(collectorName);
       bodc.initialize("RilevazioneDatiProdTes", true);
       bodc.setBo(testata);
       bodc.loadAttValue();
       bodc.setAutoCommit(false); //Fix 15217
//       bodc.setAutoCheck(false);
       return bodc;
     }catch(Exception ex){
       ex.printStackTrace(Trace.excStream);
     }
     return null;
   }

   //Fix 12841 --inizio
   public String getProssimaAttivita(){
     if(getIdMacchina() != null){
       return getProssimaAttivitaInternal(getIdMacchina(), Risorsa.MACCHINE);
     }
     else if(getIdOperatore() != null){
       return getProssimaAttivitaInternal(getIdOperatore(), Risorsa.RISORSE_UMANE);
     }
     return null;
   }

  public String getProssimaAttivitaInternal(String idRisorsa, char tipoRisorsa) {
     //Fix 34100 -- Blocco commentato inizio
	 /*Vector rilevazioni = getRilevazioneSospesa(idRisorsa, tipoRisorsa);
     if(!rilevazioni.isEmpty()){
        return ((RilevazioneDatiProdTes)rilevazioni.get(0)).getNumeroRitorno();
     }
     else{
         //Fix 13082 --inizio
        //Vector listaAtv = getListAttivitaNonIniziata(idRisorsa, tipoRisorsa);
        Vector listaAtv = getListAttivitaNonIniziataProssimaAtv(idRisorsa, tipoRisorsa);
        //Fix 13082 --fine
        //Fix 13434 inizio
        if (!listaAtv.isEmpty()) {
           ListaAttivita la = (ListaAttivita)listaAtv.get(0);
           setListaAttivita(la);
           return la.getNumRitorno();
        }
        //Fix 13434 fine
      }*/
     //Fix 34100 -- Blocco commentato fine
	 //Fix 34100 -- Inizio
	 PersistentObjectCursor cursor = getRilevazioneSospesaCursor(idRisorsa, tipoRisorsa);
	 try {
		if (cursor != null && cursor.hasNext())
			return ((RilevazioneDatiProdTes) cursor.next()).getNumeroRitorno();
		else {
			Vector listaAtv = getListAttivitaNonIniziataProssimaAtvCursor(idRisorsa, tipoRisorsa);
			if (!listaAtv.isEmpty()) {
				ListaAttivita la = (ListaAttivita) listaAtv.get(0);
				setListaAttivita(la);
				return la.getNumRitorno();
			}
		}
	 } catch (SQLException sqle) {
		sqle.printStackTrace(Trace.excStream);
		;
	 } finally {
		if (cursor != null)
			try {
				cursor.free();
			} catch (SQLException e) {
				e.printStackTrace();
			}
	 }
     //Fix 34100 -- Fine
    return null;
  }

  public Vector getRilevazioneSospesa(String idRisorsa, char tipoRisorsa) {
    Vector rilevazioni = new Vector();
    String where = RilevazioneDatiProdTesTM.ID_AZIENDA + "='" + getIdAzienda() + "' AND " +
                   RilevazioneDatiProdTesTM.TIPO_RISORSA + "='" + tipoRisorsa + "' AND " +
                   RilevazioneDatiProdTesTM.LIVELLO_RISORSA + "='" + Risorsa.MATRICOLA + "' AND " +
                   RilevazioneDatiProdTesTM.R_RISORSA + "='" + idRisorsa + "' AND " +
                   RilevazioneDatiProdTesTM.STATO_RIL + "='" + RilevazioneDatiProdTes.SOSPESA + "'";
    try{
      rilevazioni = RilevazioneDatiProdTes.retrieveList(where, "", true);
    }
    catch(Exception ex){
        ex.printStackTrace(Trace.excStream);
    }
    return rilevazioni;
  }

  //Fix 34100
  /**
   * @deprecated
  */
  public Vector getListAttivitaNonIniziata(String idRisorsa, char tipoRisorsa) {
    Vector listaAtv = new Vector();
    //Fix 40438 -- Inizio
    boolean isSoloAtvAssegnate = false;
    if(getPersDatiPrdUtenteRilev() != null ) {
    	isSoloAtvAssegnate = getPersDatiPrdUtenteRilev().isSoloAtvAssegnate();
    }
    //Fix 40438 -- Fine
    String where = ListaAttivitaTM.ID_AZIENDA + "='" + getIdAzienda() + "' AND (" +
                   ListaAttivitaTM.STATO_RIL_ATV + "='" + ListaAttivita.NON_INIZIATA + "' OR " +
                   ListaAttivitaTM.STATO_RIL_ATV + "='" + ListaAttivita.SOSPESA + "') ";
    if (getIdAmbiente() != null)
      where += " AND " + ListaAttivitaTM.ID_AMBIENTE + "='" + getIdAmbiente() + "'"; //Fix 13175 //Fix 13264
    if(tipoRisorsa == Risorsa.MACCHINE){
      //Fix 13082 --inizio
      Risorsa macchina = getMacchina();
      //Fix 40438 -- Inizio
      if(isSoloAtvAssegnate) {
	    where = where + " AND " +
              ListaAttivitaTM.TIPO_RISORSA + "='" + tipoRisorsa + "' AND " +
              ListaAttivitaTM.R_MACCHINA + "='" + idRisorsa + "' ";
      }
      else {
      //Fix 40438 -- Fine
        where = where + " AND " +
              ListaAttivitaTM.TIPO_RISORSA + "='" + tipoRisorsa + "' AND " +
              ListaAttivitaTM.LIVELLO_RISORSA + "='" + Risorsa.RISORSA + "' AND " +
              ListaAttivitaTM.R_RISORSA + "='" + macchina.getIdRisorsaAppart() + "' AND (" +
              ListaAttivitaTM.R_MACCHINA + " IS NULL OR " + ListaAttivitaTM.R_MACCHINA + "='" + idRisorsa + "')"; //Fix 13175 //Fix 13264
      }//Fix 40438
      //Fix 13082 --fine
    }
    else if(tipoRisorsa == Risorsa.RISORSE_UMANE){
      Risorsa operatore = getOperatoreRisorsa(); //Fix 13175
      if (operatore != null) { //Fix 13264
    	//Fix 40438 -- Inizio
    	if(isSoloAtvAssegnate) {
		  where = where + " AND " +
	             ListaAttivitaTM.TIPO_RISORSA + "='" + tipoRisorsa + "' AND " +
	             ListaAttivitaTM.R_OPERATORE + "='" + idRisorsa + "' ";
    	}
    	else {
    	//Fix 40438 -- Fine
          where = where + " AND " +
             ListaAttivitaTM.TIPO_RISORSA + "='" + tipoRisorsa + "' AND " +
             ListaAttivitaTM.LIVELLO_RISORSA + "='" + Risorsa.RISORSA + "' AND " +
             //Fix 20927 inizio
             //ListaAttivitaTM.R_RISORSA + "='" + operatore.getIdRisorsaAppart() + "' AND (" +
             ListaAttivitaTM.R_RISORSA + " IN (" + getRisorseApp(idRisorsa)  + ") AND (" +
             //Fix 20927 fine
             ListaAttivitaTM.R_OPERATORE + " IS NULL OR " + ListaAttivitaTM.R_OPERATORE + "='" + idRisorsa + "')"; //Fix 13175 //Fix 13264
    	}//Fix 40438
      }else
        where = where + " AND " + ListaAttivitaTM.R_OPERATORE + "='" + idRisorsa + "'"; //Fix 13175 //Fix 13264
    }
    try{
       //Fix 13082 --inizio
       String orderBy = ListaAttivitaTM.PRIORITA + "," + ListaAttivitaTM.DATA_INIZIO + "," + ListaAttivitaTM.ORA_INIZIO;
       //listaAtv = ListaAttivita.retrieveList(where, ListaAttivitaTM.PRIORITA, true);
//       listaAtv = ListaAttivita.retrieveList(where, orderBy, true);		//Fix 42131
       listaAtv = getListAttivitaNonIniziataInternal(where, orderBy);		//Fix 42131
       //Fix 13082 --fine
    }
    catch(Exception ex){
       ex.printStackTrace(Trace.excStream);
    }
    return listaAtv;
  }
  
  
  //Fix 42131 - inizio
  protected Vector getListAttivitaNonIniziataInternal(String where, String orderBy) throws Exception {
	  return ListaAttivita.retrieveList(where, orderBy, true);
  }
  //Fix 42131 - fine
  

  public int saveListaAttivita(int rc){
    ListaAttivita listaAttivita = getListaAttivita();
    if(listaAttivita != null){
       if(getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO || getTipoTimbratura() == RilevazioneDatiProdRig.RIPRESA){
          listaAttivita.setStatoRilevAttivita(ListaAttivita.IN_CORSO);
       }
       else if(getTipoTimbratura() == RilevazioneDatiProdRig.FINE){
         BigDecimal qta = RilevDatiPrdTS.getQtaResiduaAtv(listaAttivita.getAttivitaEsecutiva()); //Fix 13264
         if(getSaldo() == DocumentoProduzione.SALDO ||
            (getSaldo() == DocumentoProduzione.AUTOMATICO && qta.compareTo(RilevazioneDatiProdTes.ZERO) == 0)) { //Fix 13264
            listaAttivita.setStatoRilevAttivita(ListaAttivita.COMPLETATA);
         }
         else{
           listaAttivita.setStatoRilevAttivita(ListaAttivita.SOSPESA);
         }
       }
       //Fix 13264 blocco commentato
       /*else{
          listaAttivita.setStatoRilevAttivita(ListaAttivita.SOSPESA);
       }*/
       try{
         //Fix 13082 --inizio
         if(listaAttivita.getTipoRisorsa() == Risorsa.MACCHINE){
           listaAttivita.setIdMacchina(getIdRisorsa());
           //Fix 13264 inizio
           if(getTipoTimbratura() == RilevazioneDatiProdRig.FINE) {
             listaAttivita.setIdOperatore(null);
             BigDecimal qtaRes = listaAttivita.getQtaResiduaUMPrm().subtract(iRilevazioneTesFine.getQuantita());
             if (getQtaScarto() != null)
               qtaRes = qtaRes.subtract(getQtaScarto());
             listaAttivita.setQtaResiduaUMPrm(qtaRes);
             BigDecimal oreRes = listaAttivita.getOreResidue().subtract(iRilevazioneTesFine.getOreMillesimi());
             listaAttivita.setOreResidue(oreRes);
           }
           else
             listaAttivita.setIdOperatore(getIdOperatore());
           listaAttivita.setAssegnata(true);
           //Fix 13264 fine
         }
         else{
           listaAttivita.setIdOperatore(getIdRisorsa());
           listaAttivita.setAssegnata(true);
         }
         //Fix 13082 --fine
         return listaAttivita.save();
       }
       catch(Exception ex){
         ex.printStackTrace(Trace.excStream);
       }
    }
    //Fix 36505 -- Inizio
    else if(getBollaCucita() != null) {
    	return saveListaAtvDiBollaCucita(rc);
    }
    //Fix 36505 -- Fine
    return rc;
  }

  //Fix 12841 --fine
  //Fix 12974 --inizio
   public ErrorMessage checkAttivazioneRilevDatiPrd(){
    if(!PersDatiPrd.getCurrentPersDatiPrd().isAttivaRilevProd()){
      return new ErrorMessage("THIP30T258");
    }
    else if(getCausaliRilevazioneCurrUtente().isEmpty()){
      return new ErrorMessage("THIP30T259");
    }
    return null;
   }

   public List getCausaliRilevazioneCurrUtente(){
    UtenteAzienda ua = ((ThipUser)Security.getCurrentUser()).getUtenteAzienda();
    String where = PersDatiPrdCausaleRilevTM.ID_AZIENDA + " = '" + ua.getIdAzienda() + "' AND " +
                  PersDatiPrdCausaleRilevTM.ID_UTENTE_LGN + " = '" + ua.getIdUtente() + "'";
    try{
     return PersDatiPrdCausaleRilev.retrieveList(where, "", true);
    }catch(Exception ex){
     ex.printStackTrace(Trace.excStream);
    }
    return new ArrayList();
   }

   //Fix 13434 inizio
   // public int convalidaRilevazione(int rc){ // Fix 17955
   public int convalidaRilevazione(int rc, boolean genDoc){ // Fix 17955
     if (iRilevazioneTesFine != null){
       // return convalidaRilevazione(iRilevazioneTesFine, rc); // Fix 17955
       return convalidaRilevazione(iRilevazioneTesFine, rc, genDoc); // Fix 17955
     }
     return rc;
   }
   //Fix 13434 fine

   // public int convalidaRilevazione(RilevazioneDatiProdTes testata, int rc){ // Fix 17955
   public int convalidaRilevazione(RilevazioneDatiProdTes testata, int rc, boolean genDoc){ // Fix 17955
    if(testata.getStatoRilevazione() == RilevazioneDatiProdTes.TERMINATA &&
       testata.getDatiComuniEstesi().getStato() == DatiComuniEstesi.VALIDO &&
       testata.getPersDatiPrdCausaleRilev().isGenAutDocPrd()) { //Fix 13434
        //Fix 14722 inizio
      //convalida(testata);
      if(testata.checkOreMillisZero() == null){//Fix 15866
        // return convalida(testata, 0); // Fix 17955
        //Fix 19148 inizio
        //return convalida(testata, 0, genDoc); // Fix 17955
      	int rc0 = convalida(testata, 0, genDoc);
      	return rc0;
      	//Fix 19148 fine
      }else//Fix 15866 inizio
      {
        try {
          return testata.save();
        }
        catch (Exception ex) {
          ex.printStackTrace(Trace.excStream);
        }
      }//Fix 15866 fine
     /* if(testata.iErrori.isEmpty()) {
        try {
          return testata.save();
        }
        catch(Exception ex) {
          ex.printStackTrace(Trace.excStream);
        }
      }*/  //Fix 14722 fine
    }
    return rc;
  }

  //public void convalida(RilevazioneDatiProdTes testata) {//Fix 14722
  // public int convalida(RilevazioneDatiProdTes testata, int rc) {//Fix 14722 // Fix 17955
  public int convalida(RilevazioneDatiProdTes testata, int rc, boolean genDoc) { // Fix 17955
    //Fix 14722 inizio
    int ret;
    if (rc < 0) {
      return rc;
    }
    if (testata.getTipoBolla() == RilevazioneDatiProdTes.BOLLA_CUCITA) {
      List listRilev = testata.recuperaRilevazioniBolleRaggruppate(); //Fix 15087
      if (listRilev != null) {
        Iterator iter = listRilev.iterator();
        while (iter.hasNext()) {
          // Fix 17955 inizio
          // ret = convalida((RilevazioneDatiProdTes) iter.next(), rc);
          RilevazioneDatiProdTes testataRagg = (RilevazioneDatiProdTes) iter.next();
          ret = convalida(testataRagg, rc, genDoc);
          //if (ret < 0) {
          if (!testataRagg.iErrori.isEmpty()) {
			//Fix 19148 inizio
            Iterator iter2 = testataRagg.iErrori.iterator();
            while (iter2.hasNext()) {
              ErrorMessage err = (ErrorMessage) iter2.next();
              err.setAttOrGroupLabel(KeyHelper.formatKeyString(testataRagg.getAttivitaEsecutivaKey()));
            }
            //Fix 19148 fine
            testata.iErrori.addAll(testataRagg.iErrori);
            // Fix 17955 fine
            //return ret; //Fix 21081
          }
          else {
            //rc += ret; //Fix 19148
            //Fix 15087 inizio
            /*Fix 19148 inizio
            if(genDoc) // Fix 17955
              testata.setStatoRilevazione(RilevazioneDatiProdTes.CONVALIDATA);

            try {
              ret = testata.save();
              if (ret >= 0) {
                //rc += ret; //Fix 19148
		rc = ret; //Fix 19148
              }
              else {
                return ret;
              }
            }
            catch (Exception ex) {
              ex.printStackTrace(Trace.excStream);
            }
            //Fix 15087 fine
			Fix 19148 fine*/
          }
        }
        if(!testata.iErrori.isEmpty()) //Fix 21081
        	return -100; //Fix 21081
		//Fix 19148 inizio
        if(genDoc) // Fix 17955
          testata.setStatoRilevazione(RilevazioneDatiProdTes.CONVALIDATA);
        try {
          ret = testata.save();
          if (ret >= 0) {
            rc += ret;
          }
          else {
            return ret;
          }
        }
        catch (Exception ex) {
          ex.printStackTrace(Trace.excStream);
        }
        //Fix 19148 fine
      }
    }
    else {//Fix 14722 fine
      PersDatiPrdCausaleRilev causaleRilev = testata.getPersDatiPrdCausaleRilev();
      if (causaleRilev.getIdCausaleDocumento() == null) {
        testata.setStatoRilevazione(RilevazioneDatiProdTes.CONVALIDATA);
      }
      else {
        // Fix 17955 inizio
        //DocumentoProduzione docPrd = testata.creaDocumentoProduzione();
        DocumentoProduzione docPrd = null;
        if(genDoc)
          docPrd = testata.creaDocumentoProduzione();
        // Fix 17955 fine
        if (docPrd != null) {
          testata.setIdAnnoDoc(docPrd.getIdAnnoDoc());
          testata.setIdNumeroDoc(docPrd.getIdNumeroDoc());
          testata.setStatoRilevazione(RilevazioneDatiProdTes.CONVALIDATA);
        }
        //Fix 14722 inizio
        if (testata.iErrori.isEmpty()) {
          try {
            ret = testata.save();
            if (ret >= 0) {
              rc += ret;
            }
            else {
              rc = ret;
            }
          }
          catch (Exception ex) {
            ex.printStackTrace(Trace.excStream);
          }
        }//Fix 14722 fine
		//Fix 19148 inizio
        else {
          rc = -100;
        }
        //Fix 19148 fine
      }
    }//Fix 14722
    return rc;//Fix 14722
  }
  //Fix 12974 --fine
  //Fix 13082 --inizio
  public RilevazioneDatiProdTes cercaRilevazioneInCorsoRisorsa(char tipoRisorsa, String idRisorsa){
   String where = "";
   if (tipoRisorsa == Risorsa.MACCHINE)
       where= RilevazioneDatiProdTesTM.ID_AZIENDA + " ='" + getIdAzienda() + "' AND " +
                  //RilevazioneDatiProdTesTM.R_OPERATORE + " ='" + getIdOperatore() + "' AND " +
                  //RilevazioneDatiProdTesTM.DATA_RIL + " =" + ConnectionManager.getCurrentDatabase().getLiteral(TimeUtils.getCurrentDate()) + " AND " +
                  RilevazioneDatiProdTesTM.TIPO_RISORSA + " ='" + tipoRisorsa + "' AND " +
                  RilevazioneDatiProdTesTM.LIVELLO_RISORSA + " ='" + Risorsa.MATRICOLA + "' AND " +
                  RilevazioneDatiProdTesTM.R_RISORSA + " ='" + idRisorsa + "' AND " +
                  RilevazioneDatiProdTesTM.STATO_RIL + " ='" + RilevazioneDatiProdTes.IN_CORSO + "'";
   RilevazioneDatiProdTes ret = null;//Fix 23584
   PersistentObjectCursor poCursor = null;//40762
   try{
     //Fix 17768 inizio
     String className = RilevazioneDatiProdTes.class.getName();
     String orderBy = RilevazioneDatiProdTesTM.DATA_RIL + " DESC";
     poCursor = new PersistentObjectCursor(className, where, orderBy, PersistentObject.NO_LOCK);
     if (poCursor.hasNext())
    	 //Fix 23584 inizio
       //return (RilevazioneDatiProdTes) poCursor.next();
     		ret = (RilevazioneDatiProdTes) poCursor.next();
     //poCursor.close();//40762
     	 //Fix 23584 fine
     /*Vector vect = RilevazioneDatiProdTes.retrieveList(where, RilevazioneDatiProdTesTM.DATA_RIL + " DESC", true);
     if(!vect.isEmpty()){
       return (RilevazioneDatiProdTes)vect.get(0);
     }*/
     //Fix 17768 fine
  }catch(Exception ex){
    ex.printStackTrace(Trace.excStream);
  }
	//40762 inizio
   finally {
		if(poCursor != null)
			try{poCursor.free();}catch(SQLException e) {e.printStackTrace(Trace.excStream);}
	}
   //40762 fine
  //Fix 23584 inizio
  //return null;
  return ret;
  //Fix 23584 fine
  }

  //Fix 13264 metodo commentato
  /*public void eliminaRisorseOccupata(List risorse){
    for(int i=risorse.size()-1; i>=0; i--){ //Fix 13175
      Risorsa risorsa = (Risorsa)risorse.get(i);
      RilevazioneDatiProdTes testata = cercaRilevazioneInCorsoRisorsa(risorsa.getTipoRisorsa(), risorsa.getIdRisorsa());
      if (testata != null) {
        risorse.remove(risorsa);
      }
    }
  }*/

  //Fix 13264 inizio
  public boolean isMacchinaOccupata() {
  	boolean ret = false;//Fix 23584
    if (getIdMacchina() != null && getTipoBolla() == RilevazioneDatiProdTes.BOLLA_SINGOLA) { //Fix 14722
      String where = RilevazioneDatiProdTesTM.ID_AZIENDA + " ='" + getIdAzienda() + "' AND " +
                     //RilevazioneDatiProdTesTM.R_OPERATORE + " ='" + getIdOperatore() + "' AND " +
                     //RilevazioneDatiProdTesTM.DATA_RIL + " =" + ConnectionManager.getCurrentDatabase().getLiteral(TimeUtils.getCurrentDate()) + " AND " +
                     RilevazioneDatiProdTesTM.TIPO_RISORSA + " ='" + Risorsa.MACCHINE + "' AND " +
                     RilevazioneDatiProdTesTM.LIVELLO_RISORSA + " ='" + Risorsa.MATRICOLA + "' AND " +
                     RilevazioneDatiProdTesTM.R_RISORSA + " ='" + getIdMacchina() + "' AND " +
                     RilevazioneDatiProdTesTM.STATO_RIL + " ='" + RilevazioneDatiProdTes.IN_CORSO + "'";
      if (getBollaLavorazione() != null) //Fix 13434
        where += " AND "  + RilevazioneDatiProdTesTM.NUM_RITORNO + " !='" + getBollaLavorazione() + "'"; //Fix 13434
      PersistentObjectCursor poCursor = null;//40762
      try{
        //Fix 17768 inizio
        String className = RilevazioneDatiProdTes.class.getName();
        String orderBy = RilevazioneDatiProdTesTM.DATA_RIL + " DESC";
        poCursor = new PersistentObjectCursor(className, where, orderBy, PersistentObject.NO_LOCK);
        //Fix 23584 inizio
        //if(poCursor.hasNext())
        if(poCursor.hasNext() && !ret)
          //return true;
        	ret = true;
        //poCursor.close();//40762
        //Fix 23584 fine
        /*Vector vect = RilevazioneDatiProdTes.retrieveList(where, RilevazioneDatiProdTesTM.DATA_RIL + " DESC", true);
        if(!vect.isEmpty()){
          return true;
        }*/
        //Fix 17768 fine
     }catch(Exception ex){
       ex.printStackTrace(Trace.excStream);
     }
      //40762 inizio
      finally {
    	  if(poCursor != null)
    		  try{poCursor.free();}catch(SQLException e) {e.printStackTrace(Trace.excStream);}
      }
      //40762 fine
    }
   //Fix 23584 inizio
   //return false;
   return ret;
   //Fix 23584 fine
  }

  public boolean isMacchinaOccupataAltroOperatore() {
  	boolean ret = false;//Fix 23584
    if (getIdMacchina() != null) {
      String where = RilevazioneDatiProdTesTM.ID_AZIENDA + " ='" + getIdAzienda() + "' AND " +
                     RilevazioneDatiProdTesTM.R_OPERATORE + " !='" + getIdOperatore() + "' AND " +
                     //RilevazioneDatiProdTesTM.DATA_RIL + " =" + ConnectionManager.getCurrentDatabase().getLiteral(TimeUtils.getCurrentDate()) + " AND " +
                     RilevazioneDatiProdTesTM.TIPO_RISORSA + " ='" + Risorsa.MACCHINE + "' AND " +
                     RilevazioneDatiProdTesTM.LIVELLO_RISORSA + " ='" + Risorsa.MATRICOLA + "' AND " +
                     RilevazioneDatiProdTesTM.R_RISORSA + " ='" + getIdMacchina() + "' AND " +
                     RilevazioneDatiProdTesTM.STATO_RIL + " ='" + RilevazioneDatiProdTes.IN_CORSO + "'";
      PersistentObjectCursor poCursor = null;//40762
      try{
        //Fix 17768 inizio
        String className = RilevazioneDatiProdTes.class.getName();
        String orderBy = RilevazioneDatiProdTesTM.DATA_RIL + " DESC";
        poCursor = new PersistentObjectCursor(className, where, orderBy, PersistentObject.NO_LOCK);
        //Fix 23584 inizio
        //if(poCursor.hasNext())
        if(poCursor.hasNext() && !ret)
          //return true;
        	ret = true;
        //poCursor.close();//40762
        //Fix 23584 fine
        /*Vector vect = RilevazioneDatiProdTes.retrieveList(where, RilevazioneDatiProdTesTM.DATA_RIL + " DESC", true);
        if(!vect.isEmpty()){
          return true;
        }*/
        //Fix 17768 fine
     }catch(Exception ex){
       ex.printStackTrace(Trace.excStream);
     }
      //40762 inizio
      finally {
    	  if(poCursor != null)
    		  try{poCursor.free();}catch(SQLException e) {e.printStackTrace(Trace.excStream);}
      }
      //40762 fine
   }
   //Fix 23584 inizio
   //return false;
   return ret;
   //Fix 23584 fine
  }
  //Fix 13264 fine

  //Fix 34100
  /**
   * @deprecated
  */
  public Vector getListAttivitaNonIniziataProssimaAtv(String idRisorsa, char tipoRisorsa) {
    //Fix 13434 inizio
    Vector attivitaTutte = getListAttivitaNonIniziata(idRisorsa, tipoRisorsa);
    List attivitaBlu = new ArrayList();
    List attivitaGialle = new ArrayList();
    List attivitaRosse = new ArrayList();
    raggruppaListaAttivita(attivitaTutte, attivitaBlu, attivitaGialle, attivitaRosse);
    Vector ret = new Vector(attivitaBlu);
    return ret;
    //Fix 13434 fine
  }

  //Fix 13082 --fine
  //Fix 13264 --inizio
  public Time arrotondareOreRilevazione(Time ore, char tipoArrotondamento, short passo) {
    if (passo > 0) {
      int h = TimeUtils.getValues(ore)[0];
      int mn = TimeUtils.getValues(ore)[1];
      int remainder = mn % passo;
      if (remainder != 0) {
        int quotient = mn / passo;
        int difetto = quotient * passo;
        int eccesso = (quotient + 1) * passo;
        if (tipoArrotondamento == PersDatiPrdCausaleRilev.DIFETTO_ECCESSO) {
          if ((mn - difetto) < (eccesso - mn)){
            mn = difetto;
          }
          else{
            mn = eccesso;
          }
        }
        else if (tipoArrotondamento == PersDatiPrdCausaleRilev.ECCESSO) {
          mn = eccesso;
        }
        else{
          mn = difetto;
        }
      }
      return TimeUtils.getTime(h, mn, 0);
    }
    return ore;
  }

  public static BigDecimal getQtaResiduaAtv(AttivitaEsecutiva attivita){
    //Fix 16735 inizio
    /*BigDecimal ret = attivita != null ? attivita.getQtaResiduaUMPrm() : null;
    if (ret != null) {
       Iterator iter = cercaRilevazioniNonConvalidate(attivita).iterator();
       while (iter.hasNext()) {
         RilevazioneDatiProdTes rilevazione = (RilevazioneDatiProdTes) iter.next();
         if (rilevazione.getQuantita() != null) {*/
	//Fix 31183 -- inizio 
    /*BigDecimal ret = null;
    if (attivita != null) {
      ret = attivita.getQtaResiduaUMPrm();
      if (ret == null)
        ret = RilevazioneDatiProdTes.ZERO;
      BigDecimal[] qta = getQtaRilevata(attivita);
      if (qta[0] != null) {
        ret = ret.subtract(qta[0]);
        if (ret.compareTo(new BigDecimal("0")) < 0) {
          //ret = new BigDecimal("0").setScale(2);//Fix 30965
          ret = Q6Calc.get().setScale(new BigDecimal("0"), 2);//Fix 30965
        }
      }
    }
    else
      ret = RilevazioneDatiProdTes.ZERO; //Fix 16735 fine
    return ret;*/
	  
    return iRilevDatiPrdTSInternal.getQtaResiduaAtvInternal(attivita);
    //Fix 31183 -- fine
  }

  public static BigDecimal getQtaProdottaAtv(AttivitaEsecutiva attivita){
    //Fix 16735 inizio
    /*BigDecimal ret = attivita != null ? attivita.getQtaProdottaUMPrm() : null;
         if (ret != null) {
      /*  Iterator iter = cercaRilevazioniNonConvalidate(attivita).iterator();
         while (iter.hasNext()) {
           RilevazioneDatiProdTes rilevazione = (RilevazioneDatiProdTes) iter.next();
           if (rilevazione.getQuantita() != null) {
             ret = ret.add(rilevazione.getQuantita());
           }
         }*/
	//Fix 31183 -- inizio  
    /*BigDecimal ret = null;
    if (attivita != null) {
      ret = attivita.getQtaProdottaUMPrm();
      if (ret == null)
        ret = RilevazioneDatiProdTes.ZERO;
      BigDecimal[] qta = getQtaRilevata(attivita);
      if (qta[0] != null) {
        ret = ret.add(qta[0]);
      }
    }
    else
      ret = RilevazioneDatiProdTes.ZERO; //Fix 16735 fine
    return ret;*/
	  
	return iRilevDatiPrdTSInternal.getQtaProdottaAtvInternal(attivita);
	//Fix 31183 -- fine
  }

  //Fix 22005 inizio
	public static BigDecimal getQtaScartataAtv(AttivitaEsecutiva attivita) {
		//Fix 31183 -- inizio
		/*BigDecimal ret = null;
		if (attivita != null) {
			ret = attivita.getQtaScartataUMPrm();
			if (ret == null)
				ret = RilevazioneDatiProdTes.ZERO;
			BigDecimal[] qta = getQtaScartataRilevata(attivita);
			if (qta[0] != null) {
				ret = ret.add(qta[0]);
			}
		}
		else
			ret = RilevazioneDatiProdTes.ZERO;
		return ret;*/
		
		return iRilevDatiPrdTSInternal.getQtaScartataAtvInternal(attivita);
		//Fix 31183 -- fine
	}

	public static synchronized BigDecimal[] getQtaScartataRilevata(AttivitaEsecutiva atv) {
		BigDecimal[] Qta = new BigDecimal[2];
		try {
			ResultSet rs = null;
			PreparedStatement ps = SommaQtaScartataRilevataStmt.getStatement();
			Database db = ConnectionManager.getCurrentDatabase();
			db.setString(ps, 1, atv.getIdAzienda());
			db.setString(ps, 2, atv.getNumeroRitorno());
			rs = ps.executeQuery();
			if (rs.next()) {
				Qta[0] = rs.getBigDecimal(1) != null ? rs.getBigDecimal(1) : new BigDecimal(0);
				Qta[1] = rs.getBigDecimal(2) != null ? rs.getBigDecimal(2) : new BigDecimal(0);
			}
		}
		catch (SQLException ex) {
			ex.printStackTrace(Trace.excStream);
		}
		return Qta;
	}

  protected static String QTA_SCARTATA_RILEVATA =
    "SELECT  SUM(RDP." + RilevazioneDatiProdTesTM.QUANTITA_SCARTO + "), SUM(RDP." + RilevazioneDatiProdTesTM.QTA_SCARTO_SEC + ")" +
    " FROM " + RilevazioneDatiProdTesTM.TABLE_NAME + " RDP " +
    " LEFT OUTER JOIN " + AttivitaEsecutivaTM.TABLE_NAME + " ATV " +
    " ON RDP." + RilevazioneDatiProdTesTM.ID_AZIENDA + "= ATV." + AttivitaEsecutivaTM.ID_AZIENDA +
    " AND RDP." + RilevazioneDatiProdTesTM.R_ANNO_ORDINE + "= ATV." + AttivitaEsecutivaTM.ID_ANNO_ORD +
    " AND RDP." + RilevazioneDatiProdTesTM.R_NUMERO_ORD + "= ATV." + AttivitaEsecutivaTM.ID_NUMERO_ORD +
    " AND RDP." + RilevazioneDatiProdTesTM.R_RIGA_ATTIVITA + "= ATV." + AttivitaEsecutivaTM.ID_RIGA_ATTIVITA +
    " WHERE " +
    "RDP." + RilevazioneDatiProdTesTM.ID_AZIENDA + " = ? AND " +
    "RDP." + RilevazioneDatiProdTesTM.NUM_RITORNO + " = ? AND " +
    "ATV." + AttivitaEsecutivaTM.SOG_COLLAUDO + " = 'N' AND " +
    "RDP." + RilevazioneDatiProdTesTM.STATO + " !='" + DatiComuniEstesi.ANNULLATO + "' AND " +
    "RDP." + RilevazioneDatiProdTesTM.STATO_RIL + " <> '" + RilevazioneDatiProdTes.CONVALIDATA + "'";

  protected static CachedStatement SommaQtaScartataRilevataStmt = new CachedStatement(QTA_SCARTATA_RILEVATA);
  //Fix 22005 fine

  public static List cercaRilevazioniNonConvalidate(AttivitaEsecutiva attivita) {
    List ret = null;
    String where = RilevazioneDatiProdTesTM.ID_AZIENDA + " ='" + attivita.getIdAzienda() + "' AND " +
                   RilevazioneDatiProdTesTM.NUM_RITORNO + " ='" + attivita.getNumeroRitorno() + "' AND " +
                   RilevazioneDatiProdTesTM.STATO + " !='" + DatiComuniEstesi.ANNULLATO + "' AND " +
                   RilevazioneDatiProdTesTM.STATO_RIL + " !='" + RilevazioneDatiProdTes.CONVALIDATA + "'"; //Fix 13434
    try {
      ret = RilevazioneDatiProdTes.retrieveList(where, RilevazioneDatiProdTesTM.DATA_RIL + " DESC", true);
    } catch(Exception ex) {
      ex.printStackTrace(Trace.excStream);
    }
    return ret;
  }
  //Fix 13264 fine

  //Fix 13434 inizio
  public DocumentoCollaudoTestata recuperaDocumentiCollaudo() {
    if (iRilevazioneTesFine == null || iRilevazioneTesFine.getStato() != DatiComuniEstesi.VALIDO) //Fix 16109
      return null;
    DocumentoProduzione obj = iRilevazioneTesFine.getDocumentoProduzione();
    List docs = new ArrayList();
    if (obj != null) {
      String where = DocumentoCollaudoTestataTM.ID_TIPO_DOCPRV + "='" + obj.getIdTipoDocumentoCollaudo() + "'" +
          " AND " + DocumentoCollaudoTestataTM.ID_ANNO_DOC + "='" + obj.getAnnoDocumento() + "'" +
          " AND " + DocumentoCollaudoTestataTM.ID_AZIENDA + "='" + obj.getIdAzienda() + "'" +
          " AND " + DocumentoCollaudoTestataTM.ID_NUMERO_DOC + "='" + obj.getNumeroDocumento() + "'";
      try {
        docs = DocumentoCollaudoTestata.retrieveList(where, "", true);
      }
      catch (Throwable ex) {
        ex.printStackTrace(Trace.excStream);
      }
    }
    if(!docs.isEmpty()){
      return (DocumentoCollaudoTestata)docs.get(0);
    }
    return null;
  }

  //Fix 16109 inizio
  public ErrorMessage verificaRendimento() {
    ErrorMessage ret = null;
    if (iRilevazioneTesFine != null &&  getPersDatiPrdCausaleRilev().isVerificaRend()){
      if (!iRilevazioneTesFine.verificaRendimento() && getTipoBolla() != RilevazioneDatiProdTes.BOLLA_CUCITA) { //Fix 15030
    	iRilevazioneTesFine.resetRighe(); //Fix 40257
        ret = new ErrorMessage("THIP300301");
      }
    }
    return ret;
  }
  //Fix 16109 fine

  public static void raggruppaListaAttivita(List attivitaTutte, List attivitaBlu, List attivitaGialle,  List attivitaRosse) {
    Iterator iter = attivitaTutte.iterator();
    while (iter.hasNext()) {
      ListaAttivita listaAttivita = (ListaAttivita) iter.next();
      if (listaAttivita.getStatoRilevAttivita() == ListaAttivita.SOSPESA) //Fix 13264
        attivitaBlu.add(listaAttivita); //Fix 13264
      else {
        //String srcImg = "it/thera/thip/produzione/raccoltaDati/images/Yellow.gif";
        List atvPrecedenti = listaAttivita.getAttivitaEsecutiva().getAttivitaPrecedenti();
        if(atvPrecedenti.isEmpty()){
          attivitaBlu.add(listaAttivita);
        }
        else {
          //Fix 23541 Inizio
          //for(int i =0 ; i< atvPrecedenti.size(); i++){
            //AttivitaEsecutiva atvEsec = (AttivitaEsecutiva)atvPrecedenti.get(i);
            AttivitaEsecutiva atvEsec = listaAttivita.getAttivitaEsecutiva();
          //Fix 23541 Fine
            if(atvEsec.getPoliticaConsAttivita() == AttivitaEsecutiva.MANUALE){
              try{
                //Fix 13264 inizio
                AttivitaEsecutiva atvPcd = atvEsec.getAtvEsecPrecedente();
                if (atvPcd != null){
                  BigDecimal qtaRes = RilevDatiPrdTS.getQtaResiduaAtv(atvPcd);
                  BigDecimal qtaPrd = RilevDatiPrdTS.getQtaProdottaAtv(atvPcd);
                  if (qtaPrd.compareTo(new BigDecimal("0")) == 0) {
                    attivitaRosse.add(listaAttivita);
                  }
                  else if (qtaRes.compareTo(new BigDecimal("0")) == 0) { //COMPLETATA
                    attivitaBlu.add(listaAttivita);
                  }
                  else {
                    attivitaGialle.add(listaAttivita);
                  }
                }
                //Fix 13264 fine
                else{
                  attivitaBlu.add(listaAttivita);
                }
              }catch(Exception ex){ex.printStackTrace(Trace.excStream);}
            }
          //} //Fix 23541 --Riga commentata
        }
      }
    }
  }

  public static AmbienteListaAttivita getAmbienteForCurrentUser() {
    if (Security.getCurrentUser() != null) {
      UtenteAzienda ua = ( (ThipUser) Security.getCurrentUser()).
          getUtenteAzienda();
      UtenteAmbienti u = (UtenteAmbienti) Factory.createObject(
          UtenteAmbienti.class);
      u.setIdUtente(ua.getIdUtente());
      u.setIdAzienda(ua.getIdAzienda());

      try {
        u = UtenteAmbienti.elementWithKey(u.getKey(),
                                          PersistentObject.
                                          OPTIMISTIC_LOCK);
      }
      catch (SQLException ex) {
        ex.printStackTrace();
        return null;
      }
      if (u != null)
        return u.getAmbienteListaAttivita();
    }
    return null;
  }
  //Fix 13434 fine

  //Fix 13573 --inizio
  public void setPersDatiUtenteRilev(PersDatiPrdUtenteRilev persDatiPrdUtenteRilev) {
    setIdAziendaInternal(KeyHelper.getTokenObjectKey(persDatiPrdUtenteRilev.getKey(), 1));
    this.iPersDatiPrdUtenteRilev.setObject(persDatiPrdUtenteRilev);
    setDirty();
  }

  public PersDatiPrdUtenteRilev getPersDatiPrdUtenteRilev() {
    return (PersDatiPrdUtenteRilev) iPersDatiPrdUtenteRilev.getObject();
  }

  public void setPrdUtenteRilevKey(String key) {
    iPersDatiPrdUtenteRilev.setKey(key);
    setIdAziendaInternal(KeyHelper.getTokenObjectKey(key,1));
    setDirty();
  }

  public String getPrdUtenteRilevKey() {
     return iPersDatiPrdUtenteRilev.getKey();
  }

  //Fix 13573 --fine

  //Fix 14721 - inizio
  public java.sql.Time getTempo() {
    return iTempo;
  }

  public void setTempo(java.sql.Time tempo) {
    iTempo = tempo;
  }

  public boolean checkAttivitaProdotti(List prodotti){
	//Fix 32846 -- Inizio
	List prodottiValido = new ArrayList();
	Iterator iter = prodotti.iterator();
	while(iter.hasNext()) {
		AttivitaEsecProdotto atvEsecProd = (AttivitaEsecProdotto) iter.next() ;
		if(atvEsecProd.getStato() == DatiComuniEstesi.VALIDO) {
			prodottiValido.add(atvEsecProd);
		}
	}
	//Fix 32846 -- Fine  
    //if(!prodotti.isEmpty()){ //Fix 32846
	if(!prodottiValido.isEmpty()){ //Fix 32846
      //Iterator iterAtvPrd = prodotti.iterator(); //Fix 32846
	  Iterator iterAtvPrd = prodottiValido.iterator(); //Fix 32846
      while(iterAtvPrd.hasNext()){
        AttivitaEsecProdotto atvEsecPrd = (AttivitaEsecProdotto)iterAtvPrd.next();
        if(atvEsecPrd.getTipoProdotto() == AttivitaEsecProdotto.PRODOTTO_PRIMARIO){
          if(atvEsecPrd.getArticolo().isArticLotto()) //Fix 16109
            return true;
        }
        else if(atvEsecPrd.getTipoProdotto() == AttivitaEsecProdotto.SOTTOPRODOTTO ||
                atvEsecPrd.getTipoProdotto() == AttivitaEsecProdotto.SFRIDO_ROTTAME ||
                (atvEsecPrd.getTipoProdotto() == AttivitaEsecProdotto.ARTICOLO_WIP &&
                 atvEsecPrd.getArticolo().isArticLotto()) ||
                (atvEsecPrd.getTipoProdotto() == AttivitaEsecProdotto.SCARTO &&
                 !atvEsecPrd.getIdArticolo().equals(atvEsecPrd.getAttivitaEsecutiva().getOrdineEsecutivo().getIdArticolo()) &&
                 atvEsecPrd.getArticolo().getTipoParte() != ArticoloDatiIdent.ARTICOLO_WIP)) //Fix 17241 //Fix 17550
          return true;
      }
    }
    return false;
  }

  //Fix 17241 inizio
  public boolean hasProdottoPrimario(){
    List prodotti = (getAttivitaEsecutiva() != null ? getAttivitaEsecutiva().getProdotti() : new ArrayList());
    if(!prodotti.isEmpty()){
      Iterator iterAtvPrd = prodotti.iterator();
      while(iterAtvPrd.hasNext()){
        AttivitaEsecProdotto atvEsecPrd = (AttivitaEsecProdotto)iterAtvPrd.next();
        if(atvEsecPrd.getTipoProdotto() == AttivitaEsecProdotto.PRODOTTO_PRIMARIO ||
            atvEsecPrd.getTipoProdotto() == AttivitaEsecProdotto.ARTICOLO_WIP) //Fix 17550
          return true;
      }
    }
    return false;
  }
  //Fix 17241 fine

   /*------ Linea attributi materiale n°1 -----*/
   public void setMagazzinoPrl1(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //Fix 18536 Inizio
     //this.iMagazzinoPrl1.setObject(magazzino);
     if(magazzino != null)
       iMagazzinoPrl.put(new Integer((0 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoPrl1() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl1.getObject();
     return (Magazzino)iMagazzinoPrl.get(new Integer(0 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoPrl1Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoPrl1.setKey(key);
     if(iMagazzinoPrl.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null){
       ((Magazzino)iMagazzinoPrl.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoPrl1Key() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl1.getObject();
     if(iMagazzinoPrl.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoPrl.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoPrl1(String idMagazzino) {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl1.getKey();
     //iMagazzinoPrl1.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idMagazzino));
     if(iMagazzinoPrl.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Magazzino)iMagazzinoPrl.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoPrl.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idMagazzino));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdMagazzinoPrl1() {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl1.getKey();
     String key = null;
     if(iMagazzinoPrl.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoPrl.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key,2);
   }

   public void setMateriale1(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setMaterialeInternal1(idArticolo);
     //Fix 18536 Inizio
     //iMateriale1.setObject(articolo);
     if(articolo != null)
       iMateriale.put(new Integer((0 + (iCurrentNumPag - 1) * 20)), articolo);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getMateriale1() {
     //Fix 18536 Inizio
     //return (Articolo) iMateriale1.getObject();
     return (Articolo) iMateriale.get(new Integer(0 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMateriale1Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMateriale1.setKey(key);
     if(iMateriale.get(new Integer((0 + (iCurrentNumPag - 1) * 20))) != null)
       ((Articolo)iMateriale.get(new Integer((0 + (iCurrentNumPag - 1) * 20)))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal1(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMateriale1Key() {
     //Fix 18536 Inizio
     //return iMateriale1.getKey();
     if(iMateriale.get(new Integer((0 + (iCurrentNumPag - 1) * 20))) != null)
       return ((Articolo)iMateriale.get(new Integer((0 + (iCurrentNumPag - 1) * 20)))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMateriale1(String rArticolo) {
     setMaterialeInternal1(rArticolo);
     setDirty();
   }

   public String getIdMateriale1() {
     //Fix 18536 Inizio
     //String key = iMateriale1.getKey();
     String key = null;
     if(iMateriale.get(new Integer((0 + (iCurrentNumPag - 1) * 20))) != null)
       key = ((Articolo)iMateriale.get(new Integer((0 + (iCurrentNumPag - 1) * 20)))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setArticoloVersione1(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setMaterialeInternal1(rArticolo);
     //Fix 18536 Inzio
     //this.iMaterialeVersione1.setObject(articoloVersione);
     if(articoloVersione != null)
       iMaterialeVersione.put(new Integer((0 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getMaterialeVersione1() {
     //Fix 18536 Inizio
     //return (ArticoloVersione)iMaterialeVersione1.getObject();
     return (ArticoloVersione)iMaterialeVersione.get(new Integer(0 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMaterialeVersione1Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMaterialeVersione1.setKey(key);
     if(iMaterialeVersione.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal1(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMaterialeVersione1Key() {
     //Fix 18536 Inizio
     //return iMaterialeVersione1.getKey();
     if(iMaterialeVersione.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iMaterialeVersione.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdVersione1(Integer versione) {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione1.getKey();
     //iMaterialeVersione1.setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     if(iMaterialeVersione.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public Integer getIdVersione1() {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione1.getKey();
     String key = null;
     if(iMaterialeVersione.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key,3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setConfigurazione1(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (configurazione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     }
     setMaterialeInternal1(rArticolo);
     //Fix 18536 Inizio
     //this.iConfigurazione1.setObject(configurazione);
     if(configurazione != null)
       iMaterialeConfig.put(new Integer((0 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getConfigurazione1() {
     //Fix 18536 Inizio
     //return (Configurazione)iConfigurazione1.getObject();
     return (Configurazione)iMaterialeConfig.get(new Integer(0 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setConfigurazione1Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iConfigurazione1.setKey(key);
     if(iMaterialeConfig.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal1(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getConfigurazione1Key() {
     //Fix 18536 Inizio
     //return iConfigurazione1.getKey();
     if(iMaterialeConfig.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iMaterialeConfig.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdConfigurazione1(Integer idConfigurazione) {
     //Fix 18536 Inizio
     //String key = iConfigurazione1.getKey();
     //iConfigurazione1.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idConfigurazione));
     if(iMaterialeConfig.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Configurazione)iMaterialeConfig.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iMaterialeConfig.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idConfigurazione));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public Integer getIdConfigurazione1() {
     //Fix 18536 Inizio
     //String key = iConfigurazione1.getKey();
     String key = null;
     if(iMaterialeConfig.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Configurazione)iMaterialeConfig.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     //return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
     return KeyHelper.stringToIntegerObj(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
   }

   public String getIdEsternoConfig1()
   { //Fix 18536 Inizio
     //return iConfigurazione1.getIdEsternoConfig();
     if(iMaterialeConfig.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null){
       return ((Configurazione)iMaterialeConfig.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     }
     return null;
     //Fix 18536 Fine
   }

   public void setIdEsternoConfig1(String idEsternoConfig)
   { //Fix 18536 Inizio
     //iConfigurazione1.setIdEsternoConfig(idEsternoConfig);
     if(iMaterialeConfig.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null){
       ((Configurazione)iMaterialeConfig.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     }
     //Fix 18536 Fine
   }

   public void setLotto1(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setMaterialeInternal1(rArticolo);
     //Fix 18536 Inizio
     //this.iLotto1.setObject(lotto);
     if(lotto != null)
       iLottoMateriale.put(new Integer((0+(iCurrentNumPag-1)*20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLotto1() {
     //Fix 18536 Inizio
     //return (Lotto)iLotto1.getObject();
     return (Lotto)iLottoMateriale.get(new Integer(0 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLotto1Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLotto1.setKey(key);
     if(iLottoMateriale.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoMateriale.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal1(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLotto1Key() {
     //Fix 18536 Inizio
     //return iLotto1.getKey();
     if(iLottoMateriale.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoMateriale.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLotto1(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLotto1.getKey();
     //iLotto1.setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
     if(iLottoMateriale.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Lotto)iLottoMateriale.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public String getIdLotto1() {
     //Fix 18536 Inizio
     //String key = iLotto1.getKey();
     String key = null;
     if(iLottoMateriale.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoMateriale.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setMaterialeInternal1(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iMaterialeVersione1.getKey();
     //iMaterialeVersione1.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     String key1 = null;
     if(iMaterialeVersione.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null){
       key1 = ((ArticoloVersione)iMaterialeVersione.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1 , 2, rArticolo));
     }
     //String key2 = iMateriale1.getKey();
     //iMateriale1.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     String key2 = null;
     if(iMateriale.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null){
       key2 = ((Articolo)iMateriale.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iMateriale.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2 , 2, rArticolo));
     }
     //String key3 = iLotto1.getKey();
     //iLotto1.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     String key3 = null;
     if(iLottoMateriale.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null){
       key3 = ((Lotto)iLottoMateriale.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3 , 2, rArticolo));
     }
     //iConfigurazione1.setIdArticolo(rArticolo);
     if(iMaterialeConfig.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaPrlUmPrm1(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmPrm1 = qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaPrlUmPrm.put(new Integer((0 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaPrlUmPrmInternal(qtaPrlUmPrm, 0);
     setDirty();
   }

   public BigDecimal getQtaPrlUmPrm1() {
     //Fix 18536 Inizio
     //return iQtaPrlUmPrm1;
     return (BigDecimal)iQtaPrlUmPrm.get(new Integer(0 + (iCurrentNumPag - 1) * 20));
     //Fix 18536
   }

   public void setQtaPrlUmSec1(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmSec1 = qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaPrlUmSec.put(new Integer((0 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaPrlUmSecInternal(qtaPrlUmSec, 0);
     setDirty();
   }

   public BigDecimal getQtaPrlUmSec1() {
     //Fix 18536 Inizio
     //return iQtaPrlUmSec1;
     return (BigDecimal)iQtaPrlUmSec.get(new Integer(0 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecMat1() {
     if (getMateriale1() != null)
       return getMateriale1().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmMat1() {
     if (getMateriale1() != null)
       return getMateriale1().getIdUMPrmMag();
     return null;
   }

   public String getDescrizioneMateriale1() {
     //Fix 18536 Inizio
     //if (getMateriale1() != null) {
     //  return getMateriale1().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     return (String)iDescrizioneMateriale.get(new Integer(0 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   //Fix 18536 Inizio
   public void setDescrizioneMateriale1(String desc){
     if(desc != null)
       iDescrizioneMateriale.put(new Integer((0 + (iCurrentNumPag - 1) * 20)), desc);
   }
   //Fix 18536 Fine

   /*------ Linea attributi materiale n°2 -----*/
   public void setMagazzinoPrl2(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //Fix 18536 Inizio
     //this.iMagazzinoPrl2.setObject(magazzino);
     if(magazzino != null)
       iMagazzinoPrl.put(new Integer((1 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoPrl2() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl2.getObject();
     return (Magazzino)iMagazzinoPrl.get(new Integer(1 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoPrl2Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoPrl2.setKey(key);
     if(iMagazzinoPrl.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null){
       ((Magazzino)iMagazzinoPrl.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoPrl2Key() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl2.getObject();
     if(iMagazzinoPrl.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoPrl.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoPrl2(String idMagazzino) {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl2.getKey();
     //iMagazzinoPrl2.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idMagazzino));
     if(iMagazzinoPrl.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Magazzino)iMagazzinoPrl.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoPrl.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idMagazzino));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdMagazzinoPrl2() {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl2.getKey();
     String key = null;
     if(iMagazzinoPrl.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoPrl.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key,2);
   }

   public void setMateriale2(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setMaterialeInternal2(idArticolo);
     //Fix 18536 Inizio
     //iMateriale2.setObject(articolo);
     if(articolo != null)
       iMateriale.put(new Integer((1 + (iCurrentNumPag - 1) * 20)), articolo);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getMateriale2() {
     //Fix 18536 Inizio
     //return (Articolo) iMateriale2.getObject();
     return (Articolo) iMateriale.get(new Integer(1 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMateriale2Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMateriale2.setKey(key);
     if(iMateriale.get(new Integer((1 + (iCurrentNumPag - 1) * 20))) != null)
       ((Articolo)iMateriale.get(new Integer((1 + (iCurrentNumPag - 1) * 20)))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal2(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMateriale2Key() {
     //Fix 18536 Inizio
     //return iMateriale2.getKey();
     if(iMateriale.get(new Integer((1 + (iCurrentNumPag - 1) * 20))) != null)
       return ((Articolo)iMateriale.get(new Integer((1 + (iCurrentNumPag - 1) * 20)))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMateriale2(String rArticolo) {
     setMaterialeInternal2(rArticolo);
     setDirty();
   }

   public String getIdMateriale2() {
     //Fix 18536 Inizio
     //String key = iMateriale2.getKey();
     String key = null;
     if(iMateriale.get(new Integer((1 + (iCurrentNumPag - 1) * 20))) != null)
       key = ((Articolo)iMateriale.get(new Integer((1 + (iCurrentNumPag - 1) * 20)))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setArticoloVersione2(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setMaterialeInternal2(rArticolo);
     //Fix 18536 Inzio
     //this.iMaterialeVersione2.setObject(articoloVersione);
     if(articoloVersione != null)
       iMaterialeVersione.put(new Integer((1 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getMaterialeVersione2() {
     //Fix 18536 Inizio
     //return (ArticoloVersione)iMaterialeVersione2.getObject();
     return (ArticoloVersione)iMaterialeVersione.get(new Integer(1 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMaterialeVersione2Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMaterialeVersione2.setKey(key);
     if(iMaterialeVersione.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal2(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMaterialeVersione2Key() {
     //Fix 18536 Inizio
     //return iMaterialeVersione2.getKey();
     if(iMaterialeVersione.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iMaterialeVersione.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdVersione2(Integer versione) {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione2.getKey();
     //iMaterialeVersione2.setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     if(iMaterialeVersione.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public Integer getIdVersione2() {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione2.getKey();
     String key = null;
     if(iMaterialeVersione.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key,3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setConfigurazione2(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (configurazione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     }
     setMaterialeInternal2(rArticolo);
     //Fix 18536 Inizio
     //this.iConfigurazione2.setObject(configurazione);
     if(configurazione != null)
       iMaterialeConfig.put(new Integer((1 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getConfigurazione2() {
     //Fix 18536 Inizio
     //return (Configurazione)iConfigurazione2.getObject();
     return (Configurazione)iMaterialeConfig.get(new Integer(1 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setConfigurazione2Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iConfigurazione2.setKey(key);
     if(iMaterialeConfig.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal2(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getConfigurazione2Key() {
     //Fix 18536 Inizio
     //return iConfigurazione2.getKey();
     if(iMaterialeConfig.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iMaterialeConfig.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdConfigurazione2(Integer idConfigurazione) {
     //Fix 18536 Inizio
     //String key = iConfigurazione2.getKey();
     //iConfigurazione2.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idConfigurazione));
     if(iMaterialeConfig.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Configurazione)iMaterialeConfig.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iMaterialeConfig.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idConfigurazione));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public Integer getIdConfigurazione2() {
     //Fix 18536 Inizio
     //String key = iConfigurazione2.getKey();
     String key = null;
     if(iMaterialeConfig.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Configurazione)iMaterialeConfig.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     //return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
     return KeyHelper.stringToIntegerObj(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
   }

   public String getIdEsternoConfig2()
   { //Fix 18536 Inizio
     //return iConfigurazione2.getIdEsternoConfig();
     if(iMaterialeConfig.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null){
       return ((Configurazione)iMaterialeConfig.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     }
     return null;
     //Fix 18536 Fine
   }

   public void setIdEsternoConfig2(String idEsternoConfig)
   { //Fix 18536 Inizio
     //iConfigurazione2.setIdEsternoConfig(idEsternoConfig);
     if(iMaterialeConfig.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null){
       ((Configurazione)iMaterialeConfig.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     }
     //Fix 18536 Fine
   }

   public void setLotto2(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setMaterialeInternal2(rArticolo);
     //Fix 18536 Inizio
     //this.iLotto2.setObject(lotto);
     if(lotto != null)
       iLottoMateriale.put(new Integer((1+(iCurrentNumPag-1)*20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLotto2() {
     //Fix 18536 Inizio
     //return (Lotto)iLotto2.getObject();
     return (Lotto)iLottoMateriale.get(new Integer(1 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLotto2Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLotto2.setKey(key);
     if(iLottoMateriale.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoMateriale.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal2(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLotto2Key() {
     //Fix 18536 Inizio
     //return iLotto2.getKey();
     if(iLottoMateriale.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoMateriale.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLotto2(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLotto2.getKey();
     //iLotto2.setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
     if(iLottoMateriale.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Lotto)iLottoMateriale.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public String getIdLotto2() {
     //Fix 18536 Inizio
     //String key = iLotto2.getKey();
     String key = null;
     if(iLottoMateriale.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoMateriale.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setMaterialeInternal2(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iMaterialeVersione2.getKey();
     //iMaterialeVersione2.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     String key1 = null;
     if(iMaterialeVersione.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null){
       key1 = ((ArticoloVersione)iMaterialeVersione.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1 , 2, rArticolo));
     }
     //String key2 = iMateriale2.getKey();
     //iMateriale2.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     String key2 = null;
     if(iMateriale.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null){
       key2 = ((Articolo)iMateriale.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iMateriale.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2 , 2, rArticolo));
     }
     //String key3 = iLotto2.getKey();
     //iLotto2.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     String key3 = null;
     if(iLottoMateriale.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null){
       key3 = ((Lotto)iLottoMateriale.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3 , 2, rArticolo));
     }
     //iConfigurazione2.setIdArticolo(rArticolo);
     if(iMaterialeConfig.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaPrlUmPrm2(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmPrm2 = qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaPrlUmPrm.put(new Integer((1 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaPrlUmPrmInternal(qtaPrlUmPrm, 1);
     setDirty();
   }

   public BigDecimal getQtaPrlUmPrm2() {
     //Fix 18536 Inizio
     //return iQtaPrlUmPrm2;
     return (BigDecimal)iQtaPrlUmPrm.get(new Integer(1 + (iCurrentNumPag - 1) * 20));
     //Fix 18536
   }

   public void setQtaPrlUmSec2(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmSec2 = qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaPrlUmSec.put(new Integer((1 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaPrlUmSecInternal(qtaPrlUmSec, 1);
     setDirty();
   }

   public BigDecimal getQtaPrlUmSec2() {
     //Fix 18536 Inizio
     //return iQtaPrlUmSec2;
     return (BigDecimal)iQtaPrlUmSec.get(new Integer(1 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecMat2() {
     if (getMateriale2() != null)
       return getMateriale2().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmMat2() {
     if (getMateriale2() != null)
       return getMateriale2().getIdUMPrmMag();
     return null;
   }

   public String getDescrizioneMateriale2() {
     //Fix 18536 Inizio
     //if (getMateriale2() != null) {
     //  return getMateriale2().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     return (String)iDescrizioneMateriale.get(new Integer(1 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   //Fix 18536 Inizio
   public void setDescrizioneMateriale2(String desc){
     if(desc != null)
       iDescrizioneMateriale.put(new Integer((1 + (iCurrentNumPag - 1) * 20)), desc);
   }
   //Fix 18536 Fine

  /*------ Linea attributi materiale n°3 -----*/
  public void setMagazzinoPrl3(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //Fix 18536 Inizio
     //this.iMagazzinoPrl3.setObject(magazzino);
     if(magazzino != null)
       iMagazzinoPrl.put(new Integer((2 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoPrl3() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl3.getObject();
     return (Magazzino)iMagazzinoPrl.get(new Integer(2 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoPrl3Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoPrl3.setKey(key);
     if(iMagazzinoPrl.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null){
       ((Magazzino)iMagazzinoPrl.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoPrl3Key() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl3.getObject();
     if(iMagazzinoPrl.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoPrl.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoPrl3(String idMagazzino) {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl3.getKey();
     //iMagazzinoPrl3.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idMagazzino));
     if(iMagazzinoPrl.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Magazzino)iMagazzinoPrl.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoPrl.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idMagazzino));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdMagazzinoPrl3() {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl3.getKey();
     String key = null;
     if(iMagazzinoPrl.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoPrl.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key,2);
   }

   public void setMateriale3(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setMaterialeInternal3(idArticolo);
     //Fix 18536 Inizio
     //iMateriale3.setObject(articolo);
     if(articolo != null)
       iMateriale.put(new Integer((2 + (iCurrentNumPag - 1) * 20)), articolo);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getMateriale3() {
     //Fix 18536 Inizio
     //return (Articolo) iMateriale3.getObject();
     return (Articolo) iMateriale.get(new Integer(2 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMateriale3Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMateriale3.setKey(key);
     if(iMateriale.get(new Integer((2 + (iCurrentNumPag - 1) * 20))) != null)
       ((Articolo)iMateriale.get(new Integer((2 + (iCurrentNumPag - 1) * 20)))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal3(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMateriale3Key() {
     //Fix 18536 Inizio
     //return iMateriale3.getKey();
     if(iMateriale.get(new Integer((2 + (iCurrentNumPag - 1) * 20))) != null)
       return ((Articolo)iMateriale.get(new Integer((2 + (iCurrentNumPag - 1) * 20)))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMateriale3(String rArticolo) {
     setMaterialeInternal3(rArticolo);
     setDirty();
   }

   public String getIdMateriale3() {
     //Fix 18536 Inizio
     //String key = iMateriale3.getKey();
     String key = null;
     if(iMateriale.get(new Integer((2 + (iCurrentNumPag - 1) * 20))) != null)
       key = ((Articolo)iMateriale.get(new Integer((2 + (iCurrentNumPag - 1) * 20)))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setArticoloVersione3(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setMaterialeInternal3(rArticolo);
     //Fix 18536 Inzio
     //this.iMaterialeVersione3.setObject(articoloVersione);
     if(articoloVersione != null)
       iMaterialeVersione.put(new Integer((2 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getMaterialeVersione3() {
     //Fix 18536 Inizio
     //return (ArticoloVersione)iMaterialeVersione3.getObject();
     return (ArticoloVersione)iMaterialeVersione.get(new Integer(2 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMaterialeVersione3Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMaterialeVersione3.setKey(key);
     if(iMaterialeVersione.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal3(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMaterialeVersione3Key() {
     //Fix 18536 Inizio
     //return iMaterialeVersione3.getKey();
     if(iMaterialeVersione.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iMaterialeVersione.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdVersione3(Integer versione) {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione3.getKey();
     //iMaterialeVersione3.setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     if(iMaterialeVersione.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public Integer getIdVersione3() {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione3.getKey();
     String key = null;
     if(iMaterialeVersione.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key,3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setConfigurazione3(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (configurazione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     }
     setMaterialeInternal3(rArticolo);
     //Fix 18536 Inizio
     //this.iConfigurazione3.setObject(configurazione);
     if(configurazione != null)
       iMaterialeConfig.put(new Integer((2 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getConfigurazione3() {
     //Fix 18536 Inizio
     //return (Configurazione)iConfigurazione3.getObject();
     return (Configurazione)iMaterialeConfig.get(new Integer(2 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setConfigurazione3Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iConfigurazione3.setKey(key);
     if(iMaterialeConfig.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal3(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getConfigurazione3Key() {
     //Fix 18536 Inizio
     //return iConfigurazione3.getKey();
     if(iMaterialeConfig.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iMaterialeConfig.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdConfigurazione3(Integer idConfigurazione) {
     //Fix 18536 Inizio
     //String key = iConfigurazione3.getKey();
     //iConfigurazione3.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idConfigurazione));
     if(iMaterialeConfig.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Configurazione)iMaterialeConfig.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iMaterialeConfig.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idConfigurazione));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public Integer getIdConfigurazione3() {
     //Fix 18536 Inizio
     //String key = iConfigurazione3.getKey();
     String key = null;
     if(iMaterialeConfig.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Configurazione)iMaterialeConfig.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     //return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
     return KeyHelper.stringToIntegerObj(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
   }

   public String getIdEsternoConfig3()
   { //Fix 18536 Inizio
     //return iConfigurazione3.getIdEsternoConfig();
     if(iMaterialeConfig.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null){
       return ((Configurazione)iMaterialeConfig.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     }
     return null;
     //Fix 18536 Fine
   }

   public void setIdEsternoConfig3(String idEsternoConfig)
   { //Fix 18536 Inizio
     //iConfigurazione3.setIdEsternoConfig(idEsternoConfig);
     if(iMaterialeConfig.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null){
       ((Configurazione)iMaterialeConfig.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     }
     //Fix 18536 Fine
   }

   public void setLotto3(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setMaterialeInternal3(rArticolo);
     //Fix 18536 Inizio
     //this.iLotto3.setObject(lotto);
     if(lotto != null)
       iLottoMateriale.put(new Integer((2+(iCurrentNumPag-1)*20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLotto3() {
     //Fix 18536 Inizio
     //return (Lotto)iLotto3.getObject();
     return (Lotto)iLottoMateriale.get(new Integer(2 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLotto3Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLotto3.setKey(key);
     if(iLottoMateriale.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoMateriale.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal3(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLotto3Key() {
     //Fix 18536 Inizio
     //return iLotto3.getKey();
     if(iLottoMateriale.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoMateriale.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLotto3(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLotto3.getKey();
     //iLotto3.setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
     if(iLottoMateriale.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Lotto)iLottoMateriale.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public String getIdLotto3() {
     //Fix 18536 Inizio
     //String key = iLotto3.getKey();
     String key = null;
     if(iLottoMateriale.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoMateriale.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setMaterialeInternal3(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iMaterialeVersione3.getKey();
     //iMaterialeVersione3.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     String key1 = null;
     if(iMaterialeVersione.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null){
       key1 = ((ArticoloVersione)iMaterialeVersione.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1 , 2, rArticolo));
     }
     //String key2 = iMateriale3.getKey();
     //iMateriale3.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     String key2 = null;
     if(iMateriale.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null){
       key2 = ((Articolo)iMateriale.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iMateriale.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2 , 2, rArticolo));
     }
     //String key3 = iLotto3.getKey();
     //iLotto3.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     String key3 = null;
     if(iLottoMateriale.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null){
       key3 = ((Lotto)iLottoMateriale.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3 , 2, rArticolo));
     }
     //iConfigurazione3.setIdArticolo(rArticolo);
     if(iMaterialeConfig.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaPrlUmPrm3(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmPrm3 = qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaPrlUmPrm.put(new Integer((2 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaPrlUmPrmInternal(qtaPrlUmPrm, 2);
     setDirty();
   }

   public BigDecimal getQtaPrlUmPrm3() {
     //Fix 18536 Inizio
     //return iQtaPrlUmPrm3;
     return (BigDecimal)iQtaPrlUmPrm.get(new Integer(2 + (iCurrentNumPag - 1) * 20));
     //Fix 18536
   }

   public void setQtaPrlUmSec3(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmSec3 = qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaPrlUmSec.put(new Integer((2 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaPrlUmSecInternal(qtaPrlUmSec, 2);
     setDirty();
   }

   public BigDecimal getQtaPrlUmSec3() {
     //Fix 18536 Inizio
     //return iQtaPrlUmSec3;
     return (BigDecimal)iQtaPrlUmSec.get(new Integer(2 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecMat3() {
     if (getMateriale3() != null)
       return getMateriale3().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmMat3() {
     if (getMateriale3() != null)
       return getMateriale3().getIdUMPrmMag();
     return null;
   }

   public String getDescrizioneMateriale3() {
     //Fix 18536 Inizio
     //if (getMateriale3() != null) {
     //  return getMateriale3().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     return (String)iDescrizioneMateriale.get(new Integer(2 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   //Fix 18536 Inizio
   public void setDescrizioneMateriale3(String desc){
     if(desc != null)
       iDescrizioneMateriale.put(new Integer((2 + (iCurrentNumPag - 1) * 20)), desc);
   }
   //Fix 18536 Fine

   /*------ Linea attributi materiale n°4 -----*/
   public void setMagazzinoPrl4(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //Fix 18536 Inizio
     //this.iMagazzinoPrl4.setObject(magazzino);
     if(magazzino != null)
       iMagazzinoPrl.put(new Integer((3 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoPrl4() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl4.getObject();
     return (Magazzino)iMagazzinoPrl.get(new Integer(3 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoPrl4Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoPrl4.setKey(key);
     if(iMagazzinoPrl.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null){
       ((Magazzino)iMagazzinoPrl.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoPrl4Key() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl4.getObject();
     if(iMagazzinoPrl.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoPrl.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoPrl4(String idMagazzino) {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl4.getKey();
     //iMagazzinoPrl4.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idMagazzino));
     if(iMagazzinoPrl.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Magazzino)iMagazzinoPrl.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoPrl.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idMagazzino));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdMagazzinoPrl4() {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl4.getKey();
     String key = null;
     if(iMagazzinoPrl.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoPrl.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key,2);
   }

   public void setMateriale4(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setMaterialeInternal4(idArticolo);
     //Fix 18536 Inizio
     //iMateriale4.setObject(articolo);
     if(articolo != null)
       iMateriale.put(new Integer((3 + (iCurrentNumPag - 1) * 20)), articolo);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getMateriale4() {
     //Fix 18536 Inizio
     //return (Articolo) iMateriale4.getObject();
     return (Articolo) iMateriale.get(new Integer(3 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMateriale4Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMateriale4.setKey(key);
     if(iMateriale.get(new Integer((3 + (iCurrentNumPag - 1) * 20))) != null)
       ((Articolo)iMateriale.get(new Integer((3 + (iCurrentNumPag - 1) * 20)))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal4(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMateriale4Key() {
     //Fix 18536 Inizio
     //return iMateriale4.getKey();
     if(iMateriale.get(new Integer((3 + (iCurrentNumPag - 1) * 20))) != null)
       return ((Articolo)iMateriale.get(new Integer((3 + (iCurrentNumPag - 1) * 20)))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMateriale4(String rArticolo) {
     setMaterialeInternal4(rArticolo);
     setDirty();
   }

   public String getIdMateriale4() {
     //Fix 18536 Inizio
     //String key = iMateriale4.getKey();
     String key = null;
     if(iMateriale.get(new Integer((3 + (iCurrentNumPag - 1) * 20))) != null)
       key = ((Articolo)iMateriale.get(new Integer((3 + (iCurrentNumPag - 1) * 20)))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setArticoloVersione4(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setMaterialeInternal4(rArticolo);
     //Fix 18536 Inzio
     //this.iMaterialeVersione4.setObject(articoloVersione);
     if(articoloVersione != null)
       iMaterialeVersione.put(new Integer((3 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getMaterialeVersione4() {
     //Fix 18536 Inizio
     //return (ArticoloVersione)iMaterialeVersione4.getObject();
     return (ArticoloVersione)iMaterialeVersione.get(new Integer(3 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMaterialeVersione4Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMaterialeVersione4.setKey(key);
     if(iMaterialeVersione.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal4(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMaterialeVersione4Key() {
     //Fix 18536 Inizio
     //return iMaterialeVersione4.getKey();
     if(iMaterialeVersione.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iMaterialeVersione.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdVersione4(Integer versione) {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione4.getKey();
     //iMaterialeVersione4.setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     if(iMaterialeVersione.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public Integer getIdVersione4() {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione4.getKey();
     String key = null;
     if(iMaterialeVersione.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key,3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setConfigurazione4(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (configurazione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     }
     setMaterialeInternal4(rArticolo);
     //Fix 18536 Inizio
     //this.iConfigurazione4.setObject(configurazione);
     if(configurazione != null)
       iMaterialeConfig.put(new Integer((3 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getConfigurazione4() {
     //Fix 18536 Inizio
     //return (Configurazione)iConfigurazione4.getObject();
     return (Configurazione)iMaterialeConfig.get(new Integer(3 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setConfigurazione4Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iConfigurazione4.setKey(key);
     if(iMaterialeConfig.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal4(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getConfigurazione4Key() {
     //Fix 18536 Inizio
     //return iConfigurazione4.getKey();
     if(iMaterialeConfig.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iMaterialeConfig.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdConfigurazione4(Integer idConfigurazione) {
     //Fix 18536 Inizio
     //String key = iConfigurazione4.getKey();
     //iConfigurazione4.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idConfigurazione));
     if(iMaterialeConfig.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Configurazione)iMaterialeConfig.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iMaterialeConfig.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idConfigurazione));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public Integer getIdConfigurazione4() {
     //Fix 18536 Inizio
     //String key = iConfigurazione4.getKey();
     String key = null;
     if(iMaterialeConfig.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Configurazione)iMaterialeConfig.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     //return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
     return KeyHelper.stringToIntegerObj(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
   }

   public String getIdEsternoConfig4()
   { //Fix 18536 Inizio
     //return iConfigurazione4.getIdEsternoConfig();
     if(iMaterialeConfig.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null){
       return ((Configurazione)iMaterialeConfig.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     }
     return null;
     //Fix 18536 Fine
   }

   public void setIdEsternoConfig4(String idEsternoConfig)
   { //Fix 18536 Inizio
     //iConfigurazione4.setIdEsternoConfig(idEsternoConfig);
     if(iMaterialeConfig.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null){
       ((Configurazione)iMaterialeConfig.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     }
     //Fix 18536 Fine
   }

   public void setLotto4(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setMaterialeInternal4(rArticolo);
     //Fix 18536 Inizio
     //this.iLotto4.setObject(lotto);
     if(lotto != null)
       iLottoMateriale.put(new Integer((3+(iCurrentNumPag-1)*20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLotto4() {
     //Fix 18536 Inizio
     //return (Lotto)iLotto4.getObject();
     return (Lotto)iLottoMateriale.get(new Integer(3 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLotto4Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLotto4.setKey(key);
     if(iLottoMateriale.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoMateriale.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal4(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLotto4Key() {
     //Fix 18536 Inizio
     //return iLotto4.getKey();
     if(iLottoMateriale.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoMateriale.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLotto4(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLotto4.getKey();
     //iLotto4.setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
     if(iLottoMateriale.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Lotto)iLottoMateriale.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public String getIdLotto4() {
     //Fix 18536 Inizio
     //String key = iLotto4.getKey();
     String key = null;
     if(iLottoMateriale.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoMateriale.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setMaterialeInternal4(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iMaterialeVersione4.getKey();
     //iMaterialeVersione4.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     String key1 = null;
     if(iMaterialeVersione.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null){
       key1 = ((ArticoloVersione)iMaterialeVersione.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1 , 2, rArticolo));
     }
     //String key2 = iMateriale4.getKey();
     //iMateriale4.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     String key2 = null;
     if(iMateriale.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null){
       key2 = ((Articolo)iMateriale.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iMateriale.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2 , 2, rArticolo));
     }
     //String key3 = iLotto4.getKey();
     //iLotto4.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     String key3 = null;
     if(iLottoMateriale.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null){
       key3 = ((Lotto)iLottoMateriale.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3 , 2, rArticolo));
     }
     //iConfigurazione4.setIdArticolo(rArticolo);
     if(iMaterialeConfig.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaPrlUmPrm4(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmPrm4 = qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaPrlUmPrm.put(new Integer((3 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaPrlUmPrmInternal(qtaPrlUmPrm, 3);
     setDirty();
   }

   public BigDecimal getQtaPrlUmPrm4() {
     //Fix 18536 Inizio
     //return iQtaPrlUmPrm4;
     return (BigDecimal)iQtaPrlUmPrm.get(new Integer(3 + (iCurrentNumPag - 1) * 20));
     //Fix 18536
   }

   public void setQtaPrlUmSec4(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmSec4 = qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaPrlUmSec.put(new Integer((3 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaPrlUmSecInternal(qtaPrlUmSec, 3);
     setDirty();
   }

   public BigDecimal getQtaPrlUmSec4() {
     //Fix 18536 Inizio
     //return iQtaPrlUmSec4;
     return (BigDecimal)iQtaPrlUmSec.get(new Integer(3 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecMat4() {
     if (getMateriale4() != null)
       return getMateriale4().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmMat4() {
     if (getMateriale4() != null)
       return getMateriale4().getIdUMPrmMag();
     return null;
   }

   public String getDescrizioneMateriale4() {
     //Fix 18536 Inizio
     //if (getMateriale4() != null) {
     //  return getMateriale4().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     return (String)iDescrizioneMateriale.get(new Integer(3 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   //Fix 18536 Inizio
   public void setDescrizioneMateriale4(String desc){
     if(desc != null)
       iDescrizioneMateriale.put(new Integer((3 + (iCurrentNumPag - 1) * 20)), desc);
   }
   //Fix 18536 Fine

   /*------ Linea attributi materiale n°5 -----*/
   public void setMagazzinoPrl5(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //Fix 18536 Inizio
     //this.iMagazzinoPrl5.setObject(magazzino);
     if(magazzino != null)
       iMagazzinoPrl.put(new Integer((4 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoPrl5() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl5.getObject();
     return (Magazzino)iMagazzinoPrl.get(new Integer(4 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoPrl5Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoPrl5.setKey(key);
     if(iMagazzinoPrl.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null){
       ((Magazzino)iMagazzinoPrl.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoPrl5Key() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl5.getObject();
     if(iMagazzinoPrl.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoPrl.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoPrl5(String idMagazzino) {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl5.getKey();
     //iMagazzinoPrl5.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idMagazzino));
     if(iMagazzinoPrl.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Magazzino)iMagazzinoPrl.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoPrl.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idMagazzino));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdMagazzinoPrl5() {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl5.getKey();
     String key = null;
     if(iMagazzinoPrl.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoPrl.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key,2);
   }

   public void setMateriale5(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setMaterialeInternal5(idArticolo);
     //Fix 18536 Inizio
     //iMateriale5.setObject(articolo);
     if(articolo != null)
       iMateriale.put(new Integer((4 + (iCurrentNumPag - 1) * 20)), articolo);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getMateriale5() {
     //Fix 18536 Inizio
     //return (Articolo) iMateriale5.getObject();
     return (Articolo) iMateriale.get(new Integer(4 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMateriale5Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMateriale5.setKey(key);
     if(iMateriale.get(new Integer((4 + (iCurrentNumPag - 1) * 20))) != null)
       ((Articolo)iMateriale.get(new Integer((4 + (iCurrentNumPag - 1) * 20)))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal5(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMateriale5Key() {
     //Fix 18536 Inizio
     //return iMateriale5.getKey();
     if(iMateriale.get(new Integer((4 + (iCurrentNumPag - 1) * 20))) != null)
       return ((Articolo)iMateriale.get(new Integer((4 + (iCurrentNumPag - 1) * 20)))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMateriale5(String rArticolo) {
     setMaterialeInternal5(rArticolo);
     setDirty();
   }

   public String getIdMateriale5() {
     //Fix 18536 Inizio
     //String key = iMateriale5.getKey();
     String key = null;
     if(iMateriale.get(new Integer((4 + (iCurrentNumPag - 1) * 20))) != null)
       key = ((Articolo)iMateriale.get(new Integer((4 + (iCurrentNumPag - 1) * 20)))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setArticoloVersione5(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setMaterialeInternal5(rArticolo);
     //Fix 18536 Inzio
     //this.iMaterialeVersione5.setObject(articoloVersione);
     if(articoloVersione != null)
       iMaterialeVersione.put(new Integer((4 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getMaterialeVersione5() {
     //Fix 18536 Inizio
     //return (ArticoloVersione)iMaterialeVersione5.getObject();
     return (ArticoloVersione)iMaterialeVersione.get(new Integer(4 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMaterialeVersione5Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMaterialeVersione5.setKey(key);
     if(iMaterialeVersione.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal5(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMaterialeVersione5Key() {
     //Fix 18536 Inizio
     //return iMaterialeVersione5.getKey();
     if(iMaterialeVersione.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iMaterialeVersione.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdVersione5(Integer versione) {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione5.getKey();
     //iMaterialeVersione5.setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     if(iMaterialeVersione.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public Integer getIdVersione5() {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione5.getKey();
     String key = null;
     if(iMaterialeVersione.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key,3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setConfigurazione5(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (configurazione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     }
     setMaterialeInternal5(rArticolo);
     //Fix 18536 Inizio
     //this.iConfigurazione5.setObject(configurazione);
     if(configurazione != null)
       iMaterialeConfig.put(new Integer((4 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getConfigurazione5() {
     //Fix 18536 Inizio
     //return (Configurazione)iConfigurazione5.getObject();
     return (Configurazione)iMaterialeConfig.get(new Integer(4 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setConfigurazione5Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iConfigurazione5.setKey(key);
     if(iMaterialeConfig.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal5(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getConfigurazione5Key() {
     //Fix 18536 Inizio
     //return iConfigurazione5.getKey();
     if(iMaterialeConfig.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iMaterialeConfig.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdConfigurazione5(Integer idConfigurazione) {
     //Fix 18536 Inizio
     //String key = iConfigurazione5.getKey();
     //iConfigurazione5.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idConfigurazione));
     if(iMaterialeConfig.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Configurazione)iMaterialeConfig.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iMaterialeConfig.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idConfigurazione));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public Integer getIdConfigurazione5() {
     //Fix 18536 Inizio
     //String key = iConfigurazione5.getKey();
     String key = null;
     if(iMaterialeConfig.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Configurazione)iMaterialeConfig.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     //return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
     return KeyHelper.stringToIntegerObj(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
   }

   public String getIdEsternoConfig5()
   { //Fix 18536 Inizio
     //return iConfigurazione5.getIdEsternoConfig();
     if(iMaterialeConfig.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null){
       return ((Configurazione)iMaterialeConfig.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     }
     return null;
     //Fix 18536 Fine
   }

   public void setIdEsternoConfig5(String idEsternoConfig)
   { //Fix 18536 Inizio
     //iConfigurazione5.setIdEsternoConfig(idEsternoConfig);
     if(iMaterialeConfig.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null){
       ((Configurazione)iMaterialeConfig.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     }
     //Fix 18536 Fine
   }

   public void setLotto5(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setMaterialeInternal5(rArticolo);
     //Fix 18536 Inizio
     //this.iLotto5.setObject(lotto);
     if(lotto != null)
       iLottoMateriale.put(new Integer((4+(iCurrentNumPag-1)*20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLotto5() {
     //Fix 18536 Inizio
     //return (Lotto)iLotto5.getObject();
     return (Lotto)iLottoMateriale.get(new Integer(4 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLotto5Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLotto5.setKey(key);
     if(iLottoMateriale.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoMateriale.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal5(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLotto5Key() {
     //Fix 18536 Inizio
     //return iLotto5.getKey();
     if(iLottoMateriale.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoMateriale.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLotto5(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLotto5.getKey();
     //iLotto5.setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
     if(iLottoMateriale.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Lotto)iLottoMateriale.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public String getIdLotto5() {
     //Fix 18536 Inizio
     //String key = iLotto5.getKey();
     String key = null;
     if(iLottoMateriale.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoMateriale.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setMaterialeInternal5(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iMaterialeVersione5.getKey();
     //iMaterialeVersione5.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     String key1 = null;
     if(iMaterialeVersione.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null){
       key1 = ((ArticoloVersione)iMaterialeVersione.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1 , 2, rArticolo));
     }
     //String key2 = iMateriale5.getKey();
     //iMateriale5.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     String key2 = null;
     if(iMateriale.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null){
       key2 = ((Articolo)iMateriale.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iMateriale.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2 , 2, rArticolo));
     }
     //String key3 = iLotto5.getKey();
     //iLotto5.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     String key3 = null;
     if(iLottoMateriale.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null){
       key3 = ((Lotto)iLottoMateriale.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3 , 2, rArticolo));
     }
     //iConfigurazione5.setIdArticolo(rArticolo);
     if(iMaterialeConfig.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaPrlUmPrm5(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmPrm5 = qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaPrlUmPrm.put(new Integer((4 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaPrlUmPrmInternal(qtaPrlUmPrm, 4);
     setDirty();
   }

   public BigDecimal getQtaPrlUmPrm5() {
     //Fix 18536 Inizio
     //return iQtaPrlUmPrm5;
     return (BigDecimal)iQtaPrlUmPrm.get(new Integer(4 + (iCurrentNumPag - 1) * 20));
     //Fix 18536
   }

   public void setQtaPrlUmSec5(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmSec5 = qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaPrlUmSec.put(new Integer((4 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaPrlUmSecInternal(qtaPrlUmSec, 4);
     setDirty();
   }

   public BigDecimal getQtaPrlUmSec5() {
     //Fix 18536 Inizio
     //return iQtaPrlUmSec5;
     return (BigDecimal)iQtaPrlUmSec.get(new Integer(4 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecMat5() {
     if (getMateriale5() != null)
       return getMateriale5().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmMat5() {
     if (getMateriale5() != null)
       return getMateriale5().getIdUMPrmMag();
     return null;
   }

   public String getDescrizioneMateriale5() {
     //Fix 18536 Inizio
     //if (getMateriale5() != null) {
     //  return getMateriale5().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     return (String)iDescrizioneMateriale.get(new Integer(4 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   //Fix 18536 Inizio
   public void setDescrizioneMateriale5(String desc){
     if(desc != null)
       iDescrizioneMateriale.put(new Integer((4 + (iCurrentNumPag - 1) * 20)), desc);
   }
   //Fix 18536 Fine

   /*------ Linea attributi materiale n°6 -----*/
   public void setMagazzinoPrl6(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //Fix 18536 Inizio
     //this.iMagazzinoPrl6.setObject(magazzino);
     if(magazzino != null)
       iMagazzinoPrl.put(new Integer((5 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoPrl6() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl6.getObject();
     return (Magazzino)iMagazzinoPrl.get(new Integer(5 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoPrl6Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoPrl6.setKey(key);
     if(iMagazzinoPrl.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null){
       ((Magazzino)iMagazzinoPrl.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoPrl6Key() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl6.getObject();
     if(iMagazzinoPrl.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoPrl.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoPrl6(String idMagazzino) {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl6.getKey();
     //iMagazzinoPrl6.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idMagazzino));
     if(iMagazzinoPrl.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Magazzino)iMagazzinoPrl.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoPrl.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idMagazzino));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdMagazzinoPrl6() {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl6.getKey();
     String key = null;
     if(iMagazzinoPrl.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoPrl.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key,2);
   }

   public void setMateriale6(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setMaterialeInternal6(idArticolo);
     //Fix 18536 Inizio
     //iMateriale6.setObject(articolo);
     if(articolo != null)
       iMateriale.put(new Integer((5 + (iCurrentNumPag - 1) * 20)), articolo);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getMateriale6() {
     //Fix 18536 Inizio
     //return (Articolo) iMateriale6.getObject();
     return (Articolo) iMateriale.get(new Integer(5 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMateriale6Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMateriale6.setKey(key);
     if(iMateriale.get(new Integer((5 + (iCurrentNumPag - 1) * 20))) != null)
       ((Articolo)iMateriale.get(new Integer((5 + (iCurrentNumPag - 1) * 20)))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal6(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMateriale6Key() {
     //Fix 18536 Inizio
     //return iMateriale6.getKey();
     if(iMateriale.get(new Integer((5 + (iCurrentNumPag - 1) * 20))) != null)
       return ((Articolo)iMateriale.get(new Integer((5 + (iCurrentNumPag - 1) * 20)))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMateriale6(String rArticolo) {
     setMaterialeInternal6(rArticolo);
     setDirty();
   }

   public String getIdMateriale6() {
     //Fix 18536 Inizio
     //String key = iMateriale6.getKey();
     String key = null;
     if(iMateriale.get(new Integer((5 + (iCurrentNumPag - 1) * 20))) != null)
       key = ((Articolo)iMateriale.get(new Integer((5 + (iCurrentNumPag - 1) * 20)))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setArticoloVersione6(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setMaterialeInternal6(rArticolo);
     //Fix 18536 Inzio
     //this.iMaterialeVersione6.setObject(articoloVersione);
     if(articoloVersione != null)
       iMaterialeVersione.put(new Integer((5 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getMaterialeVersione6() {
     //Fix 18536 Inizio
     //return (ArticoloVersione)iMaterialeVersione6.getObject();
     return (ArticoloVersione)iMaterialeVersione.get(new Integer(5 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMaterialeVersione6Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMaterialeVersione6.setKey(key);
     if(iMaterialeVersione.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal6(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMaterialeVersione6Key() {
     //Fix 18536 Inizio
     //return iMaterialeVersione6.getKey();
     if(iMaterialeVersione.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iMaterialeVersione.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdVersione6(Integer versione) {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione6.getKey();
     //iMaterialeVersione6.setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     if(iMaterialeVersione.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public Integer getIdVersione6() {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione6.getKey();
     String key = null;
     if(iMaterialeVersione.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key,3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setConfigurazione6(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (configurazione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     }
     setMaterialeInternal6(rArticolo);
     //Fix 18536 Inizio
     //this.iConfigurazione6.setObject(configurazione);
     if(configurazione != null)
       iMaterialeConfig.put(new Integer((5 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getConfigurazione6() {
     //Fix 18536 Inizio
     //return (Configurazione)iConfigurazione6.getObject();
     return (Configurazione)iMaterialeConfig.get(new Integer(5 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setConfigurazione6Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iConfigurazione6.setKey(key);
     if(iMaterialeConfig.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal6(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getConfigurazione6Key() {
     //Fix 18536 Inizio
     //return iConfigurazione6.getKey();
     if(iMaterialeConfig.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iMaterialeConfig.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdConfigurazione6(Integer idConfigurazione) {
     //Fix 18536 Inizio
     //String key = iConfigurazione6.getKey();
     //iConfigurazione6.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idConfigurazione));
     if(iMaterialeConfig.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Configurazione)iMaterialeConfig.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iMaterialeConfig.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idConfigurazione));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public Integer getIdConfigurazione6() {
     //Fix 18536 Inizio
     //String key = iConfigurazione6.getKey();
     String key = null;
     if(iMaterialeConfig.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Configurazione)iMaterialeConfig.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     //return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
     return KeyHelper.stringToIntegerObj(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
   }

   public String getIdEsternoConfig6()
   { //Fix 18536 Inizio
     //return iConfigurazione6.getIdEsternoConfig();
     if(iMaterialeConfig.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null){
       return ((Configurazione)iMaterialeConfig.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     }
     return null;
     //Fix 18536 Fine
   }

   public void setIdEsternoConfig6(String idEsternoConfig)
   { //Fix 18536 Inizio
     //iConfigurazione6.setIdEsternoConfig(idEsternoConfig);
     if(iMaterialeConfig.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null){
       ((Configurazione)iMaterialeConfig.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     }
     //Fix 18536 Fine
   }

   public void setLotto6(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setMaterialeInternal6(rArticolo);
     //Fix 18536 Inizio
     //this.iLotto6.setObject(lotto);
     if(lotto != null)
       iLottoMateriale.put(new Integer((5+(iCurrentNumPag-1)*20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLotto6() {
     //Fix 18536 Inizio
     //return (Lotto)iLotto6.getObject();
     return (Lotto)iLottoMateriale.get(new Integer(5 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLotto6Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLotto6.setKey(key);
     if(iLottoMateriale.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoMateriale.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal6(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLotto6Key() {
     //Fix 18536 Inizio
     //return iLotto6.getKey();
     if(iLottoMateriale.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoMateriale.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLotto6(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLotto6.getKey();
     //iLotto6.setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
     if(iLottoMateriale.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Lotto)iLottoMateriale.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public String getIdLotto6() {
     //Fix 18536 Inizio
     //String key = iLotto6.getKey();
     String key = null;
     if(iLottoMateriale.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoMateriale.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setMaterialeInternal6(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iMaterialeVersione6.getKey();
     //iMaterialeVersione6.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     String key1 = null;
     if(iMaterialeVersione.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null){
       key1 = ((ArticoloVersione)iMaterialeVersione.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1 , 2, rArticolo));
     }
     //String key2 = iMateriale6.getKey();
     //iMateriale6.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     String key2 = null;
     if(iMateriale.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null){
       key2 = ((Articolo)iMateriale.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iMateriale.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2 , 2, rArticolo));
     }
     //String key3 = iLotto6.getKey();
     //iLotto6.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     String key3 = null;
     if(iLottoMateriale.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null){
       key3 = ((Lotto)iLottoMateriale.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3 , 2, rArticolo));
     }
     //iConfigurazione6.setIdArticolo(rArticolo);
     if(iMaterialeConfig.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaPrlUmPrm6(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmPrm6 = qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaPrlUmPrm.put(new Integer((5 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaPrlUmPrmInternal(qtaPrlUmPrm, 5);
     setDirty();
   }

   public BigDecimal getQtaPrlUmPrm6() {
     //Fix 18536 Inizio
     //return iQtaPrlUmPrm6;
     return (BigDecimal)iQtaPrlUmPrm.get(new Integer(5 + (iCurrentNumPag - 1) * 20));
     //Fix 18536
   }

   public void setQtaPrlUmSec6(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmSec6 = qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaPrlUmSec.put(new Integer((5 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaPrlUmSecInternal(qtaPrlUmSec, 5);
     setDirty();
   }

   public BigDecimal getQtaPrlUmSec6() {
     //Fix 18536 Inizio
     //return iQtaPrlUmSec6;
     return (BigDecimal)iQtaPrlUmSec.get(new Integer(5 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecMat6() {
     if (getMateriale6() != null)
       return getMateriale6().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmMat6() {
     if (getMateriale6() != null)
       return getMateriale6().getIdUMPrmMag();
     return null;
   }

   public String getDescrizioneMateriale6() {
     //Fix 18536 Inizio
     //if (getMateriale6() != null) {
     //  return getMateriale6().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     return (String)iDescrizioneMateriale.get(new Integer(5 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   //Fix 18536 Inizio
   public void setDescrizioneMateriale6(String desc){
     if(desc != null)
       iDescrizioneMateriale.put(new Integer((5 + (iCurrentNumPag - 1) * 20)), desc);
   }
   //Fix 18536 Fine

   /*------ Linea attributi materiale n°7 -----*/
   public void setMagazzinoPrl7(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //Fix 18536 Inizio
     //this.iMagazzinoPrl7.setObject(magazzino);
     if(magazzino != null)
       iMagazzinoPrl.put(new Integer((6 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoPrl7() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl7.getObject();
     return (Magazzino)iMagazzinoPrl.get(new Integer(6 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoPrl7Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoPrl7.setKey(key);
     if(iMagazzinoPrl.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null){
       ((Magazzino)iMagazzinoPrl.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoPrl7Key() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl7.getObject();
     if(iMagazzinoPrl.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoPrl.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoPrl7(String idMagazzino) {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl7.getKey();
     //iMagazzinoPrl7.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idMagazzino));
     if(iMagazzinoPrl.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Magazzino)iMagazzinoPrl.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoPrl.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idMagazzino));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdMagazzinoPrl7() {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl7.getKey();
     String key = null;
     if(iMagazzinoPrl.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoPrl.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key,2);
   }

   public void setMateriale7(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setMaterialeInternal7(idArticolo);
     //Fix 18536 Inizio
     //iMateriale7.setObject(articolo);
     if(articolo != null)
       iMateriale.put(new Integer((6 + (iCurrentNumPag - 1) * 20)), articolo);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getMateriale7() {
     //Fix 18536 Inizio
     //return (Articolo) iMateriale7.getObject();
     return (Articolo) iMateriale.get(new Integer(6 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMateriale7Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMateriale7.setKey(key);
     if(iMateriale.get(new Integer((6 + (iCurrentNumPag - 1) * 20))) != null)
       ((Articolo)iMateriale.get(new Integer((6 + (iCurrentNumPag - 1) * 20)))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal7(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMateriale7Key() {
     //Fix 18536 Inizio
     //return iMateriale7.getKey();
     if(iMateriale.get(new Integer((6 + (iCurrentNumPag - 1) * 20))) != null)
       return ((Articolo)iMateriale.get(new Integer((6 + (iCurrentNumPag - 1) * 20)))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMateriale7(String rArticolo) {
     setMaterialeInternal7(rArticolo);
     setDirty();
   }

   public String getIdMateriale7() {
     //Fix 18536 Inizio
     //String key = iMateriale7.getKey();
     String key = null;
     if(iMateriale.get(new Integer((6 + (iCurrentNumPag - 1) * 20))) != null)
       key = ((Articolo)iMateriale.get(new Integer((6 + (iCurrentNumPag - 1) * 20)))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setArticoloVersione7(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setMaterialeInternal7(rArticolo);
     //Fix 18536 Inzio
     //this.iMaterialeVersione7.setObject(articoloVersione);
     if(articoloVersione != null)
       iMaterialeVersione.put(new Integer((6 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getMaterialeVersione7() {
     //Fix 18536 Inizio
     //return (ArticoloVersione)iMaterialeVersione7.getObject();
     return (ArticoloVersione)iMaterialeVersione.get(new Integer(6 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMaterialeVersione7Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMaterialeVersione7.setKey(key);
     if(iMaterialeVersione.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal7(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMaterialeVersione7Key() {
     //Fix 18536 Inizio
     //return iMaterialeVersione7.getKey();
     if(iMaterialeVersione.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iMaterialeVersione.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdVersione7(Integer versione) {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione7.getKey();
     //iMaterialeVersione7.setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     if(iMaterialeVersione.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public Integer getIdVersione7() {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione7.getKey();
     String key = null;
     if(iMaterialeVersione.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key,3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setConfigurazione7(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (configurazione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     }
     setMaterialeInternal7(rArticolo);
     //Fix 18536 Inizio
     //this.iConfigurazione7.setObject(configurazione);
     if(configurazione != null)
       iMaterialeConfig.put(new Integer((6 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getConfigurazione7() {
     //Fix 18536 Inizio
     //return (Configurazione)iConfigurazione7.getObject();
     return (Configurazione)iMaterialeConfig.get(new Integer(6 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setConfigurazione7Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iConfigurazione7.setKey(key);
     if(iMaterialeConfig.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal7(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getConfigurazione7Key() {
     //Fix 18536 Inizio
     //return iConfigurazione7.getKey();
     if(iMaterialeConfig.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iMaterialeConfig.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdConfigurazione7(Integer idConfigurazione) {
     //Fix 18536 Inizio
     //String key = iConfigurazione7.getKey();
     //iConfigurazione7.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idConfigurazione));
     if(iMaterialeConfig.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Configurazione)iMaterialeConfig.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iMaterialeConfig.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idConfigurazione));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public Integer getIdConfigurazione7() {
     //Fix 18536 Inizio
     //String key = iConfigurazione7.getKey();
     String key = null;
     if(iMaterialeConfig.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Configurazione)iMaterialeConfig.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     //return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
     return KeyHelper.stringToIntegerObj(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
   }

   public String getIdEsternoConfig7()
   { //Fix 18536 Inizio
     //return iConfigurazione7.getIdEsternoConfig();
     if(iMaterialeConfig.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null){
       return ((Configurazione)iMaterialeConfig.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     }
     return null;
     //Fix 18536 Fine
   }

   public void setIdEsternoConfig7(String idEsternoConfig)
   { //Fix 18536 Inizio
     //iConfigurazione7.setIdEsternoConfig(idEsternoConfig);
     if(iMaterialeConfig.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null){
       ((Configurazione)iMaterialeConfig.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     }
     //Fix 18536 Fine
   }

   public void setLotto7(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setMaterialeInternal7(rArticolo);
     //Fix 18536 Inizio
     //this.iLotto7.setObject(lotto);
     if(lotto != null)
       iLottoMateriale.put(new Integer((6+(iCurrentNumPag-1)*20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLotto7() {
     //Fix 18536 Inizio
     //return (Lotto)iLotto7.getObject();
     return (Lotto)iLottoMateriale.get(new Integer(6 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLotto7Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLotto7.setKey(key);
     if(iLottoMateriale.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoMateriale.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal7(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLotto7Key() {
     //Fix 18536 Inizio
     //return iLotto7.getKey();
     if(iLottoMateriale.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoMateriale.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLotto7(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLotto7.getKey();
     //iLotto7.setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
     if(iLottoMateriale.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Lotto)iLottoMateriale.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public String getIdLotto7() {
     //Fix 18536 Inizio
     //String key = iLotto7.getKey();
     String key = null;
     if(iLottoMateriale.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoMateriale.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setMaterialeInternal7(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iMaterialeVersione7.getKey();
     //iMaterialeVersione7.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     String key1 = null;
     if(iMaterialeVersione.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null){
       key1 = ((ArticoloVersione)iMaterialeVersione.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1 , 2, rArticolo));
     }
     //String key2 = iMateriale7.getKey();
     //iMateriale7.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     String key2 = null;
     if(iMateriale.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null){
       key2 = ((Articolo)iMateriale.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iMateriale.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2 , 2, rArticolo));
     }
     //String key3 = iLotto7.getKey();
     //iLotto7.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     String key3 = null;
     if(iLottoMateriale.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null){
       key3 = ((Lotto)iLottoMateriale.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3 , 2, rArticolo));
     }
     //iConfigurazione7.setIdArticolo(rArticolo);
     if(iMaterialeConfig.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaPrlUmPrm7(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmPrm7 = qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaPrlUmPrm.put(new Integer((6 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaPrlUmPrmInternal(qtaPrlUmPrm, 6);
     setDirty();
   }

   public BigDecimal getQtaPrlUmPrm7() {
     //Fix 18536 Inizio
     //return iQtaPrlUmPrm7;
     return (BigDecimal)iQtaPrlUmPrm.get(new Integer(6 + (iCurrentNumPag - 1) * 20));
     //Fix 18536
   }

   public void setQtaPrlUmSec7(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmSec7 = qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaPrlUmSec.put(new Integer((6 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaPrlUmSecInternal(qtaPrlUmSec, 6);
     setDirty();
   }

   public BigDecimal getQtaPrlUmSec7() {
     //Fix 18536 Inizio
     //return iQtaPrlUmSec7;
     return (BigDecimal)iQtaPrlUmSec.get(new Integer(6 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecMat7() {
     if (getMateriale7() != null)
       return getMateriale7().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmMat7() {
     if (getMateriale7() != null)
       return getMateriale7().getIdUMPrmMag();
     return null;
   }

   public String getDescrizioneMateriale7() {
     //Fix 18536 Inizio
     //if (getMateriale7() != null) {
     //  return getMateriale7().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     return (String)iDescrizioneMateriale.get(new Integer(6 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   //Fix 18536 Inizio
   public void setDescrizioneMateriale7(String desc){
     if(desc != null)
       iDescrizioneMateriale.put(new Integer((6 + (iCurrentNumPag - 1) * 20)), desc);
   }
   //Fix 18536 Fine

   /*------ Linea attributi materiale n°8 -----*/
   public void setMagazzinoPrl8(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //Fix 18536 Inizio
     //this.iMagazzinoPrl8.setObject(magazzino);
     if(magazzino != null)
       iMagazzinoPrl.put(new Integer((7 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoPrl8() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl8.getObject();
     return (Magazzino)iMagazzinoPrl.get(new Integer(7 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoPrl8Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoPrl8.setKey(key);
     if(iMagazzinoPrl.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null){
       ((Magazzino)iMagazzinoPrl.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoPrl8Key() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl8.getObject();
     if(iMagazzinoPrl.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoPrl.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoPrl8(String idMagazzino) {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl8.getKey();
     //iMagazzinoPrl8.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idMagazzino));
     if(iMagazzinoPrl.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Magazzino)iMagazzinoPrl.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoPrl.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idMagazzino));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdMagazzinoPrl8() {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl8.getKey();
     String key = null;
     if(iMagazzinoPrl.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoPrl.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key,2);
   }

   public void setMateriale8(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setMaterialeInternal8(idArticolo);
     //Fix 18536 Inizio
     //iMateriale8.setObject(articolo);
     if(articolo != null)
       iMateriale.put(new Integer((7 + (iCurrentNumPag - 1) * 20)), articolo);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getMateriale8() {
     //Fix 18536 Inizio
     //return (Articolo) iMateriale8.getObject();
     return (Articolo) iMateriale.get(new Integer(7 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMateriale8Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMateriale8.setKey(key);
     if(iMateriale.get(new Integer((7 + (iCurrentNumPag - 1) * 20))) != null)
       ((Articolo)iMateriale.get(new Integer((7 + (iCurrentNumPag - 1) * 20)))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal8(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMateriale8Key() {
     //Fix 18536 Inizio
     //return iMateriale8.getKey();
     if(iMateriale.get(new Integer((7 + (iCurrentNumPag - 1) * 20))) != null)
       return ((Articolo)iMateriale.get(new Integer((7 + (iCurrentNumPag - 1) * 20)))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMateriale8(String rArticolo) {
     setMaterialeInternal8(rArticolo);
     setDirty();
   }

   public String getIdMateriale8() {
     //Fix 18536 Inizio
     //String key = iMateriale8.getKey();
     String key = null;
     if(iMateriale.get(new Integer((7 + (iCurrentNumPag - 1) * 20))) != null)
       key = ((Articolo)iMateriale.get(new Integer((7 + (iCurrentNumPag - 1) * 20)))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setArticoloVersione8(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setMaterialeInternal8(rArticolo);
     //Fix 18536 Inzio
     //this.iMaterialeVersione8.setObject(articoloVersione);
     if(articoloVersione != null)
       iMaterialeVersione.put(new Integer((7 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getMaterialeVersione8() {
     //Fix 18536 Inizio
     //return (ArticoloVersione)iMaterialeVersione8.getObject();
     return (ArticoloVersione)iMaterialeVersione.get(new Integer(7 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMaterialeVersione8Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMaterialeVersione8.setKey(key);
     if(iMaterialeVersione.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal8(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMaterialeVersione8Key() {
     //Fix 18536 Inizio
     //return iMaterialeVersione8.getKey();
     if(iMaterialeVersione.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iMaterialeVersione.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdVersione8(Integer versione) {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione8.getKey();
     //iMaterialeVersione8.setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     if(iMaterialeVersione.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public Integer getIdVersione8() {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione8.getKey();
     String key = null;
     if(iMaterialeVersione.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key,3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setConfigurazione8(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (configurazione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     }
     setMaterialeInternal8(rArticolo);
     //Fix 18536 Inizio
     //this.iConfigurazione8.setObject(configurazione);
     if(configurazione != null)
       iMaterialeConfig.put(new Integer((7 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getConfigurazione8() {
     //Fix 18536 Inizio
     //return (Configurazione)iConfigurazione8.getObject();
     return (Configurazione)iMaterialeConfig.get(new Integer(7 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setConfigurazione8Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iConfigurazione8.setKey(key);
     if(iMaterialeConfig.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal8(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getConfigurazione8Key() {
     //Fix 18536 Inizio
     //return iConfigurazione8.getKey();
     if(iMaterialeConfig.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iMaterialeConfig.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdConfigurazione8(Integer idConfigurazione) {
     //Fix 18536 Inizio
     //String key = iConfigurazione8.getKey();
     //iConfigurazione8.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idConfigurazione));
     if(iMaterialeConfig.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Configurazione)iMaterialeConfig.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iMaterialeConfig.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idConfigurazione));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public Integer getIdConfigurazione8() {
     //Fix 18536 Inizio
     //String key = iConfigurazione8.getKey();
     String key = null;
     if(iMaterialeConfig.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Configurazione)iMaterialeConfig.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     //return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
     return KeyHelper.stringToIntegerObj(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
   }

   public String getIdEsternoConfig8()
   { //Fix 18536 Inizio
     //return iConfigurazione8.getIdEsternoConfig();
     if(iMaterialeConfig.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null){
       return ((Configurazione)iMaterialeConfig.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     }
     return null;
     //Fix 18536 Fine
   }

   public void setIdEsternoConfig8(String idEsternoConfig)
   { //Fix 18536 Inizio
     //iConfigurazione8.setIdEsternoConfig(idEsternoConfig);
     if(iMaterialeConfig.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null){
       ((Configurazione)iMaterialeConfig.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     }
     //Fix 18536 Fine
   }

   public void setLotto8(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setMaterialeInternal8(rArticolo);
     //Fix 18536 Inizio
     //this.iLotto8.setObject(lotto);
     if(lotto != null)
       iLottoMateriale.put(new Integer((7+(iCurrentNumPag-1)*20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLotto8() {
     //Fix 18536 Inizio
     //return (Lotto)iLotto8.getObject();
     return (Lotto)iLottoMateriale.get(new Integer(7 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLotto8Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLotto8.setKey(key);
     if(iLottoMateriale.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoMateriale.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal8(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLotto8Key() {
     //Fix 18536 Inizio
     //return iLotto8.getKey();
     if(iLottoMateriale.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoMateriale.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLotto8(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLotto8.getKey();
     //iLotto8.setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
     if(iLottoMateriale.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Lotto)iLottoMateriale.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public String getIdLotto8() {
     //Fix 18536 Inizio
     //String key = iLotto8.getKey();
     String key = null;
     if(iLottoMateriale.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoMateriale.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setMaterialeInternal8(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iMaterialeVersione8.getKey();
     //iMaterialeVersione8.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     String key1 = null;
     if(iMaterialeVersione.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null){
       key1 = ((ArticoloVersione)iMaterialeVersione.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1 , 2, rArticolo));
     }
     //String key2 = iMateriale8.getKey();
     //iMateriale8.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     String key2 = null;
     if(iMateriale.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null){
       key2 = ((Articolo)iMateriale.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iMateriale.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2 , 2, rArticolo));
     }
     //String key3 = iLotto8.getKey();
     //iLotto8.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     String key3 = null;
     if(iLottoMateriale.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null){
       key3 = ((Lotto)iLottoMateriale.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3 , 2, rArticolo));
     }
     //iConfigurazione8.setIdArticolo(rArticolo);
     if(iMaterialeConfig.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaPrlUmPrm8(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmPrm8 = qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaPrlUmPrm.put(new Integer((7 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaPrlUmPrmInternal(qtaPrlUmPrm, 7);
     setDirty();
   }

   public BigDecimal getQtaPrlUmPrm8() {
     //Fix 18536 Inizio
     //return iQtaPrlUmPrm8;
     return (BigDecimal)iQtaPrlUmPrm.get(new Integer(7 + (iCurrentNumPag - 1) * 20));
     //Fix 18536
   }

   public void setQtaPrlUmSec8(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmSec8 = qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaPrlUmSec.put(new Integer((7 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaPrlUmSecInternal(qtaPrlUmSec, 7);
     setDirty();
   }

   public BigDecimal getQtaPrlUmSec8() {
     //Fix 18536 Inizio
     //return iQtaPrlUmSec8;
     return (BigDecimal)iQtaPrlUmSec.get(new Integer(7 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecMat8() {
     if (getMateriale8() != null)
       return getMateriale8().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmMat8() {
     if (getMateriale8() != null)
       return getMateriale8().getIdUMPrmMag();
     return null;
   }

   public String getDescrizioneMateriale8() {
     //Fix 18536 Inizio
     //if (getMateriale8() != null) {
     //  return getMateriale8().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     return (String)iDescrizioneMateriale.get(new Integer(7 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   //Fix 18536 Inizio
   public void setDescrizioneMateriale8(String desc){
     if(desc != null)
       iDescrizioneMateriale.put(new Integer((7 + (iCurrentNumPag - 1) * 20)), desc);
   }
   //Fix 18536 Fine

   /*------ Linea attributi materiale n°9 -----*/
   public void setMagazzinoPrl9(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //Fix 18536 Inizio
     //this.iMagazzinoPrl9.setObject(magazzino);
     if(magazzino != null)
       iMagazzinoPrl.put(new Integer((8 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoPrl9() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl9.getObject();
     return (Magazzino)iMagazzinoPrl.get(new Integer(8 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoPrl9Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoPrl9.setKey(key);
     if(iMagazzinoPrl.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null){
       ((Magazzino)iMagazzinoPrl.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoPrl9Key() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl9.getObject();
     if(iMagazzinoPrl.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoPrl.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoPrl9(String idMagazzino) {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl9.getKey();
     //iMagazzinoPrl9.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idMagazzino));
     if(iMagazzinoPrl.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Magazzino)iMagazzinoPrl.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoPrl.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idMagazzino));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdMagazzinoPrl9() {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl9.getKey();
     String key = null;
     if(iMagazzinoPrl.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoPrl.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key,2);
   }

   public void setMateriale9(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setMaterialeInternal9(idArticolo);
     //Fix 18536 Inizio
     //iMateriale9.setObject(articolo);
     if(articolo != null)
       iMateriale.put(new Integer((8 + (iCurrentNumPag - 1) * 20)), articolo);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getMateriale9() {
     //Fix 18536 Inizio
     //return (Articolo) iMateriale9.getObject();
     return (Articolo) iMateriale.get(new Integer(8 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMateriale9Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMateriale9.setKey(key);
     if(iMateriale.get(new Integer((8 + (iCurrentNumPag - 1) * 20))) != null)
       ((Articolo)iMateriale.get(new Integer((8 + (iCurrentNumPag - 1) * 20)))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal9(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMateriale9Key() {
     //Fix 18536 Inizio
     //return iMateriale9.getKey();
     if(iMateriale.get(new Integer((8 + (iCurrentNumPag - 1) * 20))) != null)
       return ((Articolo)iMateriale.get(new Integer((8 + (iCurrentNumPag - 1) * 20)))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMateriale9(String rArticolo) {
     setMaterialeInternal9(rArticolo);
     setDirty();
   }

   public String getIdMateriale9() {
     //Fix 18536 Inizio
     //String key = iMateriale9.getKey();
     String key = null;
     if(iMateriale.get(new Integer((8 + (iCurrentNumPag - 1) * 20))) != null)
       key = ((Articolo)iMateriale.get(new Integer((8 + (iCurrentNumPag - 1) * 20)))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setArticoloVersione9(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setMaterialeInternal9(rArticolo);
     //Fix 18536 Inzio
     //this.iMaterialeVersione9.setObject(articoloVersione);
     if(articoloVersione != null)
       iMaterialeVersione.put(new Integer((8 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getMaterialeVersione9() {
     //Fix 18536 Inizio
     //return (ArticoloVersione)iMaterialeVersione9.getObject();
     return (ArticoloVersione)iMaterialeVersione.get(new Integer(8 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMaterialeVersione9Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMaterialeVersione9.setKey(key);
     if(iMaterialeVersione.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal9(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMaterialeVersione9Key() {
     //Fix 18536 Inizio
     //return iMaterialeVersione9.getKey();
     if(iMaterialeVersione.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iMaterialeVersione.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdVersione9(Integer versione) {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione9.getKey();
     //iMaterialeVersione9.setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     if(iMaterialeVersione.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public Integer getIdVersione9() {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione9.getKey();
     String key = null;
     if(iMaterialeVersione.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key,3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setConfigurazione9(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (configurazione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     }
     setMaterialeInternal9(rArticolo);
     //Fix 18536 Inizio
     //this.iConfigurazione9.setObject(configurazione);
     if(configurazione != null)
       iMaterialeConfig.put(new Integer((8 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getConfigurazione9() {
     //Fix 18536 Inizio
     //return (Configurazione)iConfigurazione9.getObject();
     return (Configurazione)iMaterialeConfig.get(new Integer(8 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setConfigurazione9Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iConfigurazione9.setKey(key);
     if(iMaterialeConfig.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal9(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getConfigurazione9Key() {
     //Fix 18536 Inizio
     //return iConfigurazione9.getKey();
     if(iMaterialeConfig.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iMaterialeConfig.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdConfigurazione9(Integer idConfigurazione) {
     //Fix 18536 Inizio
     //String key = iConfigurazione9.getKey();
     //iConfigurazione9.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idConfigurazione));
     if(iMaterialeConfig.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Configurazione)iMaterialeConfig.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iMaterialeConfig.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idConfigurazione));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public Integer getIdConfigurazione9() {
     //Fix 18536 Inizio
     //String key = iConfigurazione9.getKey();
     String key = null;
     if(iMaterialeConfig.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Configurazione)iMaterialeConfig.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     //return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
     return KeyHelper.stringToIntegerObj(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
   }

   public String getIdEsternoConfig9()
   { //Fix 18536 Inizio
     //return iConfigurazione9.getIdEsternoConfig();
     if(iMaterialeConfig.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null){
       return ((Configurazione)iMaterialeConfig.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     }
     return null;
     //Fix 18536 Fine
   }

   public void setIdEsternoConfig9(String idEsternoConfig)
   { //Fix 18536 Inizio
     //iConfigurazione9.setIdEsternoConfig(idEsternoConfig);
     if(iMaterialeConfig.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null){
       ((Configurazione)iMaterialeConfig.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     }
     //Fix 18536 Fine
   }

   public void setLotto9(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setMaterialeInternal9(rArticolo);
     //Fix 18536 Inizio
     //this.iLotto9.setObject(lotto);
     if(lotto != null)
       iLottoMateriale.put(new Integer((8+(iCurrentNumPag-1)*20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLotto9() {
     //Fix 18536 Inizio
     //return (Lotto)iLotto9.getObject();
     return (Lotto)iLottoMateriale.get(new Integer(8 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLotto9Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLotto9.setKey(key);
     if(iLottoMateriale.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoMateriale.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal9(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLotto9Key() {
     //Fix 18536 Inizio
     //return iLotto9.getKey();
     if(iLottoMateriale.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoMateriale.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLotto9(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLotto9.getKey();
     //iLotto9.setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
     if(iLottoMateriale.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Lotto)iLottoMateriale.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public String getIdLotto9() {
     //Fix 18536 Inizio
     //String key = iLotto9.getKey();
     String key = null;
     if(iLottoMateriale.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoMateriale.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setMaterialeInternal9(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iMaterialeVersione9.getKey();
     //iMaterialeVersione9.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     String key1 = null;
     if(iMaterialeVersione.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null){
       key1 = ((ArticoloVersione)iMaterialeVersione.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1 , 2, rArticolo));
     }
     //String key2 = iMateriale9.getKey();
     //iMateriale9.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     String key2 = null;
     if(iMateriale.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null){
       key2 = ((Articolo)iMateriale.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iMateriale.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2 , 2, rArticolo));
     }
     //String key3 = iLotto9.getKey();
     //iLotto9.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     String key3 = null;
     if(iLottoMateriale.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null){
       key3 = ((Lotto)iLottoMateriale.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3 , 2, rArticolo));
     }
     //iConfigurazione9.setIdArticolo(rArticolo);
     if(iMaterialeConfig.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaPrlUmPrm9(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmPrm9 = qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaPrlUmPrm.put(new Integer((8 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaPrlUmPrmInternal(qtaPrlUmPrm, 8);
     setDirty();
   }

   public BigDecimal getQtaPrlUmPrm9() {
     //Fix 18536 Inizio
     //return iQtaPrlUmPrm9;
     return (BigDecimal)iQtaPrlUmPrm.get(new Integer(8 + (iCurrentNumPag - 1) * 20));
     //Fix 18536
   }

   public void setQtaPrlUmSec9(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmSec9 = qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaPrlUmSec.put(new Integer((8 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaPrlUmSecInternal(qtaPrlUmSec, 8);
     setDirty();
   }

   public BigDecimal getQtaPrlUmSec9() {
     //Fix 18536 Inizio
     //return iQtaPrlUmSec9;
     return (BigDecimal)iQtaPrlUmSec.get(new Integer(8 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecMat9() {
     if (getMateriale9() != null)
       return getMateriale9().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmMat9() {
     if (getMateriale9() != null)
       return getMateriale9().getIdUMPrmMag();
     return null;
   }

   public String getDescrizioneMateriale9() {
     //Fix 18536 Inizio
     //if (getMateriale9() != null) {
     //  return getMateriale9().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     return (String)iDescrizioneMateriale.get(new Integer(8 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   //Fix 18536 Inizio
   public void setDescrizioneMateriale9(String desc){
     if(desc != null)
       iDescrizioneMateriale.put(new Integer((8 + (iCurrentNumPag - 1) * 20)), desc);
   }
   //Fix 18536 Fine

   /*------ Linea attributi materiale n°10 -----*/
   public void setMagazzinoPrl10(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //Fix 18536 Inizio
     //this.iMagazzinoPrl10.setObject(magazzino);
     if(magazzino != null)
       iMagazzinoPrl.put(new Integer((9 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoPrl10() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl10.getObject();
     return (Magazzino)iMagazzinoPrl.get(new Integer(9 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoPrl10Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoPrl10.setKey(key);
     if(iMagazzinoPrl.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null){
       ((Magazzino)iMagazzinoPrl.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoPrl10Key() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl10.getObject();
     if(iMagazzinoPrl.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoPrl.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoPrl10(String idMagazzino) {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl10.getKey();
     //iMagazzinoPrl10.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idMagazzino));
     if(iMagazzinoPrl.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Magazzino)iMagazzinoPrl.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoPrl.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idMagazzino));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdMagazzinoPrl10() {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl10.getKey();
     String key = null;
     if(iMagazzinoPrl.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoPrl.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key,2);
   }

   public void setMateriale10(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setMaterialeInternal10(idArticolo);
     //Fix 18536 Inizio
     //iMateriale10.setObject(articolo);
     if(articolo != null)
       iMateriale.put(new Integer((9 + (iCurrentNumPag - 1) * 20)), articolo);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getMateriale10() {
     //Fix 18536 Inizio
     //return (Articolo) iMateriale10.getObject();
     return (Articolo) iMateriale.get(new Integer(9 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMateriale10Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMateriale10.setKey(key);
     if(iMateriale.get(new Integer((9 + (iCurrentNumPag - 1) * 20))) != null)
       ((Articolo)iMateriale.get(new Integer((9 + (iCurrentNumPag - 1) * 20)))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal10(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMateriale10Key() {
     //Fix 18536 Inizio
     //return iMateriale10.getKey();
     if(iMateriale.get(new Integer((9 + (iCurrentNumPag - 1) * 20))) != null)
       return ((Articolo)iMateriale.get(new Integer((9 + (iCurrentNumPag - 1) * 20)))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMateriale10(String rArticolo) {
     setMaterialeInternal10(rArticolo);
     setDirty();
   }

   public String getIdMateriale10() {
     //Fix 18536 Inizio
     //String key = iMateriale10.getKey();
     String key = null;
     if(iMateriale.get(new Integer((9 + (iCurrentNumPag - 1) * 20))) != null)
       key = ((Articolo)iMateriale.get(new Integer((9 + (iCurrentNumPag - 1) * 20)))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setArticoloVersione10(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setMaterialeInternal10(rArticolo);
     //Fix 18536 Inzio
     //this.iMaterialeVersione10.setObject(articoloVersione);
     if(articoloVersione != null)
       iMaterialeVersione.put(new Integer((9 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getMaterialeVersione10() {
     //Fix 18536 Inizio
     //return (ArticoloVersione)iMaterialeVersione10.getObject();
     return (ArticoloVersione)iMaterialeVersione.get(new Integer(9 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMaterialeVersione10Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMaterialeVersione10.setKey(key);
     if(iMaterialeVersione.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal10(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMaterialeVersione10Key() {
     //Fix 18536 Inizio
     //return iMaterialeVersione10.getKey();
     if(iMaterialeVersione.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iMaterialeVersione.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdVersione10(Integer versione) {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione10.getKey();
     //iMaterialeVersione10.setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     if(iMaterialeVersione.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public Integer getIdVersione10() {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione10.getKey();
     String key = null;
     if(iMaterialeVersione.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key,3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setConfigurazione10(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (configurazione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     }
     setMaterialeInternal10(rArticolo);
     //Fix 18536 Inizio
     //this.iConfigurazione10.setObject(configurazione);
     if(configurazione != null)
       iMaterialeConfig.put(new Integer((9 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getConfigurazione10() {
     //Fix 18536 Inizio
     //return (Configurazione)iConfigurazione10.getObject();
     return (Configurazione)iMaterialeConfig.get(new Integer(9 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setConfigurazione10Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iConfigurazione10.setKey(key);
     if(iMaterialeConfig.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal10(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getConfigurazione10Key() {
     //Fix 18536 Inizio
     //return iConfigurazione10.getKey();
     if(iMaterialeConfig.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iMaterialeConfig.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdConfigurazione10(Integer idConfigurazione) {
     //Fix 18536 Inizio
     //String key = iConfigurazione10.getKey();
     //iConfigurazione10.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idConfigurazione));
     if(iMaterialeConfig.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Configurazione)iMaterialeConfig.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iMaterialeConfig.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idConfigurazione));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public Integer getIdConfigurazione10() {
     //Fix 18536 Inizio
     //String key = iConfigurazione10.getKey();
     String key = null;
     if(iMaterialeConfig.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Configurazione)iMaterialeConfig.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     //return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
     return KeyHelper.stringToIntegerObj(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
   }

   public String getIdEsternoConfig10()
   { //Fix 18536 Inizio
     //return iConfigurazione10.getIdEsternoConfig();
     if(iMaterialeConfig.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null){
       return ((Configurazione)iMaterialeConfig.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     }
     return null;
     //Fix 18536 Fine
   }

   public void setIdEsternoConfig10(String idEsternoConfig)
   { //Fix 18536 Inizio
     //iConfigurazione10.setIdEsternoConfig(idEsternoConfig);
     if(iMaterialeConfig.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null){
       ((Configurazione)iMaterialeConfig.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     }
     //Fix 18536 Fine
   }

   public void setLotto10(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setMaterialeInternal10(rArticolo);
     //Fix 18536 Inizio
     //this.iLotto10.setObject(lotto);
     if(lotto != null)
       iLottoMateriale.put(new Integer((9+(iCurrentNumPag-1)*20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLotto10() {
     //Fix 18536 Inizio
     //return (Lotto)iLotto10.getObject();
     return (Lotto)iLottoMateriale.get(new Integer(9 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLotto10Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLotto10.setKey(key);
     if(iLottoMateriale.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoMateriale.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal10(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLotto10Key() {
     //Fix 18536 Inizio
     //return iLotto10.getKey();
     if(iLottoMateriale.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoMateriale.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLotto10(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLotto10.getKey();
     //iLotto10.setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
     if(iLottoMateriale.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Lotto)iLottoMateriale.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public String getIdLotto10() {
     //Fix 18536 Inizio
     //String key = iLotto10.getKey();
     String key = null;
     if(iLottoMateriale.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoMateriale.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setMaterialeInternal10(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iMaterialeVersione10.getKey();
     //iMaterialeVersione10.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     String key1 = null;
     if(iMaterialeVersione.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null){
       key1 = ((ArticoloVersione)iMaterialeVersione.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1 , 2, rArticolo));
     }
     //String key2 = iMateriale10.getKey();
     //iMateriale10.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     String key2 = null;
     if(iMateriale.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null){
       key2 = ((Articolo)iMateriale.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iMateriale.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2 , 2, rArticolo));
     }
     //String key3 = iLotto10.getKey();
     //iLotto10.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     String key3 = null;
     if(iLottoMateriale.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null){
       key3 = ((Lotto)iLottoMateriale.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3 , 2, rArticolo));
     }
     //iConfigurazione10.setIdArticolo(rArticolo);
     if(iMaterialeConfig.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaPrlUmPrm10(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmPrm10 = qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaPrlUmPrm.put(new Integer((9 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaPrlUmPrmInternal(qtaPrlUmPrm, 9);
     setDirty();
   }

   public BigDecimal getQtaPrlUmPrm10() {
     //Fix 18536 Inizio
     //return iQtaPrlUmPrm10;
     return (BigDecimal)iQtaPrlUmPrm.get(new Integer(9 + (iCurrentNumPag - 1) * 20));
     //Fix 18536
   }

   public void setQtaPrlUmSec10(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmSec10 = qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaPrlUmSec.put(new Integer((9 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaPrlUmSecInternal(qtaPrlUmSec, 9);
     setDirty();
   }

   public BigDecimal getQtaPrlUmSec10() {
     //Fix 18536 Inizio
     //return iQtaPrlUmSec10;
     return (BigDecimal)iQtaPrlUmSec.get(new Integer(9 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecMat10() {
     if (getMateriale10() != null)
       return getMateriale10().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmMat10() {
     if (getMateriale10() != null)
       return getMateriale10().getIdUMPrmMag();
     return null;
   }

   public String getDescrizioneMateriale10() {
     //Fix 18536 Inizio
     //if (getMateriale10() != null) {
     //  return getMateriale10().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     return (String)iDescrizioneMateriale.get(new Integer(9 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   //Fix 18536 Inizio
   public void setDescrizioneMateriale10(String desc){
     if(desc != null)
       iDescrizioneMateriale.put(new Integer((9 + (iCurrentNumPag - 1) * 20)), desc);
   }
   //Fix 18536 Fine

   /*------ Linea attributi materiale n°11 -----*/
   public void setMagazzinoPrl11(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //Fix 18536 Inizio
     //this.iMagazzinoPrl11.setObject(magazzino);
     if(magazzino != null)
       iMagazzinoPrl.put(new Integer((10 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoPrl11() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl11.getObject();
     return (Magazzino)iMagazzinoPrl.get(new Integer(10 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoPrl11Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoPrl11.setKey(key);
     if(iMagazzinoPrl.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null){
       ((Magazzino)iMagazzinoPrl.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoPrl11Key() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl11.getObject();
     if(iMagazzinoPrl.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoPrl.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoPrl11(String idMagazzino) {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl11.getKey();
     //iMagazzinoPrl11.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idMagazzino));
     if(iMagazzinoPrl.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Magazzino)iMagazzinoPrl.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoPrl.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idMagazzino));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdMagazzinoPrl11() {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl11.getKey();
     String key = null;
     if(iMagazzinoPrl.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoPrl.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key,2);
   }

   public void setMateriale11(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setMaterialeInternal11(idArticolo);
     //Fix 18536 Inizio
     //iMateriale11.setObject(articolo);
     if(articolo != null)
       iMateriale.put(new Integer((10 + (iCurrentNumPag - 1) * 20)), articolo);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getMateriale11() {
     //Fix 18536 Inizio
     //return (Articolo) iMateriale11.getObject();
     return (Articolo) iMateriale.get(new Integer(10 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMateriale11Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMateriale11.setKey(key);
     if(iMateriale.get(new Integer((10 + (iCurrentNumPag - 1) * 20))) != null)
       ((Articolo)iMateriale.get(new Integer((10 + (iCurrentNumPag - 1) * 20)))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal11(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMateriale11Key() {
     //Fix 18536 Inizio
     //return iMateriale11.getKey();
     if(iMateriale.get(new Integer((10 + (iCurrentNumPag - 1) * 20))) != null)
       return ((Articolo)iMateriale.get(new Integer((10 + (iCurrentNumPag - 1) * 20)))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMateriale11(String rArticolo) {
     setMaterialeInternal11(rArticolo);
     setDirty();
   }

   public String getIdMateriale11() {
     //Fix 18536 Inizio
     //String key = iMateriale11.getKey();
     String key = null;
     if(iMateriale.get(new Integer((10 + (iCurrentNumPag - 1) * 20))) != null)
       key = ((Articolo)iMateriale.get(new Integer((10 + (iCurrentNumPag - 1) * 20)))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setArticoloVersione11(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setMaterialeInternal11(rArticolo);
     //Fix 18536 Inzio
     //this.iMaterialeVersione11.setObject(articoloVersione);
     if(articoloVersione != null)
       iMaterialeVersione.put(new Integer((10 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getMaterialeVersione11() {
     //Fix 18536 Inizio
     //return (ArticoloVersione)iMaterialeVersione11.getObject();
     return (ArticoloVersione)iMaterialeVersione.get(new Integer(10 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMaterialeVersione11Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMaterialeVersione11.setKey(key);
     if(iMaterialeVersione.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal11(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMaterialeVersione11Key() {
     //Fix 18536 Inizio
     //return iMaterialeVersione11.getKey();
     if(iMaterialeVersione.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iMaterialeVersione.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdVersione11(Integer versione) {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione11.getKey();
     //iMaterialeVersione11.setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     if(iMaterialeVersione.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public Integer getIdVersione11() {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione11.getKey();
     String key = null;
     if(iMaterialeVersione.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key,3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setConfigurazione11(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (configurazione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     }
     setMaterialeInternal11(rArticolo);
     //Fix 18536 Inizio
     //this.iConfigurazione11.setObject(configurazione);
     if(configurazione != null)
       iMaterialeConfig.put(new Integer((10 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getConfigurazione11() {
     //Fix 18536 Inizio
     //return (Configurazione)iConfigurazione11.getObject();
     return (Configurazione)iMaterialeConfig.get(new Integer(10 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setConfigurazione11Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iConfigurazione11.setKey(key);
     if(iMaterialeConfig.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal11(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getConfigurazione11Key() {
     //Fix 18536 Inizio
     //return iConfigurazione11.getKey();
     if(iMaterialeConfig.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iMaterialeConfig.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdConfigurazione11(Integer idConfigurazione) {
     //Fix 18536 Inizio
     //String key = iConfigurazione11.getKey();
     //iConfigurazione11.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idConfigurazione));
     if(iMaterialeConfig.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Configurazione)iMaterialeConfig.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iMaterialeConfig.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idConfigurazione));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public Integer getIdConfigurazione11() {
     //Fix 18536 Inizio
     //String key = iConfigurazione11.getKey();
     String key = null;
     if(iMaterialeConfig.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Configurazione)iMaterialeConfig.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     //return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
     return KeyHelper.stringToIntegerObj(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
   }

   public String getIdEsternoConfig11()
   { //Fix 18536 Inizio
     //return iConfigurazione11.getIdEsternoConfig();
     if(iMaterialeConfig.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null){
       return ((Configurazione)iMaterialeConfig.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     }
     return null;
     //Fix 18536 Fine
   }

   public void setIdEsternoConfig11(String idEsternoConfig)
   { //Fix 18536 Inizio
     //iConfigurazione11.setIdEsternoConfig(idEsternoConfig);
     if(iMaterialeConfig.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null){
       ((Configurazione)iMaterialeConfig.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     }
     //Fix 18536 Fine
   }

   public void setLotto11(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setMaterialeInternal11(rArticolo);
     //Fix 18536 Inizio
     //this.iLotto11.setObject(lotto);
     if(lotto != null)
       iLottoMateriale.put(new Integer((10+(iCurrentNumPag-1)*20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLotto11() {
     //Fix 18536 Inizio
     //return (Lotto)iLotto11.getObject();
     return (Lotto)iLottoMateriale.get(new Integer(10 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLotto11Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLotto11.setKey(key);
     if(iLottoMateriale.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoMateriale.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal11(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLotto11Key() {
     //Fix 18536 Inizio
     //return iLotto11.getKey();
     if(iLottoMateriale.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoMateriale.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLotto11(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLotto11.getKey();
     //iLotto11.setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
     if(iLottoMateriale.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Lotto)iLottoMateriale.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public String getIdLotto11() {
     //Fix 18536 Inizio
     //String key = iLotto11.getKey();
     String key = null;
     if(iLottoMateriale.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoMateriale.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setMaterialeInternal11(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iMaterialeVersione11.getKey();
     //iMaterialeVersione11.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     String key1 = null;
     if(iMaterialeVersione.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null){
       key1 = ((ArticoloVersione)iMaterialeVersione.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1 , 2, rArticolo));
     }
     //String key2 = iMateriale11.getKey();
     //iMateriale11.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     String key2 = null;
     if(iMateriale.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null){
       key2 = ((Articolo)iMateriale.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iMateriale.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2 , 2, rArticolo));
     }
     //String key3 = iLotto11.getKey();
     //iLotto11.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     String key3 = null;
     if(iLottoMateriale.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null){
       key3 = ((Lotto)iLottoMateriale.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3 , 2, rArticolo));
     }
     //iConfigurazione11.setIdArticolo(rArticolo);
     if(iMaterialeConfig.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaPrlUmPrm11(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmPrm11 = qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaPrlUmPrm.put(new Integer((10 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaPrlUmPrmInternal(qtaPrlUmPrm, 10);
     setDirty();
   }

   public BigDecimal getQtaPrlUmPrm11() {
     //Fix 18536 Inizio
     //return iQtaPrlUmPrm11;
     return (BigDecimal)iQtaPrlUmPrm.get(new Integer(10 + (iCurrentNumPag - 1) * 20));
     //Fix 18536
   }

   public void setQtaPrlUmSec11(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmSec11 = qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaPrlUmSec.put(new Integer((10 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaPrlUmSecInternal(qtaPrlUmSec, 10);
     setDirty();
   }

   public BigDecimal getQtaPrlUmSec11() {
     //Fix 18536 Inizio
     //return iQtaPrlUmSec11;
     return (BigDecimal)iQtaPrlUmSec.get(new Integer(10 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecMat11() {
     if (getMateriale11() != null)
       return getMateriale11().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmMat11() {
     if (getMateriale11() != null)
       return getMateriale11().getIdUMPrmMag();
     return null;
   }

   public String getDescrizioneMateriale11() {
     //Fix 18536 Inizio
     //if (getMateriale11() != null) {
     //  return getMateriale11().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     return (String)iDescrizioneMateriale.get(new Integer(10 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   //Fix 18536 Inizio
   public void setDescrizioneMateriale11(String desc){
     if(desc != null)
       iDescrizioneMateriale.put(new Integer((10 + (iCurrentNumPag - 1) * 20)), desc);
   }
   //Fix 18536 Fine

   /*------ Linea attributi materiale n°12 -----*/
   public void setMagazzinoPrl12(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //Fix 18536 Inizio
     //this.iMagazzinoPrl12.setObject(magazzino);
     if(magazzino != null)
       iMagazzinoPrl.put(new Integer((11 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoPrl12() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl12.getObject();
     return (Magazzino)iMagazzinoPrl.get(new Integer(11 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoPrl12Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoPrl12.setKey(key);
     if(iMagazzinoPrl.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null){
       ((Magazzino)iMagazzinoPrl.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoPrl12Key() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl12.getObject();
     if(iMagazzinoPrl.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoPrl.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoPrl12(String idMagazzino) {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl12.getKey();
     //iMagazzinoPrl12.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idMagazzino));
     if(iMagazzinoPrl.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Magazzino)iMagazzinoPrl.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoPrl.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idMagazzino));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdMagazzinoPrl12() {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl12.getKey();
     String key = null;
     if(iMagazzinoPrl.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoPrl.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key,2);
   }

   public void setMateriale12(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setMaterialeInternal12(idArticolo);
     //Fix 18536 Inizio
     //iMateriale12.setObject(articolo);
     if(articolo != null)
       iMateriale.put(new Integer((11 + (iCurrentNumPag - 1) * 20)), articolo);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getMateriale12() {
     //Fix 18536 Inizio
     //return (Articolo) iMateriale12.getObject();
     return (Articolo) iMateriale.get(new Integer(11 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMateriale12Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMateriale12.setKey(key);
     if(iMateriale.get(new Integer((11 + (iCurrentNumPag - 1) * 20))) != null)
       ((Articolo)iMateriale.get(new Integer((11 + (iCurrentNumPag - 1) * 20)))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal12(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMateriale12Key() {
     //Fix 18536 Inizio
     //return iMateriale12.getKey();
     if(iMateriale.get(new Integer((11 + (iCurrentNumPag - 1) * 20))) != null)
       return ((Articolo)iMateriale.get(new Integer((11 + (iCurrentNumPag - 1) * 20)))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMateriale12(String rArticolo) {
     setMaterialeInternal12(rArticolo);
     setDirty();
   }

   public String getIdMateriale12() {
     //Fix 18536 Inizio
     //String key = iMateriale12.getKey();
     String key = null;
     if(iMateriale.get(new Integer((11 + (iCurrentNumPag - 1) * 20))) != null)
       key = ((Articolo)iMateriale.get(new Integer((11 + (iCurrentNumPag - 1) * 20)))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setArticoloVersione12(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setMaterialeInternal12(rArticolo);
     //Fix 18536 Inzio
     //this.iMaterialeVersione12.setObject(articoloVersione);
     if(articoloVersione != null)
       iMaterialeVersione.put(new Integer((11 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getMaterialeVersione12() {
     //Fix 18536 Inizio
     //return (ArticoloVersione)iMaterialeVersione12.getObject();
     return (ArticoloVersione)iMaterialeVersione.get(new Integer(11 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMaterialeVersione12Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMaterialeVersione12.setKey(key);
     if(iMaterialeVersione.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal12(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMaterialeVersione12Key() {
     //Fix 18536 Inizio
     //return iMaterialeVersione12.getKey();
     if(iMaterialeVersione.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iMaterialeVersione.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdVersione12(Integer versione) {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione12.getKey();
     //iMaterialeVersione12.setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     if(iMaterialeVersione.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public Integer getIdVersione12() {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione12.getKey();
     String key = null;
     if(iMaterialeVersione.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key,3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setConfigurazione12(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (configurazione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     }
     setMaterialeInternal12(rArticolo);
     //Fix 18536 Inizio
     //this.iConfigurazione12.setObject(configurazione);
     if(configurazione != null)
       iMaterialeConfig.put(new Integer((11 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getConfigurazione12() {
     //Fix 18536 Inizio
     //return (Configurazione)iConfigurazione12.getObject();
     return (Configurazione)iMaterialeConfig.get(new Integer(11 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setConfigurazione12Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iConfigurazione12.setKey(key);
     if(iMaterialeConfig.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal12(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getConfigurazione12Key() {
     //Fix 18536 Inizio
     //return iConfigurazione12.getKey();
     if(iMaterialeConfig.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iMaterialeConfig.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdConfigurazione12(Integer idConfigurazione) {
     //Fix 18536 Inizio
     //String key = iConfigurazione12.getKey();
     //iConfigurazione12.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idConfigurazione));
     if(iMaterialeConfig.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Configurazione)iMaterialeConfig.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iMaterialeConfig.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idConfigurazione));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public Integer getIdConfigurazione12() {
     //Fix 18536 Inizio
     //String key = iConfigurazione12.getKey();
     String key = null;
     if(iMaterialeConfig.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Configurazione)iMaterialeConfig.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     //return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
     return KeyHelper.stringToIntegerObj(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
   }

   public String getIdEsternoConfig12()
   { //Fix 18536 Inizio
     //return iConfigurazione12.getIdEsternoConfig();
     if(iMaterialeConfig.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null){
       return ((Configurazione)iMaterialeConfig.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     }
     return null;
     //Fix 18536 Fine
   }

   public void setIdEsternoConfig12(String idEsternoConfig)
   { //Fix 18536 Inizio
     //iConfigurazione12.setIdEsternoConfig(idEsternoConfig);
     if(iMaterialeConfig.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null){
       ((Configurazione)iMaterialeConfig.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     }
     //Fix 18536 Fine
   }

   public void setLotto12(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setMaterialeInternal12(rArticolo);
     //Fix 18536 Inizio
     //this.iLotto12.setObject(lotto);
     if(lotto != null)
       iLottoMateriale.put(new Integer((11+(iCurrentNumPag-1)*20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLotto12() {
     //Fix 18536 Inizio
     //return (Lotto)iLotto12.getObject();
     return (Lotto)iLottoMateriale.get(new Integer(11 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLotto12Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLotto12.setKey(key);
     if(iLottoMateriale.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoMateriale.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal12(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLotto12Key() {
     //Fix 18536 Inizio
     //return iLotto12.getKey();
     if(iLottoMateriale.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoMateriale.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLotto12(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLotto12.getKey();
     //iLotto12.setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
     if(iLottoMateriale.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Lotto)iLottoMateriale.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public String getIdLotto12() {
     //Fix 18536 Inizio
     //String key = iLotto12.getKey();
     String key = null;
     if(iLottoMateriale.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoMateriale.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setMaterialeInternal12(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iMaterialeVersione12.getKey();
     //iMaterialeVersione12.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     String key1 = null;
     if(iMaterialeVersione.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null){
       key1 = ((ArticoloVersione)iMaterialeVersione.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1 , 2, rArticolo));
     }
     //String key2 = iMateriale12.getKey();
     //iMateriale12.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     String key2 = null;
     if(iMateriale.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null){
       key2 = ((Articolo)iMateriale.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iMateriale.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2 , 2, rArticolo));
     }
     //String key3 = iLotto12.getKey();
     //iLotto12.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     String key3 = null;
     if(iLottoMateriale.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null){
       key3 = ((Lotto)iLottoMateriale.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3 , 2, rArticolo));
     }
     //iConfigurazione12.setIdArticolo(rArticolo);
     if(iMaterialeConfig.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaPrlUmPrm12(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmPrm12 = qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaPrlUmPrm.put(new Integer((11 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaPrlUmPrmInternal(qtaPrlUmPrm, 11);
     setDirty();
   }

   public BigDecimal getQtaPrlUmPrm12() {
     //Fix 18536 Inizio
     //return iQtaPrlUmPrm12;
     return (BigDecimal)iQtaPrlUmPrm.get(new Integer(11 + (iCurrentNumPag - 1) * 20));
     //Fix 18536
   }

   public void setQtaPrlUmSec12(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmSec12 = qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaPrlUmSec.put(new Integer((11 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaPrlUmSecInternal(qtaPrlUmSec, 11);
     setDirty();
   }

   public BigDecimal getQtaPrlUmSec12() {
     //Fix 18536 Inizio
     //return iQtaPrlUmSec12;
     return (BigDecimal)iQtaPrlUmSec.get(new Integer(11 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecMat12() {
     if (getMateriale12() != null)
       return getMateriale12().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmMat12() {
     if (getMateriale12() != null)
       return getMateriale12().getIdUMPrmMag();
     return null;
   }

   public String getDescrizioneMateriale12() {
     //Fix 18536 Inizio
     //if (getMateriale12() != null) {
     //  return getMateriale12().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     return (String)iDescrizioneMateriale.get(new Integer(11 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   //Fix 18536 Inizio
   public void setDescrizioneMateriale12(String desc){
     if(desc != null)
       iDescrizioneMateriale.put(new Integer((11 + (iCurrentNumPag - 1) * 20)), desc);
   }
   //Fix 18536 Fine

   /*------ Linea attributi materiale n°13 -----*/
   public void setMagazzinoPrl13(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //Fix 18536 Inizio
     //this.iMagazzinoPrl13.setObject(magazzino);
     if(magazzino != null)
       iMagazzinoPrl.put(new Integer((12 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoPrl13() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl13.getObject();
     return (Magazzino)iMagazzinoPrl.get(new Integer(12 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoPrl13Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoPrl13.setKey(key);
     if(iMagazzinoPrl.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null){
       ((Magazzino)iMagazzinoPrl.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoPrl13Key() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl13.getObject();
     if(iMagazzinoPrl.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoPrl.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoPrl13(String idMagazzino) {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl13.getKey();
     //iMagazzinoPrl13.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idMagazzino));
     if(iMagazzinoPrl.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Magazzino)iMagazzinoPrl.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoPrl.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idMagazzino));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdMagazzinoPrl13() {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl13.getKey();
     String key = null;
     if(iMagazzinoPrl.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoPrl.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key,2);
   }

   public void setMateriale13(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setMaterialeInternal13(idArticolo);
     //Fix 18536 Inizio
     //iMateriale13.setObject(articolo);
     if(articolo != null)
       iMateriale.put(new Integer((12 + (iCurrentNumPag - 1) * 20)), articolo);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getMateriale13() {
     //Fix 18536 Inizio
     //return (Articolo) iMateriale13.getObject();
     return (Articolo) iMateriale.get(new Integer(12 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMateriale13Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMateriale13.setKey(key);
     if(iMateriale.get(new Integer((12 + (iCurrentNumPag - 1) * 20))) != null)
       ((Articolo)iMateriale.get(new Integer((12 + (iCurrentNumPag - 1) * 20)))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal13(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMateriale13Key() {
     //Fix 18536 Inizio
     //return iMateriale13.getKey();
     if(iMateriale.get(new Integer((12 + (iCurrentNumPag - 1) * 20))) != null)
       return ((Articolo)iMateriale.get(new Integer((12 + (iCurrentNumPag - 1) * 20)))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMateriale13(String rArticolo) {
     setMaterialeInternal13(rArticolo);
     setDirty();
   }

   public String getIdMateriale13() {
     //Fix 18536 Inizio
     //String key = iMateriale13.getKey();
     String key = null;
     if(iMateriale.get(new Integer((12 + (iCurrentNumPag - 1) * 20))) != null)
       key = ((Articolo)iMateriale.get(new Integer((12 + (iCurrentNumPag - 1) * 20)))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setArticoloVersione13(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setMaterialeInternal13(rArticolo);
     //Fix 18536 Inzio
     //this.iMaterialeVersione13.setObject(articoloVersione);
     if(articoloVersione != null)
       iMaterialeVersione.put(new Integer((12 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getMaterialeVersione13() {
     //Fix 18536 Inizio
     //return (ArticoloVersione)iMaterialeVersione13.getObject();
     return (ArticoloVersione)iMaterialeVersione.get(new Integer(12 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMaterialeVersione13Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMaterialeVersione13.setKey(key);
     if(iMaterialeVersione.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal13(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMaterialeVersione13Key() {
     //Fix 18536 Inizio
     //return iMaterialeVersione13.getKey();
     if(iMaterialeVersione.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iMaterialeVersione.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdVersione13(Integer versione) {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione13.getKey();
     //iMaterialeVersione13.setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     if(iMaterialeVersione.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public Integer getIdVersione13() {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione13.getKey();
     String key = null;
     if(iMaterialeVersione.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key,3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setConfigurazione13(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (configurazione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     }
     setMaterialeInternal13(rArticolo);
     //Fix 18536 Inizio
     //this.iConfigurazione13.setObject(configurazione);
     if(configurazione != null)
       iMaterialeConfig.put(new Integer((12 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getConfigurazione13() {
     //Fix 18536 Inizio
     //return (Configurazione)iConfigurazione13.getObject();
     return (Configurazione)iMaterialeConfig.get(new Integer(12 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setConfigurazione13Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iConfigurazione13.setKey(key);
     if(iMaterialeConfig.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal13(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getConfigurazione13Key() {
     //Fix 18536 Inizio
     //return iConfigurazione13.getKey();
     if(iMaterialeConfig.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iMaterialeConfig.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdConfigurazione13(Integer idConfigurazione) {
     //Fix 18536 Inizio
     //String key = iConfigurazione13.getKey();
     //iConfigurazione13.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idConfigurazione));
     if(iMaterialeConfig.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Configurazione)iMaterialeConfig.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iMaterialeConfig.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idConfigurazione));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public Integer getIdConfigurazione13() {
     //Fix 18536 Inizio
     //String key = iConfigurazione13.getKey();
     String key = null;
     if(iMaterialeConfig.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Configurazione)iMaterialeConfig.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     //return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
     return KeyHelper.stringToIntegerObj(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
   }

   public String getIdEsternoConfig13()
   { //Fix 18536 Inizio
     //return iConfigurazione13.getIdEsternoConfig();
     if(iMaterialeConfig.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null){
       return ((Configurazione)iMaterialeConfig.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     }
     return null;
     //Fix 18536 Fine
   }

   public void setIdEsternoConfig13(String idEsternoConfig)
   { //Fix 18536 Inizio
     //iConfigurazione13.setIdEsternoConfig(idEsternoConfig);
     if(iMaterialeConfig.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null){
       ((Configurazione)iMaterialeConfig.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     }
     //Fix 18536 Fine
   }

   public void setLotto13(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setMaterialeInternal13(rArticolo);
     //Fix 18536 Inizio
     //this.iLotto13.setObject(lotto);
     if(lotto != null)
       iLottoMateriale.put(new Integer((12+(iCurrentNumPag-1)*20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLotto13() {
     //Fix 18536 Inizio
     //return (Lotto)iLotto13.getObject();
     return (Lotto)iLottoMateriale.get(new Integer(12 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLotto13Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLotto13.setKey(key);
     if(iLottoMateriale.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoMateriale.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal13(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLotto13Key() {
     //Fix 18536 Inizio
     //return iLotto13.getKey();
     if(iLottoMateriale.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoMateriale.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLotto13(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLotto13.getKey();
     //iLotto13.setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
     if(iLottoMateriale.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Lotto)iLottoMateriale.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public String getIdLotto13() {
     //Fix 18536 Inizio
     //String key = iLotto13.getKey();
     String key = null;
     if(iLottoMateriale.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoMateriale.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setMaterialeInternal13(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iMaterialeVersione13.getKey();
     //iMaterialeVersione13.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     String key1 = null;
     if(iMaterialeVersione.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null){
       key1 = ((ArticoloVersione)iMaterialeVersione.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1 , 2, rArticolo));
     }
     //String key2 = iMateriale13.getKey();
     //iMateriale13.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     String key2 = null;
     if(iMateriale.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null){
       key2 = ((Articolo)iMateriale.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iMateriale.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2 , 2, rArticolo));
     }
     //String key3 = iLotto13.getKey();
     //iLotto13.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     String key3 = null;
     if(iLottoMateriale.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null){
       key3 = ((Lotto)iLottoMateriale.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3 , 2, rArticolo));
     }
     //iConfigurazione13.setIdArticolo(rArticolo);
     if(iMaterialeConfig.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaPrlUmPrm13(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmPrm13 = qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaPrlUmPrm.put(new Integer((12 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaPrlUmPrmInternal(qtaPrlUmPrm, 12);
     setDirty();
   }

   public BigDecimal getQtaPrlUmPrm13() {
     //Fix 18536 Inizio
     //return iQtaPrlUmPrm13;
     return (BigDecimal)iQtaPrlUmPrm.get(new Integer(12 + (iCurrentNumPag - 1) * 20));
     //Fix 18536
   }

   public void setQtaPrlUmSec13(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmSec13 = qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaPrlUmSec.put(new Integer((12 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaPrlUmSecInternal(qtaPrlUmSec, 12);
     setDirty();
   }

   public BigDecimal getQtaPrlUmSec13() {
     //Fix 18536 Inizio
     //return iQtaPrlUmSec13;
     return (BigDecimal)iQtaPrlUmSec.get(new Integer(12 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecMat13() {
     if (getMateriale13() != null)
       return getMateriale13().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmMat13() {
     if (getMateriale13() != null)
       return getMateriale13().getIdUMPrmMag();
     return null;
   }

   public String getDescrizioneMateriale13() {
     //Fix 18536 Inizio
     //if (getMateriale13() != null) {
     //  return getMateriale13().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     return (String)iDescrizioneMateriale.get(new Integer(12 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   //Fix 18536 Inizio
   public void setDescrizioneMateriale13(String desc){
     if(desc != null)
       iDescrizioneMateriale.put(new Integer((12 + (iCurrentNumPag - 1) * 20)), desc);
   }
   //Fix 18536 Fine

   /*------ Linea attributi materiale n°14 -----*/
   public void setMagazzinoPrl14(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //Fix 18536 Inizio
     //this.iMagazzinoPrl14.setObject(magazzino);
     if(magazzino != null)
       iMagazzinoPrl.put(new Integer((13 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoPrl14() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl14.getObject();
     return (Magazzino)iMagazzinoPrl.get(new Integer(13 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoPrl14Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoPrl14.setKey(key);
     if(iMagazzinoPrl.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null){
       ((Magazzino)iMagazzinoPrl.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoPrl14Key() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl14.getObject();
     if(iMagazzinoPrl.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoPrl.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoPrl14(String idMagazzino) {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl14.getKey();
     //iMagazzinoPrl14.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idMagazzino));
     if(iMagazzinoPrl.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Magazzino)iMagazzinoPrl.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoPrl.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idMagazzino));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdMagazzinoPrl14() {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl14.getKey();
     String key = null;
     if(iMagazzinoPrl.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoPrl.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key,2);
   }

   public void setMateriale14(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setMaterialeInternal14(idArticolo);
     //Fix 18536 Inizio
     //iMateriale14.setObject(articolo);
     if(articolo != null)
       iMateriale.put(new Integer((13 + (iCurrentNumPag - 1) * 20)), articolo);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getMateriale14() {
     //Fix 18536 Inizio
     //return (Articolo) iMateriale14.getObject();
     return (Articolo) iMateriale.get(new Integer(13 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMateriale14Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMateriale14.setKey(key);
     if(iMateriale.get(new Integer((13 + (iCurrentNumPag - 1) * 20))) != null)
       ((Articolo)iMateriale.get(new Integer((13 + (iCurrentNumPag - 1) * 20)))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal14(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMateriale14Key() {
     //Fix 18536 Inizio
     //return iMateriale14.getKey();
     if(iMateriale.get(new Integer((13 + (iCurrentNumPag - 1) * 20))) != null)
       return ((Articolo)iMateriale.get(new Integer((13 + (iCurrentNumPag - 1) * 20)))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMateriale14(String rArticolo) {
     setMaterialeInternal14(rArticolo);
     setDirty();
   }

   public String getIdMateriale14() {
     //Fix 18536 Inizio
     //String key = iMateriale14.getKey();
     String key = null;
     if(iMateriale.get(new Integer((13 + (iCurrentNumPag - 1) * 20))) != null)
       key = ((Articolo)iMateriale.get(new Integer((13 + (iCurrentNumPag - 1) * 20)))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setArticoloVersione14(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setMaterialeInternal14(rArticolo);
     //Fix 18536 Inzio
     //this.iMaterialeVersione14.setObject(articoloVersione);
     if(articoloVersione != null)
       iMaterialeVersione.put(new Integer((13 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getMaterialeVersione14() {
     //Fix 18536 Inizio
     //return (ArticoloVersione)iMaterialeVersione14.getObject();
     return (ArticoloVersione)iMaterialeVersione.get(new Integer(13 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMaterialeVersione14Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMaterialeVersione14.setKey(key);
     if(iMaterialeVersione.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal14(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMaterialeVersione14Key() {
     //Fix 18536 Inizio
     //return iMaterialeVersione14.getKey();
     if(iMaterialeVersione.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iMaterialeVersione.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdVersione14(Integer versione) {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione14.getKey();
     //iMaterialeVersione14.setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     if(iMaterialeVersione.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public Integer getIdVersione14() {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione14.getKey();
     String key = null;
     if(iMaterialeVersione.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key,3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setConfigurazione14(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (configurazione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     }
     setMaterialeInternal14(rArticolo);
     //Fix 18536 Inizio
     //this.iConfigurazione14.setObject(configurazione);
     if(configurazione != null)
       iMaterialeConfig.put(new Integer((13 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getConfigurazione14() {
     //Fix 18536 Inizio
     //return (Configurazione)iConfigurazione14.getObject();
     return (Configurazione)iMaterialeConfig.get(new Integer(13 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setConfigurazione14Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iConfigurazione14.setKey(key);
     if(iMaterialeConfig.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal14(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getConfigurazione14Key() {
     //Fix 18536 Inizio
     //return iConfigurazione14.getKey();
     if(iMaterialeConfig.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iMaterialeConfig.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdConfigurazione14(Integer idConfigurazione) {
     //Fix 18536 Inizio
     //String key = iConfigurazione14.getKey();
     //iConfigurazione14.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idConfigurazione));
     if(iMaterialeConfig.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Configurazione)iMaterialeConfig.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iMaterialeConfig.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idConfigurazione));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public Integer getIdConfigurazione14() {
     //Fix 18536 Inizio
     //String key = iConfigurazione14.getKey();
     String key = null;
     if(iMaterialeConfig.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Configurazione)iMaterialeConfig.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     //return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
     return KeyHelper.stringToIntegerObj(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
   }

   public String getIdEsternoConfig14()
   { //Fix 18536 Inizio
     //return iConfigurazione14.getIdEsternoConfig();
     if(iMaterialeConfig.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null){
       return ((Configurazione)iMaterialeConfig.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     }
     return null;
     //Fix 18536 Fine
   }

   public void setIdEsternoConfig14(String idEsternoConfig)
   { //Fix 18536 Inizio
     //iConfigurazione14.setIdEsternoConfig(idEsternoConfig);
     if(iMaterialeConfig.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null){
       ((Configurazione)iMaterialeConfig.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     }
     //Fix 18536 Fine
   }

   public void setLotto14(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setMaterialeInternal14(rArticolo);
     //Fix 18536 Inizio
     //this.iLotto14.setObject(lotto);
     if(lotto != null)
       iLottoMateriale.put(new Integer((13+(iCurrentNumPag-1)*20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLotto14() {
     //Fix 18536 Inizio
     //return (Lotto)iLotto14.getObject();
     return (Lotto)iLottoMateriale.get(new Integer(13 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLotto14Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLotto14.setKey(key);
     if(iLottoMateriale.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoMateriale.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal14(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLotto14Key() {
     //Fix 18536 Inizio
     //return iLotto14.getKey();
     if(iLottoMateriale.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoMateriale.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLotto14(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLotto14.getKey();
     //iLotto14.setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
     if(iLottoMateriale.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Lotto)iLottoMateriale.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public String getIdLotto14() {
     //Fix 18536 Inizio
     //String key = iLotto14.getKey();
     String key = null;
     if(iLottoMateriale.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoMateriale.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setMaterialeInternal14(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iMaterialeVersione14.getKey();
     //iMaterialeVersione14.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     String key1 = null;
     if(iMaterialeVersione.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null){
       key1 = ((ArticoloVersione)iMaterialeVersione.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1 , 2, rArticolo));
     }
     //String key2 = iMateriale14.getKey();
     //iMateriale14.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     String key2 = null;
     if(iMateriale.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null){
       key2 = ((Articolo)iMateriale.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iMateriale.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2 , 2, rArticolo));
     }
     //String key3 = iLotto14.getKey();
     //iLotto14.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     String key3 = null;
     if(iLottoMateriale.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null){
       key3 = ((Lotto)iLottoMateriale.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3 , 2, rArticolo));
     }
     //iConfigurazione14.setIdArticolo(rArticolo);
     if(iMaterialeConfig.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaPrlUmPrm14(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmPrm14 = qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaPrlUmPrm.put(new Integer((13 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaPrlUmPrmInternal(qtaPrlUmPrm, 13);
     setDirty();
   }

   public BigDecimal getQtaPrlUmPrm14() {
     //Fix 18536 Inizio
     //return iQtaPrlUmPrm14;
     return (BigDecimal)iQtaPrlUmPrm.get(new Integer(13 + (iCurrentNumPag - 1) * 20));
     //Fix 18536
   }

   public void setQtaPrlUmSec14(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmSec14 = qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaPrlUmSec.put(new Integer((13 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaPrlUmSecInternal(qtaPrlUmSec, 13);
     setDirty();
   }

   public BigDecimal getQtaPrlUmSec14() {
     //Fix 18536 Inizio
     //return iQtaPrlUmSec14;
     return (BigDecimal)iQtaPrlUmSec.get(new Integer(13 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecMat14() {
     if (getMateriale14() != null)
       return getMateriale14().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmMat14() {
     if (getMateriale14() != null)
       return getMateriale14().getIdUMPrmMag();
     return null;
   }

   public String getDescrizioneMateriale14() {
     //Fix 18536 Inizio
     //if (getMateriale14() != null) {
     //  return getMateriale14().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     return (String)iDescrizioneMateriale.get(new Integer(13 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   //Fix 18536 Inizio
   public void setDescrizioneMateriale14(String desc){
     if(desc != null)
       iDescrizioneMateriale.put(new Integer((13 + (iCurrentNumPag - 1) * 20)), desc);
   }
   //Fix 18536 Fine

   /*------ Linea attributi materiale n°15 -----*/
   public void setMagazzinoPrl15(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //Fix 18536 Inizio
     //this.iMagazzinoPrl15.setObject(magazzino);
     if(magazzino != null)
       iMagazzinoPrl.put(new Integer((14 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoPrl15() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl15.getObject();
     return (Magazzino)iMagazzinoPrl.get(new Integer(14 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoPrl15Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoPrl15.setKey(key);
     if(iMagazzinoPrl.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null){
       ((Magazzino)iMagazzinoPrl.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoPrl15Key() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl15.getObject();
     if(iMagazzinoPrl.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoPrl.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoPrl15(String idMagazzino) {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl15.getKey();
     //iMagazzinoPrl15.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idMagazzino));
     if(iMagazzinoPrl.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Magazzino)iMagazzinoPrl.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoPrl.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idMagazzino));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdMagazzinoPrl15() {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl15.getKey();
     String key = null;
     if(iMagazzinoPrl.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoPrl.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key,2);
   }

   public void setMateriale15(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setMaterialeInternal15(idArticolo);
     //Fix 18536 Inizio
     //iMateriale15.setObject(articolo);
     if(articolo != null)
       iMateriale.put(new Integer((14 + (iCurrentNumPag - 1) * 20)), articolo);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getMateriale15() {
     //Fix 18536 Inizio
     //return (Articolo) iMateriale15.getObject();
     return (Articolo) iMateriale.get(new Integer(14 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMateriale15Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMateriale15.setKey(key);
     if(iMateriale.get(new Integer((14 + (iCurrentNumPag - 1) * 20))) != null)
       ((Articolo)iMateriale.get(new Integer((14 + (iCurrentNumPag - 1) * 20)))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal15(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMateriale15Key() {
     //Fix 18536 Inizio
     //return iMateriale15.getKey();
     if(iMateriale.get(new Integer((14 + (iCurrentNumPag - 1) * 20))) != null)
       return ((Articolo)iMateriale.get(new Integer((14 + (iCurrentNumPag - 1) * 20)))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMateriale15(String rArticolo) {
     setMaterialeInternal15(rArticolo);
     setDirty();
   }

   public String getIdMateriale15() {
     //Fix 18536 Inizio
     //String key = iMateriale15.getKey();
     String key = null;
     if(iMateriale.get(new Integer((14 + (iCurrentNumPag - 1) * 20))) != null)
       key = ((Articolo)iMateriale.get(new Integer((14 + (iCurrentNumPag - 1) * 20)))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setArticoloVersione15(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setMaterialeInternal15(rArticolo);
     //Fix 18536 Inzio
     //this.iMaterialeVersione15.setObject(articoloVersione);
     if(articoloVersione != null)
       iMaterialeVersione.put(new Integer((14 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getMaterialeVersione15() {
     //Fix 18536 Inizio
     //return (ArticoloVersione)iMaterialeVersione15.getObject();
     return (ArticoloVersione)iMaterialeVersione.get(new Integer(14 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMaterialeVersione15Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMaterialeVersione15.setKey(key);
     if(iMaterialeVersione.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal15(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMaterialeVersione15Key() {
     //Fix 18536 Inizio
     //return iMaterialeVersione15.getKey();
     if(iMaterialeVersione.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iMaterialeVersione.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdVersione15(Integer versione) {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione15.getKey();
     //iMaterialeVersione15.setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     if(iMaterialeVersione.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public Integer getIdVersione15() {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione15.getKey();
     String key = null;
     if(iMaterialeVersione.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key,3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setConfigurazione15(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (configurazione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     }
     setMaterialeInternal15(rArticolo);
     //Fix 18536 Inizio
     //this.iConfigurazione15.setObject(configurazione);
     if(configurazione != null)
       iMaterialeConfig.put(new Integer((14 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getConfigurazione15() {
     //Fix 18536 Inizio
     //return (Configurazione)iConfigurazione15.getObject();
     return (Configurazione)iMaterialeConfig.get(new Integer(14 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setConfigurazione15Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iConfigurazione15.setKey(key);
     if(iMaterialeConfig.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal15(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getConfigurazione15Key() {
     //Fix 18536 Inizio
     //return iConfigurazione15.getKey();
     if(iMaterialeConfig.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iMaterialeConfig.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdConfigurazione15(Integer idConfigurazione) {
     //Fix 18536 Inizio
     //String key = iConfigurazione15.getKey();
     //iConfigurazione15.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idConfigurazione));
     if(iMaterialeConfig.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Configurazione)iMaterialeConfig.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iMaterialeConfig.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idConfigurazione));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public Integer getIdConfigurazione15() {
     //Fix 18536 Inizio
     //String key = iConfigurazione15.getKey();
     String key = null;
     if(iMaterialeConfig.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Configurazione)iMaterialeConfig.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     //return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
     return KeyHelper.stringToIntegerObj(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
   }

   public String getIdEsternoConfig15()
   { //Fix 18536 Inizio
     //return iConfigurazione15.getIdEsternoConfig();
     if(iMaterialeConfig.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null){
       return ((Configurazione)iMaterialeConfig.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     }
     return null;
     //Fix 18536 Fine
   }

   public void setIdEsternoConfig15(String idEsternoConfig)
   { //Fix 18536 Inizio
     //iConfigurazione15.setIdEsternoConfig(idEsternoConfig);
     if(iMaterialeConfig.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null){
       ((Configurazione)iMaterialeConfig.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     }
     //Fix 18536 Fine
   }

   public void setLotto15(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setMaterialeInternal15(rArticolo);
     //Fix 18536 Inizio
     //this.iLotto15.setObject(lotto);
     if(lotto != null)
       iLottoMateriale.put(new Integer((14+(iCurrentNumPag-1)*20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLotto15() {
     //Fix 18536 Inizio
     //return (Lotto)iLotto15.getObject();
     return (Lotto)iLottoMateriale.get(new Integer(14 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLotto15Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLotto15.setKey(key);
     if(iLottoMateriale.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoMateriale.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal15(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLotto15Key() {
     //Fix 18536 Inizio
     //return iLotto15.getKey();
     if(iLottoMateriale.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoMateriale.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLotto15(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLotto15.getKey();
     //iLotto15.setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
     if(iLottoMateriale.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Lotto)iLottoMateriale.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public String getIdLotto15() {
     //Fix 18536 Inizio
     //String key = iLotto15.getKey();
     String key = null;
     if(iLottoMateriale.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoMateriale.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setMaterialeInternal15(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iMaterialeVersione15.getKey();
     //iMaterialeVersione15.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     String key1 = null;
     if(iMaterialeVersione.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null){
       key1 = ((ArticoloVersione)iMaterialeVersione.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1 , 2, rArticolo));
     }
     //String key2 = iMateriale15.getKey();
     //iMateriale15.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     String key2 = null;
     if(iMateriale.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null){
       key2 = ((Articolo)iMateriale.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iMateriale.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2 , 2, rArticolo));
     }
     //String key3 = iLotto15.getKey();
     //iLotto15.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     String key3 = null;
     if(iLottoMateriale.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null){
       key3 = ((Lotto)iLottoMateriale.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3 , 2, rArticolo));
     }
     //iConfigurazione15.setIdArticolo(rArticolo);
     if(iMaterialeConfig.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaPrlUmPrm15(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmPrm15 = qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaPrlUmPrm.put(new Integer((14 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaPrlUmPrmInternal(qtaPrlUmPrm, 14);
     setDirty();
   }

   public BigDecimal getQtaPrlUmPrm15() {
     //Fix 18536 Inizio
     //return iQtaPrlUmPrm15;
     return (BigDecimal)iQtaPrlUmPrm.get(new Integer(14 + (iCurrentNumPag - 1) * 20));
     //Fix 18536
   }

   public void setQtaPrlUmSec15(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmSec15 = qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaPrlUmSec.put(new Integer((14 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaPrlUmSecInternal(qtaPrlUmSec, 14);
     setDirty();
   }

   public BigDecimal getQtaPrlUmSec15() {
     //Fix 18536 Inizio
     //return iQtaPrlUmSec15;
     return (BigDecimal)iQtaPrlUmSec.get(new Integer(14 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecMat15() {
     if (getMateriale15() != null)
       return getMateriale15().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmMat15() {
     if (getMateriale15() != null)
       return getMateriale15().getIdUMPrmMag();
     return null;
   }

   public String getDescrizioneMateriale15() {
     //Fix 18536 Inizio
     //if (getMateriale15() != null) {
     //  return getMateriale15().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     return (String)iDescrizioneMateriale.get(new Integer(14 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   //Fix 18536 Inizio
   public void setDescrizioneMateriale15(String desc){
     if(desc != null)
       iDescrizioneMateriale.put(new Integer((14 + (iCurrentNumPag - 1) * 20)), desc);
   }
   //Fix 18536 Fine

   /*------ Linea attributi materiale n°16 -----*/
   public void setMagazzinoPrl16(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //Fix 18536 Inizio
     //this.iMagazzinoPrl16.setObject(magazzino);
     if(magazzino != null)
       iMagazzinoPrl.put(new Integer((15 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoPrl16() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl16.getObject();
     return (Magazzino)iMagazzinoPrl.get(new Integer(15 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoPrl16Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoPrl16.setKey(key);
     if(iMagazzinoPrl.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null){
       ((Magazzino)iMagazzinoPrl.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoPrl16Key() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl16.getObject();
     if(iMagazzinoPrl.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoPrl.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoPrl16(String idMagazzino) {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl16.getKey();
     //iMagazzinoPrl16.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idMagazzino));
     if(iMagazzinoPrl.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Magazzino)iMagazzinoPrl.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoPrl.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idMagazzino));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdMagazzinoPrl16() {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl16.getKey();
     String key = null;
     if(iMagazzinoPrl.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoPrl.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key,2);
   }

   public void setMateriale16(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setMaterialeInternal16(idArticolo);
     //Fix 18536 Inizio
     //iMateriale16.setObject(articolo);
     if(articolo != null)
       iMateriale.put(new Integer((15 + (iCurrentNumPag - 1) * 20)), articolo);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getMateriale16() {
     //Fix 18536 Inizio
     //return (Articolo) iMateriale16.getObject();
     return (Articolo) iMateriale.get(new Integer(15 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMateriale16Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMateriale16.setKey(key);
     if(iMateriale.get(new Integer((15 + (iCurrentNumPag - 1) * 20))) != null)
       ((Articolo)iMateriale.get(new Integer((15 + (iCurrentNumPag - 1) * 20)))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal16(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMateriale16Key() {
     //Fix 18536 Inizio
     //return iMateriale16.getKey();
     if(iMateriale.get(new Integer((15 + (iCurrentNumPag - 1) * 20))) != null)
       return ((Articolo)iMateriale.get(new Integer((15 + (iCurrentNumPag - 1) * 20)))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMateriale16(String rArticolo) {
     setMaterialeInternal16(rArticolo);
     setDirty();
   }

   public String getIdMateriale16() {
     //Fix 18536 Inizio
     //String key = iMateriale16.getKey();
     String key = null;
     if(iMateriale.get(new Integer((15 + (iCurrentNumPag - 1) * 20))) != null)
       key = ((Articolo)iMateriale.get(new Integer((15 + (iCurrentNumPag - 1) * 20)))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setArticoloVersione16(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setMaterialeInternal16(rArticolo);
     //Fix 18536 Inzio
     //this.iMaterialeVersione16.setObject(articoloVersione);
     if(articoloVersione != null)
       iMaterialeVersione.put(new Integer((15 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getMaterialeVersione16() {
     //Fix 18536 Inizio
     //return (ArticoloVersione)iMaterialeVersione16.getObject();
     return (ArticoloVersione)iMaterialeVersione.get(new Integer(15 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMaterialeVersione16Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMaterialeVersione16.setKey(key);
     if(iMaterialeVersione.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal16(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMaterialeVersione16Key() {
     //Fix 18536 Inizio
     //return iMaterialeVersione16.getKey();
     if(iMaterialeVersione.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iMaterialeVersione.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdVersione16(Integer versione) {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione16.getKey();
     //iMaterialeVersione16.setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     if(iMaterialeVersione.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public Integer getIdVersione16() {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione16.getKey();
     String key = null;
     if(iMaterialeVersione.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key,3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setConfigurazione16(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (configurazione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     }
     setMaterialeInternal16(rArticolo);
     //Fix 18536 Inizio
     //this.iConfigurazione16.setObject(configurazione);
     if(configurazione != null)
       iMaterialeConfig.put(new Integer((15 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getConfigurazione16() {
     //Fix 18536 Inizio
     //return (Configurazione)iConfigurazione16.getObject();
     return (Configurazione)iMaterialeConfig.get(new Integer(15 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setConfigurazione16Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iConfigurazione16.setKey(key);
     if(iMaterialeConfig.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal16(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getConfigurazione16Key() {
     //Fix 18536 Inizio
     //return iConfigurazione16.getKey();
     if(iMaterialeConfig.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iMaterialeConfig.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdConfigurazione16(Integer idConfigurazione) {
     //Fix 18536 Inizio
     //String key = iConfigurazione16.getKey();
     //iConfigurazione16.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idConfigurazione));
     if(iMaterialeConfig.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Configurazione)iMaterialeConfig.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iMaterialeConfig.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idConfigurazione));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public Integer getIdConfigurazione16() {
     //Fix 18536 Inizio
     //String key = iConfigurazione16.getKey();
     String key = null;
     if(iMaterialeConfig.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Configurazione)iMaterialeConfig.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     //return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
     return KeyHelper.stringToIntegerObj(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
   }

   public String getIdEsternoConfig16()
   { //Fix 18536 Inizio
     //return iConfigurazione16.getIdEsternoConfig();
     if(iMaterialeConfig.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null){
       return ((Configurazione)iMaterialeConfig.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     }
     return null;
     //Fix 18536 Fine
   }

   public void setIdEsternoConfig16(String idEsternoConfig)
   { //Fix 18536 Inizio
     //iConfigurazione16.setIdEsternoConfig(idEsternoConfig);
     if(iMaterialeConfig.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null){
       ((Configurazione)iMaterialeConfig.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     }
     //Fix 18536 Fine
   }

   public void setLotto16(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setMaterialeInternal16(rArticolo);
     //Fix 18536 Inizio
     //this.iLotto16.setObject(lotto);
     if(lotto != null)
       iLottoMateriale.put(new Integer((15+(iCurrentNumPag-1)*20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLotto16() {
     //Fix 18536 Inizio
     //return (Lotto)iLotto16.getObject();
     return (Lotto)iLottoMateriale.get(new Integer(15 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLotto16Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLotto16.setKey(key);
     if(iLottoMateriale.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoMateriale.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal16(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLotto16Key() {
     //Fix 18536 Inizio
     //return iLotto16.getKey();
     if(iLottoMateriale.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoMateriale.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLotto16(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLotto16.getKey();
     //iLotto16.setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
     if(iLottoMateriale.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Lotto)iLottoMateriale.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public String getIdLotto16() {
     //Fix 18536 Inizio
     //String key = iLotto16.getKey();
     String key = null;
     if(iLottoMateriale.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoMateriale.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setMaterialeInternal16(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iMaterialeVersione16.getKey();
     //iMaterialeVersione16.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     String key1 = null;
     if(iMaterialeVersione.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null){
       key1 = ((ArticoloVersione)iMaterialeVersione.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1 , 2, rArticolo));
     }
     //String key2 = iMateriale16.getKey();
     //iMateriale16.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     String key2 = null;
     if(iMateriale.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null){
       key2 = ((Articolo)iMateriale.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iMateriale.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2 , 2, rArticolo));
     }
     //String key3 = iLotto16.getKey();
     //iLotto16.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     String key3 = null;
     if(iLottoMateriale.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null){
       key3 = ((Lotto)iLottoMateriale.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3 , 2, rArticolo));
     }
     //iConfigurazione16.setIdArticolo(rArticolo);
     if(iMaterialeConfig.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaPrlUmPrm16(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmPrm16 = qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaPrlUmPrm.put(new Integer((15 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaPrlUmPrmInternal(qtaPrlUmPrm, 15);
     setDirty();
   }

   public BigDecimal getQtaPrlUmPrm16() {
     //Fix 18536 Inizio
     //return iQtaPrlUmPrm16;
     return (BigDecimal)iQtaPrlUmPrm.get(new Integer(15 + (iCurrentNumPag - 1) * 20));
     //Fix 18536
   }

   public void setQtaPrlUmSec16(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmSec16 = qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaPrlUmSec.put(new Integer((15 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaPrlUmSecInternal(qtaPrlUmSec, 15);
     setDirty();
   }

   public BigDecimal getQtaPrlUmSec16() {
     //Fix 18536 Inizio
     //return iQtaPrlUmSec16;
     return (BigDecimal)iQtaPrlUmSec.get(new Integer(15 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecMat16() {
     if (getMateriale16() != null)
       return getMateriale16().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmMat16() {
     if (getMateriale16() != null)
       return getMateriale16().getIdUMPrmMag();
     return null;
   }

   public String getDescrizioneMateriale16() {
     //Fix 18536 Inizio
     //if (getMateriale16() != null) {
     //  return getMateriale16().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     return (String)iDescrizioneMateriale.get(new Integer(15 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   //Fix 18536 Inizio
   public void setDescrizioneMateriale16(String desc){
     if(desc != null)
       iDescrizioneMateriale.put(new Integer((15 + (iCurrentNumPag - 1) * 20)), desc);
   }
   //Fix 18536 Fine

  /*------ Linea attributi materiale n°17 -----*/
  public void setMagazzinoPrl17(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //Fix 18536 Inizio
     //this.iMagazzinoPrl17.setObject(magazzino);
     if(magazzino != null)
       iMagazzinoPrl.put(new Integer((16 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoPrl17() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl17.getObject();
     return (Magazzino)iMagazzinoPrl.get(new Integer(16 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoPrl17Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoPrl17.setKey(key);
     if(iMagazzinoPrl.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null){
       ((Magazzino)iMagazzinoPrl.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoPrl17Key() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl17.getObject();
     if(iMagazzinoPrl.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoPrl.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoPrl17(String idMagazzino) {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl17.getKey();
     //iMagazzinoPrl17.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idMagazzino));
     if(iMagazzinoPrl.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Magazzino)iMagazzinoPrl.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoPrl.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idMagazzino));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdMagazzinoPrl17() {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl17.getKey();
     String key = null;
     if(iMagazzinoPrl.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoPrl.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key,2);
   }

   public void setMateriale17(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setMaterialeInternal17(idArticolo);
     //Fix 18536 Inizio
     //iMateriale17.setObject(articolo);
     if(articolo != null)
       iMateriale.put(new Integer((16 + (iCurrentNumPag - 1) * 20)), articolo);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getMateriale17() {
     //Fix 18536 Inizio
     //return (Articolo) iMateriale17.getObject();
     return (Articolo) iMateriale.get(new Integer(16 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMateriale17Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMateriale17.setKey(key);
     if(iMateriale.get(new Integer((16 + (iCurrentNumPag - 1) * 20))) != null)
       ((Articolo)iMateriale.get(new Integer((16 + (iCurrentNumPag - 1) * 20)))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal17(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMateriale17Key() {
     //Fix 18536 Inizio
     //return iMateriale17.getKey();
     if(iMateriale.get(new Integer((16 + (iCurrentNumPag - 1) * 20))) != null)
       return ((Articolo)iMateriale.get(new Integer((16 + (iCurrentNumPag - 1) * 20)))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMateriale17(String rArticolo) {
     setMaterialeInternal17(rArticolo);
     setDirty();
   }

   public String getIdMateriale17() {
     //Fix 18536 Inizio
     //String key = iMateriale17.getKey();
     String key = null;
     if(iMateriale.get(new Integer((16 + (iCurrentNumPag - 1) * 20))) != null)
       key = ((Articolo)iMateriale.get(new Integer((16 + (iCurrentNumPag - 1) * 20)))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setArticoloVersione17(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setMaterialeInternal17(rArticolo);
     //Fix 18536 Inzio
     //this.iMaterialeVersione17.setObject(articoloVersione);
     if(articoloVersione != null)
       iMaterialeVersione.put(new Integer((16 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getMaterialeVersione17() {
     //Fix 18536 Inizio
     //return (ArticoloVersione)iMaterialeVersione17.getObject();
     return (ArticoloVersione)iMaterialeVersione.get(new Integer(16 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMaterialeVersione17Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMaterialeVersione17.setKey(key);
     if(iMaterialeVersione.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal17(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMaterialeVersione17Key() {
     //Fix 18536 Inizio
     //return iMaterialeVersione17.getKey();
     if(iMaterialeVersione.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iMaterialeVersione.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdVersione17(Integer versione) {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione17.getKey();
     //iMaterialeVersione17.setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     if(iMaterialeVersione.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public Integer getIdVersione17() {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione17.getKey();
     String key = null;
     if(iMaterialeVersione.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key,3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setConfigurazione17(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (configurazione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     }
     setMaterialeInternal17(rArticolo);
     //Fix 18536 Inizio
     //this.iConfigurazione17.setObject(configurazione);
     if(configurazione != null)
       iMaterialeConfig.put(new Integer((16 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getConfigurazione17() {
     //Fix 18536 Inizio
     //return (Configurazione)iConfigurazione17.getObject();
     return (Configurazione)iMaterialeConfig.get(new Integer(16 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setConfigurazione17Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iConfigurazione17.setKey(key);
     if(iMaterialeConfig.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal17(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getConfigurazione17Key() {
     //Fix 18536 Inizio
     //return iConfigurazione17.getKey();
     if(iMaterialeConfig.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iMaterialeConfig.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdConfigurazione17(Integer idConfigurazione) {
     //Fix 18536 Inizio
     //String key = iConfigurazione17.getKey();
     //iConfigurazione17.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idConfigurazione));
     if(iMaterialeConfig.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Configurazione)iMaterialeConfig.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iMaterialeConfig.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idConfigurazione));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public Integer getIdConfigurazione17() {
     //Fix 18536 Inizio
     //String key = iConfigurazione17.getKey();
     String key = null;
     if(iMaterialeConfig.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Configurazione)iMaterialeConfig.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     //return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
     return KeyHelper.stringToIntegerObj(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
   }

   public String getIdEsternoConfig17()
   { //Fix 18536 Inizio
     //return iConfigurazione17.getIdEsternoConfig();
     if(iMaterialeConfig.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null){
       return ((Configurazione)iMaterialeConfig.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     }
     return null;
     //Fix 18536 Fine
   }

   public void setIdEsternoConfig17(String idEsternoConfig)
   { //Fix 18536 Inizio
     //iConfigurazione17.setIdEsternoConfig(idEsternoConfig);
     if(iMaterialeConfig.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null){
       ((Configurazione)iMaterialeConfig.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     }
     //Fix 18536 Fine
   }

   public void setLotto17(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setMaterialeInternal17(rArticolo);
     //Fix 18536 Inizio
     //this.iLotto17.setObject(lotto);
     if(lotto != null)
       iLottoMateriale.put(new Integer((16+(iCurrentNumPag-1)*20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLotto17() {
     //Fix 18536 Inizio
     //return (Lotto)iLotto17.getObject();
     return (Lotto)iLottoMateriale.get(new Integer(16 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLotto17Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLotto17.setKey(key);
     if(iLottoMateriale.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoMateriale.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal17(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLotto17Key() {
     //Fix 18536 Inizio
     //return iLotto17.getKey();
     if(iLottoMateriale.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoMateriale.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLotto17(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLotto17.getKey();
     //iLotto17.setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
     if(iLottoMateriale.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Lotto)iLottoMateriale.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public String getIdLotto17() {
     //Fix 18536 Inizio
     //String key = iLotto17.getKey();
     String key = null;
     if(iLottoMateriale.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoMateriale.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setMaterialeInternal17(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iMaterialeVersione17.getKey();
     //iMaterialeVersione17.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     String key1 = null;
     if(iMaterialeVersione.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null){
       key1 = ((ArticoloVersione)iMaterialeVersione.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1 , 2, rArticolo));
     }
     //String key2 = iMateriale17.getKey();
     //iMateriale17.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     String key2 = null;
     if(iMateriale.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null){
       key2 = ((Articolo)iMateriale.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iMateriale.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2 , 2, rArticolo));
     }
     //String key3 = iLotto17.getKey();
     //iLotto17.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     String key3 = null;
     if(iLottoMateriale.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null){
       key3 = ((Lotto)iLottoMateriale.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3 , 2, rArticolo));
     }
     //iConfigurazione17.setIdArticolo(rArticolo);
     if(iMaterialeConfig.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaPrlUmPrm17(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmPrm17 = qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaPrlUmPrm.put(new Integer((16 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaPrlUmPrmInternal(qtaPrlUmPrm, 16);
     setDirty();
   }
   
   public BigDecimal getQtaPrlUmPrm17() {
     //Fix 18536 Inizio
     //return iQtaPrlUmPrm17;
     return (BigDecimal)iQtaPrlUmPrm.get(new Integer(16 + (iCurrentNumPag - 1) * 20));
     //Fix 18536
   }

   public void setQtaPrlUmSec17(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmSec17 = qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaPrlUmSec.put(new Integer((16 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaPrlUmSecInternal(qtaPrlUmSec, 16);
     setDirty();
   }

   public BigDecimal getQtaPrlUmSec17() {
     //Fix 18536 Inizio
     //return iQtaPrlUmSec17;
     return (BigDecimal)iQtaPrlUmSec.get(new Integer(16 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecMat17() {
     if (getMateriale17() != null)
       return getMateriale17().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmMat17() {
     if (getMateriale17() != null)
       return getMateriale17().getIdUMPrmMag();
     return null;
   }

   public String getDescrizioneMateriale17() {
     //Fix 18536 Inizio
     //if (getMateriale17() != null) {
     //  return getMateriale17().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     return (String)iDescrizioneMateriale.get(new Integer(16 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   //Fix 18536 Inizio
   public void setDescrizioneMateriale17(String desc){
     if(desc != null)
       iDescrizioneMateriale.put(new Integer((16 + (iCurrentNumPag - 1) * 20)), desc);
   }
   //Fix 18536 Fine

   /*------ Linea attributi materiale n°18 -----*/
   public void setMagazzinoPrl18(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //Fix 18536 Inizio
     //this.iMagazzinoPrl18.setObject(magazzino);
     if(magazzino != null)
       iMagazzinoPrl.put(new Integer((17 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoPrl18() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl18.getObject();
     return (Magazzino)iMagazzinoPrl.get(new Integer(17 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoPrl18Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoPrl18.setKey(key);
     if(iMagazzinoPrl.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null){
       ((Magazzino)iMagazzinoPrl.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoPrl18Key() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl18.getObject();
     if(iMagazzinoPrl.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoPrl.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoPrl18(String idMagazzino) {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl18.getKey();
     //iMagazzinoPrl18.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idMagazzino));
     if(iMagazzinoPrl.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Magazzino)iMagazzinoPrl.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoPrl.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idMagazzino));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdMagazzinoPrl18() {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl18.getKey();
     String key = null;
     if(iMagazzinoPrl.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoPrl.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key,2);
   }

   public void setMateriale18(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setMaterialeInternal18(idArticolo);
     //Fix 18536 Inizio
     //iMateriale18.setObject(articolo);
     if(articolo != null)
       iMateriale.put(new Integer((17 + (iCurrentNumPag - 1) * 20)), articolo);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getMateriale18() {
     //Fix 18536 Inizio
     //return (Articolo) iMateriale18.getObject();
     return (Articolo) iMateriale.get(new Integer(17 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMateriale18Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMateriale18.setKey(key);
     if(iMateriale.get(new Integer((17 + (iCurrentNumPag - 1) * 20))) != null)
       ((Articolo)iMateriale.get(new Integer((17 + (iCurrentNumPag - 1) * 20)))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal18(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMateriale18Key() {
     //Fix 18536 Inizio
     //return iMateriale18.getKey();
     if(iMateriale.get(new Integer((17 + (iCurrentNumPag - 1) * 20))) != null)
       return ((Articolo)iMateriale.get(new Integer((17 + (iCurrentNumPag - 1) * 20)))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMateriale18(String rArticolo) {
     setMaterialeInternal18(rArticolo);
     setDirty();
   }

   public String getIdMateriale18() {
     //Fix 18536 Inizio
     //String key = iMateriale18.getKey();
     String key = null;
     if(iMateriale.get(new Integer((17 + (iCurrentNumPag - 1) * 20))) != null)
       key = ((Articolo)iMateriale.get(new Integer((17 + (iCurrentNumPag - 1) * 20)))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setArticoloVersione18(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setMaterialeInternal18(rArticolo);
     //Fix 18536 Inzio
     //this.iMaterialeVersione18.setObject(articoloVersione);
     if(articoloVersione != null)
       iMaterialeVersione.put(new Integer((17 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getMaterialeVersione18() {
     //Fix 18536 Inizio
     //return (ArticoloVersione)iMaterialeVersione18.getObject();
     return (ArticoloVersione)iMaterialeVersione.get(new Integer(17 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMaterialeVersione18Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMaterialeVersione18.setKey(key);
     if(iMaterialeVersione.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal18(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMaterialeVersione18Key() {
     //Fix 18536 Inizio
     //return iMaterialeVersione18.getKey();
     if(iMaterialeVersione.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iMaterialeVersione.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdVersione18(Integer versione) {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione18.getKey();
     //iMaterialeVersione18.setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     if(iMaterialeVersione.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public Integer getIdVersione18() {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione18.getKey();
     String key = null;
     if(iMaterialeVersione.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key,3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setConfigurazione18(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (configurazione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     }
     setMaterialeInternal18(rArticolo);
     //Fix 18536 Inizio
     //this.iConfigurazione18.setObject(configurazione);
     if(configurazione != null)
       iMaterialeConfig.put(new Integer((17 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getConfigurazione18() {
     //Fix 18536 Inizio
     //return (Configurazione)iConfigurazione18.getObject();
     return (Configurazione)iMaterialeConfig.get(new Integer(17 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setConfigurazione18Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iConfigurazione18.setKey(key);
     if(iMaterialeConfig.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal18(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getConfigurazione18Key() {
     //Fix 18536 Inizio
     //return iConfigurazione18.getKey();
     if(iMaterialeConfig.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iMaterialeConfig.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdConfigurazione18(Integer idConfigurazione) {
     //Fix 18536 Inizio
     //String key = iConfigurazione18.getKey();
     //iConfigurazione18.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idConfigurazione));
     if(iMaterialeConfig.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Configurazione)iMaterialeConfig.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iMaterialeConfig.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idConfigurazione));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public Integer getIdConfigurazione18() {
     //Fix 18536 Inizio
     //String key = iConfigurazione18.getKey();
     String key = null;
     if(iMaterialeConfig.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Configurazione)iMaterialeConfig.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     //return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
     return KeyHelper.stringToIntegerObj(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
   }

   public String getIdEsternoConfig18()
   { //Fix 18536 Inizio
     //return iConfigurazione18.getIdEsternoConfig();
     if(iMaterialeConfig.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null){
       return ((Configurazione)iMaterialeConfig.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     }
     return null;
     //Fix 18536 Fine
   }

   public void setIdEsternoConfig18(String idEsternoConfig)
   { //Fix 18536 Inizio
     //iConfigurazione18.setIdEsternoConfig(idEsternoConfig);
     if(iMaterialeConfig.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null){
       ((Configurazione)iMaterialeConfig.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     }
     //Fix 18536 Fine
   }

   public void setLotto18(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setMaterialeInternal18(rArticolo);
     //Fix 18536 Inizio
     //this.iLotto18.setObject(lotto);
     if(lotto != null)
       iLottoMateriale.put(new Integer((17+(iCurrentNumPag-1)*20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLotto18() {
     //Fix 18536 Inizio
     //return (Lotto)iLotto18.getObject();
     return (Lotto)iLottoMateriale.get(new Integer(17 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLotto18Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLotto18.setKey(key);
     if(iLottoMateriale.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoMateriale.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal18(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLotto18Key() {
     //Fix 18536 Inizio
     //return iLotto18.getKey();
     if(iLottoMateriale.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoMateriale.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLotto18(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLotto18.getKey();
     //iLotto18.setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
     if(iLottoMateriale.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Lotto)iLottoMateriale.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public String getIdLotto18() {
     //Fix 18536 Inizio
     //String key = iLotto18.getKey();
     String key = null;
     if(iLottoMateriale.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoMateriale.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setMaterialeInternal18(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iMaterialeVersione18.getKey();
     //iMaterialeVersione18.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     String key1 = null;
     if(iMaterialeVersione.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null){
       key1 = ((ArticoloVersione)iMaterialeVersione.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1 , 2, rArticolo));
     }
     //String key2 = iMateriale18.getKey();
     //iMateriale18.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     String key2 = null;
     if(iMateriale.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null){
       key2 = ((Articolo)iMateriale.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iMateriale.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2 , 2, rArticolo));
     }
     //String key3 = iLotto18.getKey();
     //iLotto18.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     String key3 = null;
     if(iLottoMateriale.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null){
       key3 = ((Lotto)iLottoMateriale.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3 , 2, rArticolo));
     }
     //iConfigurazione18.setIdArticolo(rArticolo);
     if(iMaterialeConfig.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaPrlUmPrm18(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmPrm18 = qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaPrlUmPrm.put(new Integer((17 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaPrlUmPrmInternal(qtaPrlUmPrm, 17);
     setDirty();
   }

   public BigDecimal getQtaPrlUmPrm18() {
     //Fix 18536 Inizio
     //return iQtaPrlUmPrm18;
     return (BigDecimal)iQtaPrlUmPrm.get(new Integer(17 + (iCurrentNumPag - 1) * 20));
     //Fix 18536
   }

   public void setQtaPrlUmSec18(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmSec18 = qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaPrlUmSec.put(new Integer((17 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaPrlUmSecInternal(qtaPrlUmSec, 17);
     setDirty();
   }

   public BigDecimal getQtaPrlUmSec18() {
     //Fix 18536 Inizio
     //return iQtaPrlUmSec18;
     return (BigDecimal)iQtaPrlUmSec.get(new Integer(17 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecMat18() {
     if (getMateriale18() != null)
       return getMateriale18().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmMat18() {
     if (getMateriale18() != null)
       return getMateriale18().getIdUMPrmMag();
     return null;
   }

   public String getDescrizioneMateriale18() {
     //Fix 18536 Inizio
     //if (getMateriale18() != null) {
     //  return getMateriale18().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     return (String)iDescrizioneMateriale.get(new Integer(17 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   //Fix 18536 Inizio
   public void setDescrizioneMateriale18(String desc){
     if(desc != null)
       iDescrizioneMateriale.put(new Integer((17 + (iCurrentNumPag - 1) * 20)), desc);
   }
   //Fix 18536 Fine

   /*------ Linea attributi materiale n°19 -----*/
   public void setMagazzinoPrl19(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //Fix 18536 Inizio
     //this.iMagazzinoPrl19.setObject(magazzino);
     if(magazzino != null)
       iMagazzinoPrl.put(new Integer((18 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoPrl19() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl19.getObject();
     return (Magazzino)iMagazzinoPrl.get(new Integer(18 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoPrl19Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoPrl19.setKey(key);
     if(iMagazzinoPrl.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null){
       ((Magazzino)iMagazzinoPrl.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoPrl19Key() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl19.getObject();
     if(iMagazzinoPrl.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoPrl.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoPrl19(String idMagazzino) {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl19.getKey();
     //iMagazzinoPrl19.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idMagazzino));
     if(iMagazzinoPrl.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Magazzino)iMagazzinoPrl.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoPrl.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idMagazzino));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdMagazzinoPrl19() {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl19.getKey();
     String key = null;
     if(iMagazzinoPrl.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoPrl.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key,2);
   }

   public void setMateriale19(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setMaterialeInternal19(idArticolo);
     //Fix 18536 Inizio
     //iMateriale19.setObject(articolo);
     if(articolo != null)
       iMateriale.put(new Integer((18 + (iCurrentNumPag - 1) * 20)), articolo);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getMateriale19() {
     //Fix 18536 Inizio
     //return (Articolo) iMateriale19.getObject();
     return (Articolo) iMateriale.get(new Integer(18 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMateriale19Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMateriale19.setKey(key);
     if(iMateriale.get(new Integer((18 + (iCurrentNumPag - 1) * 20))) != null)
       ((Articolo)iMateriale.get(new Integer((18 + (iCurrentNumPag - 1) * 20)))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal19(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMateriale19Key() {
     //Fix 18536 Inizio
     //return iMateriale19.getKey();
     if(iMateriale.get(new Integer((18 + (iCurrentNumPag - 1) * 20))) != null)
       return ((Articolo)iMateriale.get(new Integer((18 + (iCurrentNumPag - 1) * 20)))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMateriale19(String rArticolo) {
     setMaterialeInternal19(rArticolo);
     setDirty();
   }

   public String getIdMateriale19() {
     //Fix 18536 Inizio
     //String key = iMateriale19.getKey();
     String key = null;
     if(iMateriale.get(new Integer((18 + (iCurrentNumPag - 1) * 20))) != null)
       key = ((Articolo)iMateriale.get(new Integer((18 + (iCurrentNumPag - 1) * 20)))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setArticoloVersione19(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setMaterialeInternal19(rArticolo);
     //Fix 18536 Inzio
     //this.iMaterialeVersione19.setObject(articoloVersione);
     if(articoloVersione != null)
       iMaterialeVersione.put(new Integer((18 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getMaterialeVersione19() {
     //Fix 18536 Inizio
     //return (ArticoloVersione)iMaterialeVersione19.getObject();
     return (ArticoloVersione)iMaterialeVersione.get(new Integer(18 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMaterialeVersione19Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMaterialeVersione19.setKey(key);
     if(iMaterialeVersione.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal19(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMaterialeVersione19Key() {
     //Fix 18536 Inizio
     //return iMaterialeVersione19.getKey();
     if(iMaterialeVersione.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iMaterialeVersione.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdVersione19(Integer versione) {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione19.getKey();
     //iMaterialeVersione19.setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     if(iMaterialeVersione.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public Integer getIdVersione19() {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione19.getKey();
     String key = null;
     if(iMaterialeVersione.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key,3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setConfigurazione19(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (configurazione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     }
     setMaterialeInternal19(rArticolo);
     //Fix 18536 Inizio
     //this.iConfigurazione19.setObject(configurazione);
     if(configurazione != null)
       iMaterialeConfig.put(new Integer((18 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getConfigurazione19() {
     //Fix 18536 Inizio
     //return (Configurazione)iConfigurazione19.getObject();
     return (Configurazione)iMaterialeConfig.get(new Integer(18 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setConfigurazione19Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iConfigurazione19.setKey(key);
     if(iMaterialeConfig.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal19(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getConfigurazione19Key() {
     //Fix 18536 Inizio
     //return iConfigurazione19.getKey();
     if(iMaterialeConfig.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iMaterialeConfig.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdConfigurazione19(Integer idConfigurazione) {
     //Fix 18536 Inizio
     //String key = iConfigurazione19.getKey();
     //iConfigurazione19.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idConfigurazione));
     if(iMaterialeConfig.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Configurazione)iMaterialeConfig.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iMaterialeConfig.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idConfigurazione));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public Integer getIdConfigurazione19() {
     //Fix 18536 Inizio
     //String key = iConfigurazione19.getKey();
     String key = null;
     if(iMaterialeConfig.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Configurazione)iMaterialeConfig.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     //return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
     return KeyHelper.stringToIntegerObj(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
   }

   public String getIdEsternoConfig19()
   { //Fix 18536 Inizio
     //return iConfigurazione19.getIdEsternoConfig();
     if(iMaterialeConfig.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null){
       return ((Configurazione)iMaterialeConfig.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     }
     return null;
     //Fix 18536 Fine
   }

   public void setIdEsternoConfig19(String idEsternoConfig)
   { //Fix 18536 Inizio
     //iConfigurazione19.setIdEsternoConfig(idEsternoConfig);
     if(iMaterialeConfig.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null){
       ((Configurazione)iMaterialeConfig.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     }
     //Fix 18536 Fine
   }

   public void setLotto19(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setMaterialeInternal19(rArticolo);
     //Fix 18536 Inizio
     //this.iLotto19.setObject(lotto);
     if(lotto != null)
       iLottoMateriale.put(new Integer((18+(iCurrentNumPag-1)*20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLotto19() {
     //Fix 18536 Inizio
     //return (Lotto)iLotto19.getObject();
     return (Lotto)iLottoMateriale.get(new Integer(18 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLotto19Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLotto19.setKey(key);
     if(iLottoMateriale.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoMateriale.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal19(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLotto19Key() {
     //Fix 18536 Inizio
     //return iLotto19.getKey();
     if(iLottoMateriale.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoMateriale.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLotto19(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLotto19.getKey();
     //iLotto19.setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
     if(iLottoMateriale.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Lotto)iLottoMateriale.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public String getIdLotto19() {
     //Fix 18536 Inizio
     //String key = iLotto19.getKey();
     String key = null;
     if(iLottoMateriale.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoMateriale.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setMaterialeInternal19(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iMaterialeVersione19.getKey();
     //iMaterialeVersione19.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     String key1 = null;
     if(iMaterialeVersione.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null){
       key1 = ((ArticoloVersione)iMaterialeVersione.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1 , 2, rArticolo));
     }
     //String key2 = iMateriale19.getKey();
     //iMateriale19.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     String key2 = null;
     if(iMateriale.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null){
       key2 = ((Articolo)iMateriale.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iMateriale.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2 , 2, rArticolo));
     }
     //String key3 = iLotto19.getKey();
     //iLotto19.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     String key3 = null;
     if(iLottoMateriale.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null){
       key3 = ((Lotto)iLottoMateriale.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3 , 2, rArticolo));
     }
     //iConfigurazione19.setIdArticolo(rArticolo);
     if(iMaterialeConfig.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaPrlUmPrm19(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmPrm19 = qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaPrlUmPrm.put(new Integer((18 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaPrlUmPrmInternal(qtaPrlUmPrm, 18);
     setDirty();
   }

   public BigDecimal getQtaPrlUmPrm19() {
     //Fix 18536 Inizio
     //return iQtaPrlUmPrm19;
     return (BigDecimal)iQtaPrlUmPrm.get(new Integer(18 + (iCurrentNumPag - 1) * 20));
     //Fix 18536
   }

   public void setQtaPrlUmSec19(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmSec19 = qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaPrlUmSec.put(new Integer((18 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaPrlUmSecInternal(qtaPrlUmSec, 18);
     setDirty();
   }

   public BigDecimal getQtaPrlUmSec19() {
     //Fix 18536 Inizio
     //return iQtaPrlUmSec19;
     return (BigDecimal)iQtaPrlUmSec.get(new Integer(18 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecMat19() {
     if (getMateriale19() != null)
       return getMateriale19().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmMat19() {
     if (getMateriale19() != null)
       return getMateriale19().getIdUMPrmMag();
     return null;
   }

   public String getDescrizioneMateriale19() {
     //Fix 18536 Inizio
     //if (getMateriale19() != null) {
     //  return getMateriale19().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     return (String)iDescrizioneMateriale.get(new Integer(18 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   //Fix 18536 Inizio
   public void setDescrizioneMateriale19(String desc){
     if(desc != null)
       iDescrizioneMateriale.put(new Integer((18 + (iCurrentNumPag - 1) * 20)), desc);
   }
   //Fix 18536 Fine

   /*------ Linea attributi materiale n°20 -----*/
   public void setMagazzinoPrl20(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //Fix 18536 Inizio
     //this.iMagazzinoPrl20.setObject(magazzino);
     if(magazzino != null)
       iMagazzinoPrl.put(new Integer((19 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoPrl20() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl20.getObject();
     return (Magazzino)iMagazzinoPrl.get(new Integer(19 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoPrl20Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoPrl20.setKey(key);
     if(iMagazzinoPrl.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null){
       ((Magazzino)iMagazzinoPrl.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoPrl20Key() {
     //Fix 18536 Inizio
     //return (Magazzino)iMagazzinoPrl20.getObject();
     if(iMagazzinoPrl.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoPrl.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoPrl20(String idMagazzino) {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl20.getKey();
     //iMagazzinoPrl20.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idMagazzino));
     if(iMagazzinoPrl.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Magazzino)iMagazzinoPrl.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoPrl.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idMagazzino));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdMagazzinoPrl20() {
     //Fix 18536 Inizio
     //String key = iMagazzinoPrl20.getKey();
     String key = null;
     if(iMagazzinoPrl.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoPrl.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key,2);
   }

   public void setMateriale20(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setMaterialeInternal20(idArticolo);
     //Fix 18536 Inizio
     //iMateriale20.setObject(articolo);
     if(articolo != null)
       iMateriale.put(new Integer((19 + (iCurrentNumPag - 1) * 20)), articolo);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getMateriale20() {
     //Fix 18536 Inizio
     //return (Articolo) iMateriale20.getObject();
     return (Articolo) iMateriale.get(new Integer(19 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMateriale20Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMateriale20.setKey(key);
     if(iMateriale.get(new Integer((19 + (iCurrentNumPag - 1) * 20))) != null)
       ((Articolo)iMateriale.get(new Integer((19 + (iCurrentNumPag - 1) * 20)))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal20(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMateriale20Key() {
     //Fix 18536 Inizio
     //return iMateriale20.getKey();
     if(iMateriale.get(new Integer((19 + (iCurrentNumPag - 1) * 20))) != null)
       return ((Articolo)iMateriale.get(new Integer((19 + (iCurrentNumPag - 1) * 20)))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMateriale20(String rArticolo) {
     setMaterialeInternal20(rArticolo);
     setDirty();
   }

   public String getIdMateriale20() {
     //Fix 18536 Inizio
     //String key = iMateriale20.getKey();
     String key = null;
     if(iMateriale.get(new Integer((19 + (iCurrentNumPag - 1) * 20))) != null)
       key = ((Articolo)iMateriale.get(new Integer((19 + (iCurrentNumPag - 1) * 20)))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setArticoloVersione20(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setMaterialeInternal20(rArticolo);
     //Fix 18536 Inzio
     //this.iMaterialeVersione20.setObject(articoloVersione);
     if(articoloVersione != null)
       iMaterialeVersione.put(new Integer((19 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getMaterialeVersione20() {
     //Fix 18536 Inizio
     //return (ArticoloVersione)iMaterialeVersione20.getObject();
     return (ArticoloVersione)iMaterialeVersione.get(new Integer(19 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMaterialeVersione20Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMaterialeVersione20.setKey(key);
     if(iMaterialeVersione.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal20(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMaterialeVersione20Key() {
     //Fix 18536 Inizio
     //return iMaterialeVersione20.getKey();
     if(iMaterialeVersione.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iMaterialeVersione.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdVersione20(Integer versione) {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione20.getKey();
     //iMaterialeVersione20.setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     if(iMaterialeVersione.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, versione));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public Integer getIdVersione20() {
     //Fix 18536 Inizio
     //String key = iMaterialeVersione20.getKey();
     String key = null;
     if(iMaterialeVersione.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iMaterialeVersione.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key,3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setConfigurazione20(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (configurazione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     }
     setMaterialeInternal20(rArticolo);
     //Fix 18536 Inizio
     //this.iConfigurazione20.setObject(configurazione);
     if(configurazione != null)
       iMaterialeConfig.put(new Integer((19 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getConfigurazione20() {
     //Fix 18536 Inizio
     //return (Configurazione)iConfigurazione20.getObject();
     return (Configurazione)iMaterialeConfig.get(new Integer(19 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setConfigurazione20Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iConfigurazione20.setKey(key);
     if(iMaterialeConfig.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal20(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getConfigurazione20Key() {
     //Fix 18536 Inizio
     //return iConfigurazione20.getKey();
     if(iMaterialeConfig.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iMaterialeConfig.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdConfigurazione20(Integer idConfigurazione) {
     //Fix 18536 Inizio
     //String key = iConfigurazione20.getKey();
     //iConfigurazione20.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idConfigurazione));
     if(iMaterialeConfig.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Configurazione)iMaterialeConfig.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iMaterialeConfig.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key,2,idConfigurazione));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public Integer getIdConfigurazione20() {
     //Fix 18536 Inizio
     //String key = iConfigurazione20.getKey();
     String key = null;
     if(iMaterialeConfig.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Configurazione)iMaterialeConfig.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     //return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
     return KeyHelper.stringToIntegerObj(KeyHelper.getTokenObjectKey(key, 2)); //Fix 14722
   }

   public String getIdEsternoConfig20()
   { //Fix 18536 Inizio
     //return iConfigurazione20.getIdEsternoConfig();
     if(iMaterialeConfig.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null){
       return ((Configurazione)iMaterialeConfig.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     }
     return null;
     //Fix 18536 Fine
   }

   public void setIdEsternoConfig20(String idEsternoConfig)
   { //Fix 18536 Inizio
     //iConfigurazione20.setIdEsternoConfig(idEsternoConfig);
     if(iMaterialeConfig.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null){
       ((Configurazione)iMaterialeConfig.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     }
     //Fix 18536 Fine
   }

   public void setLotto20(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setMaterialeInternal20(rArticolo);
     //Fix 18536 Inizio
     //this.iLotto20.setObject(lotto);
     if(lotto != null)
       iLottoMateriale.put(new Integer((19+(iCurrentNumPag-1)*20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLotto20() {
     //Fix 18536 Inizio
     //return (Lotto)iLotto20.getObject();
     return (Lotto)iLottoMateriale.get(new Integer(19 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLotto20Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLotto20.setKey(key);
     if(iLottoMateriale.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoMateriale.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setMaterialeInternal20(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLotto20Key() {
     //Fix 18536 Inizio
     //return iLotto20.getKey();
     if(iLottoMateriale.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoMateriale.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLotto20(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLotto20.getKey();
     //iLotto20.setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
     if(iLottoMateriale.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null){
       String key = ((Lotto)iLottoMateriale.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key , 3, IdLotto));
       setDirty();
     }
     //Fix 18536 Fine
   }

   public String getIdLotto20() {
     //Fix 18536 Inizio
     //String key = iLotto20.getKey();
     String key = null;
     if(iLottoMateriale.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoMateriale.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setMaterialeInternal20(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iMaterialeVersione20.getKey();
     //iMaterialeVersione20.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     String key1 = null;
     if(iMaterialeVersione.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null){
       key1 = ((ArticoloVersione)iMaterialeVersione.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iMaterialeVersione.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1 , 2, rArticolo));
     }
     //String key2 = iMateriale20.getKey();
     //iMateriale20.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     String key2 = null;
     if(iMateriale.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null){
       key2 = ((Articolo)iMateriale.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iMateriale.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2 , 2, rArticolo));
     }
     //String key3 = iLotto20.getKey();
     //iLotto20.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     String key3 = null;
     if(iLottoMateriale.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null){
       key3 = ((Lotto)iLottoMateriale.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoMateriale.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3 , 2, rArticolo));
     }
     //iConfigurazione20.setIdArticolo(rArticolo);
     if(iMaterialeConfig.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iMaterialeConfig.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaPrlUmPrm20(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmPrm20 = qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaPrlUmPrm.put(new Integer((19 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaPrlUmPrmInternal(qtaPrlUmPrm, 19);
     setDirty();
   }

   public BigDecimal getQtaPrlUmPrm20() {
     //Fix 18536 Inizio
     //return iQtaPrlUmPrm20;
     return (BigDecimal)iQtaPrlUmPrm.get(new Integer(19 + (iCurrentNumPag - 1) * 20));
     //Fix 18536
   }

   public void setQtaPrlUmSec20(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaPrlUmSec20 = qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaPrlUmSec.put(new Integer((19 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaPrlUmSecInternal(qtaPrlUmSec, 19);
     setDirty();
   }

   public BigDecimal getQtaPrlUmSec20() {
     //Fix 18536 Inizio
     //return iQtaPrlUmSec20;
     return (BigDecimal)iQtaPrlUmSec.get(new Integer(19 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecMat20() {
     if (getMateriale20() != null)
       return getMateriale20().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmMat20() {
     if (getMateriale20() != null)
       return getMateriale20().getIdUMPrmMag();
     return null;
   }

   public String getDescrizioneMateriale20() {
     //Fix 18536 Inizio
     //if (getMateriale20() != null) {
     //  return getMateriale20().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     return (String)iDescrizioneMateriale.get(new Integer(19 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   //Fix 18536 Inizio
   public void setDescrizioneMateriale20(String desc){
     if(desc != null)
       iDescrizioneMateriale.put(new Integer((19 + (iCurrentNumPag - 1) * 20)), desc);
   }
   //Fix 18536 Fine

   /*------ Linea attributi prodotto n°1 -----*/
   public void setMagazzinoVrs1(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //this.iMagazzinoVrs1.setObject(magazzino);//Fix 18536
     //Fix 18536 inizio
     if(magazzino != null)
       iMagazzinoVrs.put(new Integer((0 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoVrs1() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs1.getObject();
     return (Magazzino)iMagazzinoVrs.get(new Integer(0 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoVrs1Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoVrs1.setKey(key);
     if(iMagazzinoVrs.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null)
       ((Magazzino)iMagazzinoVrs.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoVrs1Key() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs1.getObject();
     if(iMagazzinoVrs.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoVrs.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoVrs1(String idMagazzino) {
     //Fix 18536 inizio
     //String key = iMagazzinoVrs1.getKey();
     //iMagazzinoVrs1.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     String key = null;
     if(iMagazzinoVrs.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoVrs.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     }
     setDirty();
     //Fix 18536 fine
   }

   public String getIdMagazzinoVrs1() {
     //Fix 18536 Inizio
     //String key = iMagazzinoVrs1.getKey();
     String key = null;
     if(iMagazzinoVrs.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 2);
   }

   public void setProdotto1(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setProdottoInternal1(idArticolo);
     //Fix 18536 Inizio
     //iProdotto1.setObject(articolo);
     if(articolo != null){
       iProdotto.put(new Integer((0 + (iCurrentNumPag - 1) * 20)), articolo);
       setDirty();
     }
     //Fix 18536 Fine
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getProdotto1() {
     //Fix 18536 Inizio
     //return (Articolo) iProdotto1.getObject();
     return (Articolo)iProdotto.get(new Integer(0 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdotto1Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdotto1.setKey(key);
     if(iProdotto.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null){
       ((Articolo)iProdotto.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal1(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdotto1Key() {
     //Fix 18536 Inizio
     //return iProdotto1.getKey();
     if(iProdotto.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Articolo)iProdotto.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdotto1(String rArticolo) {
     setProdottoInternal1(rArticolo);
     setDirty();
   }

   public String getIdProdotto1() {
     //Fix 18536 Inizio
     //String key = iProdotto1.getKey();
     String key = null;
     if(iProdotto.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Articolo)iProdotto.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setProdottoVersione1(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setProdottoInternal1(rArticolo);
     //Fix 18536 Inizio
     //this.iProdottoVersione1.setObject(articoloVersione);
     if(articoloVersione != null)
       iProdottoVersione.put(new Integer((0 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getProdottoVersione1() {
     //Fix 18536 Inizio
     //return (ArticoloVersione) iProdottoVersione1.getObject();
     return (ArticoloVersione)iProdottoVersione.get(new Integer(0 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoVersione1Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536
     //iProdottoVersione1.setKey(key);
     if(iProdottoVersione.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iProdottoVersione.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal1(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoVersione1Key() {
     //Fix 18536 Inizio
     //return iProdottoVersione1.getKey();
     if(iProdottoVersione.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iProdottoVersione.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoVersione1(Integer versione) {
     //Fix 18536 inizio
     //String key = iProdottoVersione1.getKey();
     //iProdottoVersione1.setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     String key = null;
     if(iProdottoVersione.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoVersione1() {
     //Fix 18536 Inizio
     //String key = iProdottoVersione1.getKey();
     String key = null;
     if(iProdottoVersione.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key, 3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setProdottoConfig1(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //String rArticolo = null;
     //if (configurazione != null) {
     //rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     //}
     //Fix 18536 Inizio
     //this.iProdottoConfig1.setObject(configurazione);
     if(configurazione != null)
       iProdottoConfig.put(new Integer((0 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getProdottoConfig1() {
     //Fix 18536 Inizio
     //return (Configurazione) iProdottoConfig1.getObject();
     return (Configurazione) iProdottoConfig.get(new Integer(0 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoConfig1Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdottoConfig1.setKey(key);
     if(iProdottoConfig.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal1(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoConfig1Key() {
     //Fix 18536 Inizio
     //return iProdottoConfig1.getKey();
     if(iProdottoConfig.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoConfig1(Integer idConfigurazione) {
     //Fix 18536 inizio
     //String key = iProdottoConfig1.getKey();
     //iProdottoConfig1.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     String key = null;
     if(iProdottoConfig.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iProdottoConfig.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoConfig1() {
     //Fix 18536 Inizio
     //String key = iProdottoConfig1.getKey();
     String key = null;
     if(iProdottoConfig.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getKey();
     }
     //Fix 18536 Fine
     return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2));
   }

   public String getPrdIdEsternoConfig1() {
     //Fix 18536 Inizio
     //return iProdottoConfig1.getIdEsternoConfig();
     if(iProdottoConfig.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     return null;
     //Fix 18536 Fine
   }

   public void setPrdIdEsternoConfig1(String idEsternoConfig) {
     //Fix 18536 Inizio
     //iProdottoConfig1.setIdEsternoConfig(idEsternoConfig);
     if(iProdottoConfig.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     //Fix 18536 Fine
   }

   public void setLottoProdotto1(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setProdottoInternal1(rArticolo);
     //Fix 18536 Inizio
     //this.iLottoProdotto1.setObject(lotto);
     if(lotto != null)
       iLottoProdotto.put(new Integer((0 + (iCurrentNumPag - 1) * 20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLottoProdotto1() {
     //Fix 18536 Inizio
     //return (Lotto) iLottoProdotto1.getObject();
     return (Lotto) iLottoProdotto.get(new Integer(0 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLottoProdotto1Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLottoProdotto1.setKey(key);
     if(iLottoProdotto.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoProdotto.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal1(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLottoProdotto1Key() {
     //Fix 18536 Inizio
     //return iLottoProdotto1.getKey();
     if(iLottoProdotto.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoProdotto.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLottoProdotto1(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLottoProdotto1.getKey();
     //iLottoProdotto1.setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     String key = null;
     if(iLottoProdotto.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Lotto)iLottoProdotto.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdLottoProdotto1() {
     //Fix 18536 Inizio
     //String key = iLottoProdotto1.getKey();
     String key = null;
     if(iLottoProdotto.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoProdotto.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setProdottoInternal1(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iProdottoVersione1.getKey();
     //iProdottoVersione1.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     //String key2 = iProdotto1.getKey();
     //iProdotto1.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     //String key3 = iLottoProdotto1.getKey();
     //iLottoProdotto1.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     //iProdottoConfig1.setIdArticolo(rArticolo);
     if(iProdottoVersione.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null){
       String key1 = ((ArticoloVersione)iProdottoVersione.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     }
     if(iProdotto.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null){
       String key2 = ((Articolo)iProdotto.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iProdotto.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     }
     if(iLottoProdotto.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null){
       String key3 = ((Lotto)iLottoProdotto.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     }
     if(iProdottoConfig.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(0 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaVrsUmPrm1(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmPrm1 = qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaVrsUmPrm.put(new Integer((0 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaVrsUmPrmInternal(qtaPrlUmPrm, 0);
     setDirty();
   }

   public BigDecimal getQtaVrsUmPrm1() {
     //Fix 18536 Inizio
     //return iQtaVrsUmPrm1;
     return (BigDecimal)iQtaVrsUmPrm.get(new Integer(0 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaVrsUmSec1(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmSec1 = qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaVrsUmSec.put(new Integer((0 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaVrsUmSecInternal(qtaPrlUmSec, 0);
     setDirty();
   }

   public BigDecimal getQtaVrsUmSec1() {
     //Fix 18536 Inizio
     //return iQtaVrsUmSec1;
     return (BigDecimal)iQtaVrsUmSec.get(new Integer(0 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmPrm1(BigDecimal qtaScartoUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmPrm1 = qtaScartoUmPrm;
     /*if(qtaScartoUmPrm != null)
       iQtaScartoUmPrm.put(new Integer((0 + (iCurrentNumPag - 1) * 20)), qtaScartoUmPrm);*/
     //Fix 18536 Fine
  	 setQtaScartoUmPrmInternal(qtaScartoUmPrm, 0);
     setDirty();
   }

   public BigDecimal getQtaScartoUmPrm1() {
     //Fix 18536 Inizio
     //return iQtaScartoUmPrm1;
     return (BigDecimal)iQtaScartoUmPrm.get(new Integer(0 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmSec1(BigDecimal qtaScartoUmSec) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmSec1 = qtaScartoUmSec;
     /*if(qtaScartoUmSec != null)
       iQtaScartoUmSec.put(new Integer((0 + (iCurrentNumPag - 1) * 20)), qtaScartoUmSec);*/
     //Fix 18536 Fine
  	 setQtaScartoUmSecInternal(qtaScartoUmSec, 0);
     setDirty();
   }

   public BigDecimal getQtaScartoUmSec1() {
     //Fix 18536 Inizio
     //return iQtaScartoUmSec1;
     return (BigDecimal)iQtaScartoUmSec.get(new Integer(0 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecPrd1() {
     if (getProdotto1() != null)
       return getProdotto1().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmPrd1() {
     if (getProdotto1() != null)
       return getProdotto1().getIdUMPrmMag();
     return null;
   }

   //Fix 17815 Inizio
   public void setDescrizioneProdotto1(String desc){
     //Fix 18536 Inizio
     //iDescrizioneProdotto1 = desc;
     if(desc != null)
       iDescrizioneProdotto.put(new Integer((0 + (iCurrentNumPag - 1) * 20)), desc);
     //Fix 18536 Fine
   }

   public String getDescrizioneProdotto1() {
     //if (getProdotto1() != null) {
     //return getProdotto1().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     //Fix 18536 Inizio
     //return iDescrizioneProdotto1;
     return (String)iDescrizioneProdotto.get(new Integer(0 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 17815 Fine

   //Fix 14722 inizio
   public void setIdAnnoOrdine1(String anno){
     //Fix 18536 Inizio
     //iIdAnnoOrdine1 = anno;
     if(anno != null)
       iIdAnnoOrdine.put(new Integer((0 + (iCurrentNumPag - 1) * 20)), anno);
     //Fix 18536 Fine
   }

   public String getIdAnnoOrdine1(){
     //Fix 18536 Inizio
     //return iIdAnnoOrdine1;
     return (String)iIdAnnoOrdine.get(new Integer(0 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdNumeroOrdine1(String numero){
     //Fix 18536 Inizio
     //iIdNumeroOrdine1 = numero;
     if(numero != null)
       iIdNumeroOrdine.put(new Integer((0 + (iCurrentNumPag - 1) * 20)), numero);
     //Fix 18536 Fine
   }

   public String getIdNumeroOrdine1(){
     //Fix 18536 Inizio
     //return iIdNumeroOrdine1;
     return (String)iIdNumeroOrdine.get(new Integer(0 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdRigaAttivita1(Integer idRiga){
     //Fix 18536 Inizio
     //iIdRigaAttivita1 = idRiga;
     if(idRiga != null)
       iIdRigaAttivita.put(new Integer((0 + (iCurrentNumPag - 1) * 20)), idRiga);
     //Fix 18536 Fine
   }

   public Integer getIdRigaAttivita1(){
     //Fix 18536 Inizio
     //return iIdRigaAttivita1;
     return (Integer)iIdRigaAttivita.get(new Integer(0 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 14722 fine

   /*------ Linea attributi prodotto n°2 -----*/
   public void setMagazzinoVrs2(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //this.iMagazzinoVrs2.setObject(magazzino);//Fix 18536
     //Fix 18536 inizio
     if(magazzino != null)
       iMagazzinoVrs.put(new Integer((1 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoVrs2() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs2.getObject();
     return (Magazzino)iMagazzinoVrs.get(new Integer(1 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoVrs2Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoVrs2.setKey(key);
     if(iMagazzinoVrs.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null)
       ((Magazzino)iMagazzinoVrs.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoVrs2Key() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs2.getObject();
     if(iMagazzinoVrs.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoVrs.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoVrs2(String idMagazzino) {
     //Fix 18536 inizio
     //String key = iMagazzinoVrs2.getKey();
     //iMagazzinoVrs2.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     String key = null;
     if(iMagazzinoVrs.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoVrs.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     }
     setDirty();
     //Fix 18536 fine
   }

   public String getIdMagazzinoVrs2() {
     //Fix 18536 Inizio
     //String key = iMagazzinoVrs2.getKey();
     String key = null;
     if(iMagazzinoVrs.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 2);
   }

   public void setProdotto2(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setProdottoInternal2(idArticolo);
     //Fix 18536 Inizio
     //iProdotto2.setObject(articolo);
     if(articolo != null){
       iProdotto.put(new Integer((1 + (iCurrentNumPag - 1) * 20)), articolo);
       setDirty();
     }
     //Fix 18536 Fine
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getProdotto2() {
     //Fix 18536 Inizio
     //return (Articolo) iProdotto2.getObject();
     return (Articolo)iProdotto.get(new Integer(1 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdotto2Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdotto2.setKey(key);
     if(iProdotto.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null){
       ((Articolo)iProdotto.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal2(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdotto2Key() {
     //Fix 18536 Inizio
     //return iProdotto2.getKey();
     if(iProdotto.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Articolo)iProdotto.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdotto2(String rArticolo) {
     setProdottoInternal2(rArticolo);
     setDirty();
   }

   public String getIdProdotto2() {
     //Fix 18536 Inizio
     //String key = iProdotto2.getKey();
     String key = null;
     if(iProdotto.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Articolo)iProdotto.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setProdottoVersione2(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setProdottoInternal2(rArticolo);
     //Fix 18536 Inizio
     //this.iProdottoVersione2.setObject(articoloVersione);
     if(articoloVersione != null)
       iProdottoVersione.put(new Integer((1 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getProdottoVersione2() {
     //Fix 18536 Inizio
     //return (ArticoloVersione) iProdottoVersione2.getObject();
     return (ArticoloVersione)iProdottoVersione.get(new Integer(1 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoVersione2Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536
     //iProdottoVersione2.setKey(key);
     if(iProdottoVersione.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iProdottoVersione.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal2(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoVersione2Key() {
     //Fix 18536 Inizio
     //return iProdottoVersione2.getKey();
     if(iProdottoVersione.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iProdottoVersione.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoVersione2(Integer versione) {
     //Fix 18536 inizio
     //String key = iProdottoVersione2.getKey();
     //iProdottoVersione2.setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     String key = null;
     if(iProdottoVersione.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoVersione2() {
     //Fix 18536 Inizio
     //String key = iProdottoVersione2.getKey();
     String key = null;
     if(iProdottoVersione.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key, 3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setProdottoConfig2(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //String rArticolo = null;
     //if (configurazione != null) {
     //rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     //}
     //Fix 18536 Inizio
     //this.iProdottoConfig2.setObject(configurazione);
     if(configurazione != null)
       iProdottoConfig.put(new Integer((1 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getProdottoConfig2() {
     //Fix 18536 Inizio
     //return (Configurazione) iProdottoConfig2.getObject();
     return (Configurazione) iProdottoConfig.get(new Integer(1 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoConfig2Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdottoConfig2.setKey(key);
     if(iProdottoConfig.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal2(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoConfig2Key() {
     //Fix 18536 Inizio
     //return iProdottoConfig2.getKey();
     if(iProdottoConfig.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoConfig2(Integer idConfigurazione) {
     //Fix 18536 inizio
     //String key = iProdottoConfig2.getKey();
     //iProdottoConfig2.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     String key = null;
     if(iProdottoConfig.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iProdottoConfig.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoConfig2() {
     //Fix 18536 Inizio
     //String key = iProdottoConfig2.getKey();
     String key = null;
     if(iProdottoConfig.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getKey();
     }
     //Fix 18536 Fine
     return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2));
   }

   public String getPrdIdEsternoConfig2() {
     //Fix 18536 Inizio
     //return iProdottoConfig2.getIdEsternoConfig();
     if(iProdottoConfig.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     return null;
     //Fix 18536 Fine
   }

   public void setPrdIdEsternoConfig2(String idEsternoConfig) {
     //Fix 18536 Inizio
     //iProdottoConfig2.setIdEsternoConfig(idEsternoConfig);
     if(iProdottoConfig.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     //Fix 18536 Fine
   }

   public void setLottoProdotto2(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setProdottoInternal2(rArticolo);
     //Fix 18536 Inizio
     //this.iLottoProdotto2.setObject(lotto);
     if(lotto != null)
       iLottoProdotto.put(new Integer((1 + (iCurrentNumPag - 1) * 20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLottoProdotto2() {
     //Fix 18536 Inizio
     //return (Lotto) iLottoProdotto2.getObject();
     return (Lotto) iLottoProdotto.get(new Integer(1 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLottoProdotto2Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLottoProdotto2.setKey(key);
     if(iLottoProdotto.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoProdotto.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal2(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLottoProdotto2Key() {
     //Fix 18536 Inizio
     //return iLottoProdotto2.getKey();
     if(iLottoProdotto.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoProdotto.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLottoProdotto2(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLottoProdotto2.getKey();
     //iLottoProdotto2.setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     String key = null;
     if(iLottoProdotto.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Lotto)iLottoProdotto.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdLottoProdotto2() {
     //Fix 18536 Inizio
     //String key = iLottoProdotto2.getKey();
     String key = null;
     if(iLottoProdotto.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoProdotto.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setProdottoInternal2(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iProdottoVersione2.getKey();
     //iProdottoVersione2.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     //String key2 = iProdotto2.getKey();
     //iProdotto2.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     //String key3 = iLottoProdotto2.getKey();
     //iLottoProdotto2.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     //iProdottoConfig2.setIdArticolo(rArticolo);
     if(iProdottoVersione.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null){
       String key1 = ((ArticoloVersione)iProdottoVersione.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     }
     if(iProdotto.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null){
       String key2 = ((Articolo)iProdotto.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iProdotto.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     }
     if(iLottoProdotto.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null){
       String key3 = ((Lotto)iLottoProdotto.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     }
     if(iProdottoConfig.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(1 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaVrsUmPrm2(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmPrm2= qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaVrsUmPrm.put(new Integer((1 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaVrsUmPrmInternal(qtaPrlUmPrm, 1);
     setDirty();
   }

   public BigDecimal getQtaVrsUmPrm2() {
     //Fix 18536 Inizio
     //return iQtaVrsUmPrm2;
     return (BigDecimal)iQtaVrsUmPrm.get(new Integer(1 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaVrsUmSec2(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmSec2= qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaVrsUmSec.put(new Integer((1 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaVrsUmSecInternal(qtaPrlUmSec, 1);
     setDirty();
   }

   public BigDecimal getQtaVrsUmSec2() {
     //Fix 18536 Inizio
     //return iQtaVrsUmSec2;
     return (BigDecimal)iQtaVrsUmSec.get(new Integer(1 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmPrm2(BigDecimal qtaScartoUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmPrm2= qtaScartoUmPrm;
     /*if(qtaScartoUmPrm != null)
       iQtaScartoUmPrm.put(new Integer((1 + (iCurrentNumPag - 1) * 20)), qtaScartoUmPrm);*/
     //Fix 18536 Fine
  	 setQtaScartoUmPrmInternal(qtaScartoUmPrm, 1);
     setDirty();
   }

   public BigDecimal getQtaScartoUmPrm2() {
     //Fix 18536 Inizio
     //return iQtaScartoUmPrm2;
     return (BigDecimal)iQtaScartoUmPrm.get(new Integer(1 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmSec2(BigDecimal qtaScartoUmSec) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmSec2= qtaScartoUmSec;
     /*if(qtaScartoUmSec != null)
       iQtaScartoUmSec.put(new Integer((1 + (iCurrentNumPag - 1) * 20)), qtaScartoUmSec);*/
     //Fix 18536 Fine
  	 setQtaScartoUmSecInternal(qtaScartoUmSec, 1);
     setDirty();
   }

   public BigDecimal getQtaScartoUmSec2() {
     //Fix 18536 Inizio
     //return iQtaScartoUmSec2;
     return (BigDecimal)iQtaScartoUmSec.get(new Integer(1 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecPrd2() {
     if (getProdotto2() != null)
       return getProdotto2().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmPrd2() {
     if (getProdotto2() != null)
       return getProdotto2().getIdUMPrmMag();
     return null;
   }

   //Fix 17815 Inizio
   public void setDescrizioneProdotto2(String desc){
     //Fix 18536 Inizio
     //iDescrizioneProdotto2= desc;
     if(desc != null)
       iDescrizioneProdotto.put(new Integer((1 + (iCurrentNumPag - 1) * 20)), desc);
     //Fix 18536 Fine
   }

   public String getDescrizioneProdotto2() {
     //if (getProdotto2() != null) {
     //return getProdotto2().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     //Fix 18536 Inizio
     //return iDescrizioneProdotto2;
     return (String)iDescrizioneProdotto.get(new Integer(1 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 17815 Fine

   //Fix 14722 inizio
   public void setIdAnnoOrdine2(String anno){
     //Fix 18536 Inizio
     //iIdAnnoOrdine2= anno;
     if(anno != null)
       iIdAnnoOrdine.put(new Integer((1 + (iCurrentNumPag - 1) * 20)), anno);
     //Fix 18536 Fine
   }

   public String getIdAnnoOrdine2(){
     //Fix 18536 Inizio
     //return iIdAnnoOrdine2;
     return (String)iIdAnnoOrdine.get(new Integer(1 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdNumeroOrdine2(String numero){
     //Fix 18536 Inizio
     //iIdNumeroOrdine2= numero;
     if(numero != null)
       iIdNumeroOrdine.put(new Integer((1 + (iCurrentNumPag - 1) * 20)), numero);
     //Fix 18536 Fine
   }

   public String getIdNumeroOrdine2(){
     //Fix 18536 Inizio
     //return iIdNumeroOrdine2;
     return (String)iIdNumeroOrdine.get(new Integer(1 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdRigaAttivita2(Integer idRiga){
     //Fix 18536 Inizio
     //iIdRigaAttivita2= idRiga;
     if(idRiga != null)
       iIdRigaAttivita.put(new Integer((1 + (iCurrentNumPag - 1) * 20)), idRiga);
     //Fix 18536 Fine
   }

   public Integer getIdRigaAttivita2(){
     //Fix 18536 Inizio
     //return iIdRigaAttivita2;
     return (Integer)iIdRigaAttivita.get(new Integer(1 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 14722 fine

   /*------ Linea attributi prodotto n°3 -----*/
   public void setMagazzinoVrs3(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //this.iMagazzinoVrs3.setObject(magazzino);//Fix 18536
     //Fix 18536 inizio
     if(magazzino != null)
       iMagazzinoVrs.put(new Integer((2 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoVrs3() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs3.getObject();
     return (Magazzino)iMagazzinoVrs.get(new Integer(2 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoVrs3Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoVrs3.setKey(key);
     if(iMagazzinoVrs.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null)
       ((Magazzino)iMagazzinoVrs.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoVrs3Key() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs3.getObject();
     if(iMagazzinoVrs.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoVrs.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoVrs3(String idMagazzino) {
     //Fix 18536 inizio
     //String key = iMagazzinoVrs3.getKey();
     //iMagazzinoVrs3.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     String key = null;
     if(iMagazzinoVrs.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoVrs.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     }
     setDirty();
     //Fix 18536 fine
   }

   public String getIdMagazzinoVrs3() {
     //Fix 18536 Inizio
     //String key = iMagazzinoVrs3.getKey();
     String key = null;
     if(iMagazzinoVrs.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 2);
   }

   public void setProdotto3(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setProdottoInternal3(idArticolo);
     //Fix 18536 Inizio
     //iProdotto3.setObject(articolo);
     if(articolo != null){
       iProdotto.put(new Integer((2 + (iCurrentNumPag - 1) * 20)), articolo);
       setDirty();
     }
     //Fix 18536 Fine
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getProdotto3() {
     //Fix 18536 Inizio
     //return (Articolo) iProdotto3.getObject();
     return (Articolo)iProdotto.get(new Integer(2 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdotto3Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdotto3.setKey(key);
     if(iProdotto.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null){
       ((Articolo)iProdotto.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal3(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdotto3Key() {
     //Fix 18536 Inizio
     //return iProdotto3.getKey();
     if(iProdotto.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Articolo)iProdotto.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdotto3(String rArticolo) {
     setProdottoInternal3(rArticolo);
     setDirty();
   }

   public String getIdProdotto3() {
     //Fix 18536 Inizio
     //String key = iProdotto3.getKey();
     String key = null;
     if(iProdotto.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Articolo)iProdotto.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setProdottoVersione3(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setProdottoInternal3(rArticolo);
     //Fix 18536 Inizio
     //this.iProdottoVersione3.setObject(articoloVersione);
     if(articoloVersione != null)
       iProdottoVersione.put(new Integer((2 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getProdottoVersione3() {
     //Fix 18536 Inizio
     //return (ArticoloVersione) iProdottoVersione3.getObject();
     return (ArticoloVersione)iProdottoVersione.get(new Integer(2 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoVersione3Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536
     //iProdottoVersione3.setKey(key);
     if(iProdottoVersione.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iProdottoVersione.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal3(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoVersione3Key() {
     //Fix 18536 Inizio
     //return iProdottoVersione3.getKey();
     if(iProdottoVersione.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iProdottoVersione.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoVersione3(Integer versione) {
     //Fix 18536 inizio
     //String key = iProdottoVersione3.getKey();
     //iProdottoVersione3.setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     String key = null;
     if(iProdottoVersione.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoVersione3() {
     //Fix 18536 Inizio
     //String key = iProdottoVersione3.getKey();
     String key = null;
     if(iProdottoVersione.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key, 3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setProdottoConfig3(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //String rArticolo = null;
     //if (configurazione != null) {
     //rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     //}
     //Fix 18536 Inizio
     //this.iProdottoConfig3.setObject(configurazione);
     if(configurazione != null)
       iProdottoConfig.put(new Integer((2 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getProdottoConfig3() {
     //Fix 18536 Inizio
     //return (Configurazione) iProdottoConfig3.getObject();
     return (Configurazione) iProdottoConfig.get(new Integer(2 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoConfig3Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdottoConfig3.setKey(key);
     if(iProdottoConfig.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal3(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoConfig3Key() {
     //Fix 18536 Inizio
     //return iProdottoConfig3.getKey();
     if(iProdottoConfig.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoConfig3(Integer idConfigurazione) {
     //Fix 18536 inizio
     //String key = iProdottoConfig3.getKey();
     //iProdottoConfig3.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     String key = null;
     if(iProdottoConfig.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iProdottoConfig.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoConfig3() {
     //Fix 18536 Inizio
     //String key = iProdottoConfig3.getKey();
     String key = null;
     if(iProdottoConfig.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getKey();
     }
     //Fix 18536 Fine
     return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2));
   }

   public String getPrdIdEsternoConfig3() {
     //Fix 18536 Inizio
     //return iProdottoConfig3.getIdEsternoConfig();
     if(iProdottoConfig.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     return null;
     //Fix 18536 Fine
   }

   public void setPrdIdEsternoConfig3(String idEsternoConfig) {
     //Fix 18536 Inizio
     //iProdottoConfig3.setIdEsternoConfig(idEsternoConfig);
     if(iProdottoConfig.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     //Fix 18536 Fine
   }

   public void setLottoProdotto3(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setProdottoInternal3(rArticolo);
     //Fix 18536 Inizio
     //this.iLottoProdotto3.setObject(lotto);
     if(lotto != null)
       iLottoProdotto.put(new Integer((2 + (iCurrentNumPag - 1) * 20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLottoProdotto3() {
     //Fix 18536 Inizio
     //return (Lotto) iLottoProdotto3.getObject();
     return (Lotto) iLottoProdotto.get(new Integer(2 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLottoProdotto3Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLottoProdotto3.setKey(key);
     if(iLottoProdotto.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoProdotto.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal3(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLottoProdotto3Key() {
     //Fix 18536 Inizio
     //return iLottoProdotto3.getKey();
     if(iLottoProdotto.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoProdotto.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLottoProdotto3(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLottoProdotto3.getKey();
     //iLottoProdotto3.setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     String key = null;
     if(iLottoProdotto.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Lotto)iLottoProdotto.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdLottoProdotto3() {
     //Fix 18536 Inizio
     //String key = iLottoProdotto3.getKey();
     String key = null;
     if(iLottoProdotto.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoProdotto.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setProdottoInternal3(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iProdottoVersione3.getKey();
     //iProdottoVersione3.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     //String key2 = iProdotto3.getKey();
     //iProdotto3.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     //String key3 = iLottoProdotto3.getKey();
     //iLottoProdotto3.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     //iProdottoConfig3.setIdArticolo(rArticolo);
     if(iProdottoVersione.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null){
       String key1 = ((ArticoloVersione)iProdottoVersione.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     }
     if(iProdotto.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null){
       String key2 = ((Articolo)iProdotto.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iProdotto.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     }
     if(iLottoProdotto.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null){
       String key3 = ((Lotto)iLottoProdotto.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     }
     if(iProdottoConfig.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(2 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaVrsUmPrm3(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmPrm3= qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaVrsUmPrm.put(new Integer((2 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaVrsUmPrmInternal(qtaPrlUmPrm, 2);
     setDirty();
   }

   public BigDecimal getQtaVrsUmPrm3() {
     //Fix 18536 Inizio
     //return iQtaVrsUmPrm3;
     return (BigDecimal)iQtaVrsUmPrm.get(new Integer(2 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaVrsUmSec3(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmSec3= qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaVrsUmSec.put(new Integer((2 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaVrsUmSecInternal(qtaPrlUmSec, 2);
     setDirty();
   }

   public BigDecimal getQtaVrsUmSec3() {
     //Fix 18536 Inizio
     //return iQtaVrsUmSec3;
     return (BigDecimal)iQtaVrsUmSec.get(new Integer(2 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmPrm3(BigDecimal qtaScartoUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmPrm3= qtaScartoUmPrm;
     /*if(qtaScartoUmPrm != null)
       iQtaScartoUmPrm.put(new Integer((2 + (iCurrentNumPag - 1) * 20)), qtaScartoUmPrm);*/
     //Fix 18536 Fine
  	 setQtaScartoUmPrmInternal(qtaScartoUmPrm, 2);
     setDirty();
   }

   public BigDecimal getQtaScartoUmPrm3() {
     //Fix 18536 Inizio
     //return iQtaScartoUmPrm3;
     return (BigDecimal)iQtaScartoUmPrm.get(new Integer(2 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmSec3(BigDecimal qtaScartoUmSec) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmSec3= qtaScartoUmSec;
    /*if(qtaScartoUmSec != null)
       iQtaScartoUmSec.put(new Integer((2 + (iCurrentNumPag - 1) * 20)), qtaScartoUmSec);*/
     //Fix 18536 Fine
  	 setQtaScartoUmSecInternal(qtaScartoUmSec, 2);
     setDirty();
   }

   public BigDecimal getQtaScartoUmSec3() {
     //Fix 18536 Inizio
     //return iQtaScartoUmSec3;
     return (BigDecimal)iQtaScartoUmSec.get(new Integer(2 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecPrd3() {
     if (getProdotto3() != null)
       return getProdotto3().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmPrd3() {
     if (getProdotto3() != null)
       return getProdotto3().getIdUMPrmMag();
     return null;
   }

   //Fix 17815 Inizio
   public void setDescrizioneProdotto3(String desc){
     //Fix 18536 Inizio
     //iDescrizioneProdotto3= desc;
     if(desc != null)
       iDescrizioneProdotto.put(new Integer((2 + (iCurrentNumPag - 1) * 20)), desc);
     //Fix 18536 Fine
   }

   public String getDescrizioneProdotto3() {
     //if (getProdotto3() != null) {
     //return getProdotto3().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     //Fix 18536 Inizio
     //return iDescrizioneProdotto3;
     return (String)iDescrizioneProdotto.get(new Integer(2 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 17815 Fine

   //Fix 14722 inizio
   public void setIdAnnoOrdine3(String anno){
     //Fix 18536 Inizio
     //iIdAnnoOrdine3= anno;
     if(anno != null)
       iIdAnnoOrdine.put(new Integer((2 + (iCurrentNumPag - 1) * 20)), anno);
     //Fix 18536 Fine
   }

   public String getIdAnnoOrdine3(){
     //Fix 18536 Inizio
     //return iIdAnnoOrdine3;
     return (String)iIdAnnoOrdine.get(new Integer(2 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdNumeroOrdine3(String numero){
     //Fix 18536 Inizio
     //iIdNumeroOrdine3= numero;
     if(numero != null)
       iIdNumeroOrdine.put(new Integer((2 + (iCurrentNumPag - 1) * 20)), numero);
     //Fix 18536 Fine
   }

   public String getIdNumeroOrdine3(){
     //Fix 18536 Inizio
     //return iIdNumeroOrdine3;
     return (String)iIdNumeroOrdine.get(new Integer(2 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdRigaAttivita3(Integer idRiga){
     //Fix 18536 Inizio
     //iIdRigaAttivita3= idRiga;
     if(idRiga != null)
       iIdRigaAttivita.put(new Integer((2 + (iCurrentNumPag - 1) * 20)), idRiga);
     //Fix 18536 Fine
   }

   public Integer getIdRigaAttivita3(){
     //Fix 18536 Inizio
     //return iIdRigaAttivita3;
     return (Integer)iIdRigaAttivita.get(new Integer(2 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 14722 fine

   /*------ Linea attributi prodotto n°4 -----*/
   public void setMagazzinoVrs4(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //this.iMagazzinoVrs4.setObject(magazzino);//Fix 18536
     //Fix 18536 inizio
     if(magazzino != null)
       iMagazzinoVrs.put(new Integer((3 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoVrs4() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs4.getObject();
     return (Magazzino)iMagazzinoVrs.get(new Integer(3 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoVrs4Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoVrs4.setKey(key);
     if(iMagazzinoVrs.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null)
       ((Magazzino)iMagazzinoVrs.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoVrs4Key() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs4.getObject();
     if(iMagazzinoVrs.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoVrs.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoVrs4(String idMagazzino) {
     //Fix 18536 inizio
     //String key = iMagazzinoVrs4.getKey();
     //iMagazzinoVrs4.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     String key = null;
     if(iMagazzinoVrs.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoVrs.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     }
     setDirty();
     //Fix 18536 fine
   }

   public String getIdMagazzinoVrs4() {
     //Fix 18536 Inizio
     //String key = iMagazzinoVrs4.getKey();
     String key = null;
     if(iMagazzinoVrs.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 2);
   }

   public void setProdotto4(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setProdottoInternal4(idArticolo);
     //Fix 18536 Inizio
     //iProdotto4.setObject(articolo);
     if(articolo != null){
       iProdotto.put(new Integer((3 + (iCurrentNumPag - 1) * 20)), articolo);
       setDirty();
     }
     //Fix 18536 Fine
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getProdotto4() {
     //Fix 18536 Inizio
     //return (Articolo) iProdotto4.getObject();
     return (Articolo)iProdotto.get(new Integer(3 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdotto4Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdotto4.setKey(key);
     if(iProdotto.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null){
       ((Articolo)iProdotto.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal4(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdotto4Key() {
     //Fix 18536 Inizio
     //return iProdotto4.getKey();
     if(iProdotto.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Articolo)iProdotto.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdotto4(String rArticolo) {
     setProdottoInternal4(rArticolo);
     setDirty();
   }

   public String getIdProdotto4() {
     //Fix 18536 Inizio
     //String key = iProdotto4.getKey();
     String key = null;
     if(iProdotto.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Articolo)iProdotto.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setProdottoVersione4(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setProdottoInternal4(rArticolo);
     //Fix 18536 Inizio
     //this.iProdottoVersione4.setObject(articoloVersione);
     if(articoloVersione != null)
       iProdottoVersione.put(new Integer((3 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getProdottoVersione4() {
     //Fix 18536 Inizio
     //return (ArticoloVersione) iProdottoVersione4.getObject();
     return (ArticoloVersione)iProdottoVersione.get(new Integer(3 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoVersione4Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536
     //iProdottoVersione4.setKey(key);
     if(iProdottoVersione.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iProdottoVersione.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal4(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoVersione4Key() {
     //Fix 18536 Inizio
     //return iProdottoVersione4.getKey();
     if(iProdottoVersione.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iProdottoVersione.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoVersione4(Integer versione) {
     //Fix 18536 inizio
     //String key = iProdottoVersione4.getKey();
     //iProdottoVersione4.setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     String key = null;
     if(iProdottoVersione.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoVersione4() {
     //Fix 18536 Inizio
     //String key = iProdottoVersione4.getKey();
     String key = null;
     if(iProdottoVersione.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key, 3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setProdottoConfig4(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //String rArticolo = null;
     //if (configurazione != null) {
     //rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     //}
     //Fix 18536 Inizio
     //this.iProdottoConfig4.setObject(configurazione);
     if(configurazione != null)
       iProdottoConfig.put(new Integer((3 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getProdottoConfig4() {
     //Fix 18536 Inizio
     //return (Configurazione) iProdottoConfig4.getObject();
     return (Configurazione) iProdottoConfig.get(new Integer(3 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoConfig4Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdottoConfig4.setKey(key);
     if(iProdottoConfig.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal4(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoConfig4Key() {
     //Fix 18536 Inizio
     //return iProdottoConfig4.getKey();
     if(iProdottoConfig.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoConfig4(Integer idConfigurazione) {
     //Fix 18536 inizio
     //String key = iProdottoConfig4.getKey();
     //iProdottoConfig4.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     String key = null;
     if(iProdottoConfig.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iProdottoConfig.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoConfig4() {
     //Fix 18536 Inizio
     //String key = iProdottoConfig4.getKey();
     String key = null;
     if(iProdottoConfig.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getKey();
     }
     //Fix 18536 Fine
     return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2));
   }

   public String getPrdIdEsternoConfig4() {
     //Fix 18536 Inizio
     //return iProdottoConfig4.getIdEsternoConfig();
     if(iProdottoConfig.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     return null;
     //Fix 18536 Fine
   }

   public void setPrdIdEsternoConfig4(String idEsternoConfig) {
     //Fix 18536 Inizio
     //iProdottoConfig4.setIdEsternoConfig(idEsternoConfig);
     if(iProdottoConfig.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     //Fix 18536 Fine
   }

   public void setLottoProdotto4(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setProdottoInternal4(rArticolo);
     //Fix 18536 Inizio
     //this.iLottoProdotto4.setObject(lotto);
     if(lotto != null)
       iLottoProdotto.put(new Integer((3 + (iCurrentNumPag - 1) * 20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLottoProdotto4() {
     //Fix 18536 Inizio
     //return (Lotto) iLottoProdotto4.getObject();
     return (Lotto) iLottoProdotto.get(new Integer(3 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLottoProdotto4Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLottoProdotto4.setKey(key);
     if(iLottoProdotto.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoProdotto.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal4(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLottoProdotto4Key() {
     //Fix 18536 Inizio
     //return iLottoProdotto4.getKey();
     if(iLottoProdotto.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoProdotto.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLottoProdotto4(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLottoProdotto4.getKey();
     //iLottoProdotto4.setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     String key = null;
     if(iLottoProdotto.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Lotto)iLottoProdotto.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdLottoProdotto4() {
     //Fix 18536 Inizio
     //String key = iLottoProdotto4.getKey();
     String key = null;
     if(iLottoProdotto.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoProdotto.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setProdottoInternal4(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iProdottoVersione4.getKey();
     //iProdottoVersione4.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     //String key2 = iProdotto4.getKey();
     //iProdotto4.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     //String key3 = iLottoProdotto4.getKey();
     //iLottoProdotto4.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     //iProdottoConfig4.setIdArticolo(rArticolo);
     if(iProdottoVersione.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null){
       String key1 = ((ArticoloVersione)iProdottoVersione.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     }
     if(iProdotto.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null){
       String key2 = ((Articolo)iProdotto.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iProdotto.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     }
     if(iLottoProdotto.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null){
       String key3 = ((Lotto)iLottoProdotto.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     }
     if(iProdottoConfig.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(3 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaVrsUmPrm4(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmPrm4= qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaVrsUmPrm.put(new Integer((3 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaVrsUmPrmInternal(qtaPrlUmPrm, 3);
     setDirty();
   }

   public BigDecimal getQtaVrsUmPrm4() {
     //Fix 18536 Inizio
     //return iQtaVrsUmPrm4;
     return (BigDecimal)iQtaVrsUmPrm.get(new Integer(3 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaVrsUmSec4(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmSec4= qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaVrsUmSec.put(new Integer((3 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaVrsUmSecInternal(qtaPrlUmSec, 3);
     setDirty();
   }

   public BigDecimal getQtaVrsUmSec4() {
     //Fix 18536 Inizio
     //return iQtaVrsUmSec4;
     return (BigDecimal)iQtaVrsUmSec.get(new Integer(3 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmPrm4(BigDecimal qtaScartoUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmPrm4= qtaScartoUmPrm;
     /*if(qtaScartoUmPrm != null)
       iQtaScartoUmPrm.put(new Integer((3 + (iCurrentNumPag - 1) * 20)), qtaScartoUmPrm);*/
     //Fix 18536 Fine
  	 setQtaScartoUmPrmInternal(qtaScartoUmPrm, 3);
     setDirty();
   }

   public BigDecimal getQtaScartoUmPrm4() {
     //Fix 18536 Inizio
     //return iQtaScartoUmPrm4;
     return (BigDecimal)iQtaScartoUmPrm.get(new Integer(3 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmSec4(BigDecimal qtaScartoUmSec) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmSec4= qtaScartoUmSec;
     /*if(qtaScartoUmSec != null)
       iQtaScartoUmSec.put(new Integer((3 + (iCurrentNumPag - 1) * 20)), qtaScartoUmSec);*/
     //Fix 18536 Fine
  	 setQtaScartoUmSecInternal(qtaScartoUmSec, 3);
     setDirty();
   }

   public BigDecimal getQtaScartoUmSec4() {
     //Fix 18536 Inizio
     //return iQtaScartoUmSec4;
     return (BigDecimal)iQtaScartoUmSec.get(new Integer(3 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecPrd4() {
     if (getProdotto4() != null)
       return getProdotto4().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmPrd4() {
     if (getProdotto4() != null)
       return getProdotto4().getIdUMPrmMag();
     return null;
   }

   //Fix 17815 Inizio
   public void setDescrizioneProdotto4(String desc){
     //Fix 18536 Inizio
     //iDescrizioneProdotto4= desc;
     if(desc != null)
       iDescrizioneProdotto.put(new Integer((3 + (iCurrentNumPag - 1) * 20)), desc);
     //Fix 18536 Fine
   }

   public String getDescrizioneProdotto4() {
     //if (getProdotto4() != null) {
     //return getProdotto4().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     //Fix 18536 Inizio
     //return iDescrizioneProdotto4;
     return (String)iDescrizioneProdotto.get(new Integer(3 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 17815 Fine

   //Fix 14722 inizio
   public void setIdAnnoOrdine4(String anno){
     //Fix 18536 Inizio
     //iIdAnnoOrdine4= anno;
     if(anno != null)
       iIdAnnoOrdine.put(new Integer((3 + (iCurrentNumPag - 1) * 20)), anno);
     //Fix 18536 Fine
   }

   public String getIdAnnoOrdine4(){
     //Fix 18536 Inizio
     //return iIdAnnoOrdine4;
     return (String)iIdAnnoOrdine.get(new Integer(3 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdNumeroOrdine4(String numero){
     //Fix 18536 Inizio
     //iIdNumeroOrdine4= numero;
     if(numero != null)
       iIdNumeroOrdine.put(new Integer((3 + (iCurrentNumPag - 1) * 20)), numero);
     //Fix 18536 Fine
   }

   public String getIdNumeroOrdine4(){
     //Fix 18536 Inizio
     //return iIdNumeroOrdine4;
     return (String)iIdNumeroOrdine.get(new Integer(3 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdRigaAttivita4(Integer idRiga){
     //Fix 18536 Inizio
     //iIdRigaAttivita4= idRiga;
     if(idRiga != null)
       iIdRigaAttivita.put(new Integer((3 + (iCurrentNumPag - 1) * 20)), idRiga);
     //Fix 18536 Fine
   }

   public Integer getIdRigaAttivita4(){
     //Fix 18536 Inizio
     //return iIdRigaAttivita4;
     return (Integer)iIdRigaAttivita.get(new Integer(3 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 14722 fine

   /*------ Linea attributi prodotto n°5 -----*/
   public void setMagazzinoVrs5(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //this.iMagazzinoVrs5.setObject(magazzino);//Fix 18536
     //Fix 18536 inizio
     if(magazzino != null)
       iMagazzinoVrs.put(new Integer((4 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoVrs5() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs5.getObject();
     return (Magazzino)iMagazzinoVrs.get(new Integer(4 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoVrs5Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoVrs5.setKey(key);
     if(iMagazzinoVrs.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null)
       ((Magazzino)iMagazzinoVrs.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoVrs5Key() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs5.getObject();
     if(iMagazzinoVrs.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoVrs.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoVrs5(String idMagazzino) {
     //Fix 18536 inizio
     //String key = iMagazzinoVrs5.getKey();
     //iMagazzinoVrs5.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     String key = null;
     if(iMagazzinoVrs.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoVrs.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     }
     setDirty();
     //Fix 18536 fine
   }

   public String getIdMagazzinoVrs5() {
     //Fix 18536 Inizio
     //String key = iMagazzinoVrs5.getKey();
     String key = null;
     if(iMagazzinoVrs.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 2);
   }

   public void setProdotto5(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setProdottoInternal5(idArticolo);
     //Fix 18536 Inizio
     //iProdotto5.setObject(articolo);
     if(articolo != null){
       iProdotto.put(new Integer((4 + (iCurrentNumPag - 1) * 20)), articolo);
       setDirty();
     }
     //Fix 18536 Fine
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getProdotto5() {
     //Fix 18536 Inizio
     //return (Articolo) iProdotto5.getObject();
     return (Articolo)iProdotto.get(new Integer(4 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdotto5Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdotto5.setKey(key);
     if(iProdotto.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null){
       ((Articolo)iProdotto.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal5(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdotto5Key() {
     //Fix 18536 Inizio
     //return iProdotto5.getKey();
     if(iProdotto.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Articolo)iProdotto.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdotto5(String rArticolo) {
     setProdottoInternal5(rArticolo);
     setDirty();
   }

   public String getIdProdotto5() {
     //Fix 18536 Inizio
     //String key = iProdotto5.getKey();
     String key = null;
     if(iProdotto.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Articolo)iProdotto.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setProdottoVersione5(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setProdottoInternal5(rArticolo);
     //Fix 18536 Inizio
     //this.iProdottoVersione5.setObject(articoloVersione);
     if(articoloVersione != null)
       iProdottoVersione.put(new Integer((4 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getProdottoVersione5() {
     //Fix 18536 Inizio
     //return (ArticoloVersione) iProdottoVersione5.getObject();
     return (ArticoloVersione)iProdottoVersione.get(new Integer(4 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoVersione5Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536
     //iProdottoVersione5.setKey(key);
     if(iProdottoVersione.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iProdottoVersione.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal5(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoVersione5Key() {
     //Fix 18536 Inizio
     //return iProdottoVersione5.getKey();
     if(iProdottoVersione.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iProdottoVersione.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoVersione5(Integer versione) {
     //Fix 18536 inizio
     //String key = iProdottoVersione5.getKey();
     //iProdottoVersione5.setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     String key = null;
     if(iProdottoVersione.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoVersione5() {
     //Fix 18536 Inizio
     //String key = iProdottoVersione5.getKey();
     String key = null;
     if(iProdottoVersione.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key, 3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setProdottoConfig5(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //String rArticolo = null;
     //if (configurazione != null) {
     //rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     //}
     //Fix 18536 Inizio
     //this.iProdottoConfig5.setObject(configurazione);
     if(configurazione != null)
       iProdottoConfig.put(new Integer((4 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getProdottoConfig5() {
     //Fix 18536 Inizio
     //return (Configurazione) iProdottoConfig5.getObject();
     return (Configurazione) iProdottoConfig.get(new Integer(4 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoConfig5Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdottoConfig5.setKey(key);
     if(iProdottoConfig.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal5(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoConfig5Key() {
     //Fix 18536 Inizio
     //return iProdottoConfig5.getKey();
     if(iProdottoConfig.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoConfig5(Integer idConfigurazione) {
     //Fix 18536 inizio
     //String key = iProdottoConfig5.getKey();
     //iProdottoConfig5.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     String key = null;
     if(iProdottoConfig.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iProdottoConfig.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoConfig5() {
     //Fix 18536 Inizio
     //String key = iProdottoConfig5.getKey();
     String key = null;
     if(iProdottoConfig.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getKey();
     }
     //Fix 18536 Fine
     return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2));
   }

   public String getPrdIdEsternoConfig5() {
     //Fix 18536 Inizio
     //return iProdottoConfig5.getIdEsternoConfig();
     if(iProdottoConfig.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     return null;
     //Fix 18536 Fine
   }

   public void setPrdIdEsternoConfig5(String idEsternoConfig) {
     //Fix 18536 Inizio
     //iProdottoConfig5.setIdEsternoConfig(idEsternoConfig);
     if(iProdottoConfig.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     //Fix 18536 Fine
   }

   public void setLottoProdotto5(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setProdottoInternal5(rArticolo);
     //Fix 18536 Inizio
     //this.iLottoProdotto5.setObject(lotto);
     if(lotto != null)
       iLottoProdotto.put(new Integer((4 + (iCurrentNumPag - 1) * 20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLottoProdotto5() {
     //Fix 18536 Inizio
     //return (Lotto) iLottoProdotto5.getObject();
     return (Lotto) iLottoProdotto.get(new Integer(4 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLottoProdotto5Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLottoProdotto5.setKey(key);
     if(iLottoProdotto.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoProdotto.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal5(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLottoProdotto5Key() {
     //Fix 18536 Inizio
     //return iLottoProdotto5.getKey();
     if(iLottoProdotto.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoProdotto.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLottoProdotto5(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLottoProdotto5.getKey();
     //iLottoProdotto5.setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     String key = null;
     if(iLottoProdotto.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Lotto)iLottoProdotto.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdLottoProdotto5() {
     //Fix 18536 Inizio
     //String key = iLottoProdotto5.getKey();
     String key = null;
     if(iLottoProdotto.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoProdotto.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setProdottoInternal5(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iProdottoVersione5.getKey();
     //iProdottoVersione5.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     //String key2 = iProdotto5.getKey();
     //iProdotto5.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     //String key3 = iLottoProdotto5.getKey();
     //iLottoProdotto5.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     //iProdottoConfig5.setIdArticolo(rArticolo);
     if(iProdottoVersione.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null){
       String key1 = ((ArticoloVersione)iProdottoVersione.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     }
     if(iProdotto.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null){
       String key2 = ((Articolo)iProdotto.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iProdotto.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     }
     if(iLottoProdotto.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null){
       String key3 = ((Lotto)iLottoProdotto.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     }
     if(iProdottoConfig.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(4 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaVrsUmPrm5(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmPrm5= qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaVrsUmPrm.put(new Integer((4 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaVrsUmPrmInternal(qtaPrlUmPrm, 4);
     setDirty();
   }
   
   public BigDecimal getQtaVrsUmPrm5() {
     //Fix 18536 Inizio
     //return iQtaVrsUmPrm5;
     return (BigDecimal)iQtaVrsUmPrm.get(new Integer(4 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaVrsUmSec5(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmSec5= qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaVrsUmSec.put(new Integer((4 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaVrsUmSecInternal(qtaPrlUmSec, 4);
     setDirty();
   }

   public BigDecimal getQtaVrsUmSec5() {
     //Fix 18536 Inizio
     //return iQtaVrsUmSec5;
     return (BigDecimal)iQtaVrsUmSec.get(new Integer(4 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmPrm5(BigDecimal qtaScartoUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmPrm5= qtaScartoUmPrm;
     /*if(qtaScartoUmPrm != null)
       iQtaScartoUmPrm.put(new Integer((4 + (iCurrentNumPag - 1) * 20)), qtaScartoUmPrm);*/
     //Fix 18536 Fine
  	 setQtaScartoUmPrmInternal(qtaScartoUmPrm, 4);
     setDirty();
   }

   public BigDecimal getQtaScartoUmPrm5() {
     //Fix 18536 Inizio
     //return iQtaScartoUmPrm5;
     return (BigDecimal)iQtaScartoUmPrm.get(new Integer(4 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmSec5(BigDecimal qtaScartoUmSec) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmSec5= qtaScartoUmSec;
    /* if(qtaScartoUmSec != null)
       iQtaScartoUmSec.put(new Integer((4 + (iCurrentNumPag - 1) * 20)), qtaScartoUmSec);*/
     //Fix 18536 Fine
  	 setQtaScartoUmSecInternal(qtaScartoUmSec, 4);
     setDirty();
   }

   public BigDecimal getQtaScartoUmSec5() {
     //Fix 18536 Inizio
     //return iQtaScartoUmSec5;
     return (BigDecimal)iQtaScartoUmSec.get(new Integer(4 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecPrd5() {
     if (getProdotto5() != null)
       return getProdotto5().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmPrd5() {
     if (getProdotto5() != null)
       return getProdotto5().getIdUMPrmMag();
     return null;
   }

   //Fix 17815 Inizio
   public void setDescrizioneProdotto5(String desc){
     //Fix 18536 Inizio
     //iDescrizioneProdotto5= desc;
     if(desc != null)
       iDescrizioneProdotto.put(new Integer((4 + (iCurrentNumPag - 1) * 20)), desc);
     //Fix 18536 Fine
   }

   public String getDescrizioneProdotto5() {
     //if (getProdotto5() != null) {
     //return getProdotto5().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     //Fix 18536 Inizio
     //return iDescrizioneProdotto5;
     return (String)iDescrizioneProdotto.get(new Integer(4 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 17815 Fine

   //Fix 14722 inizio
   public void setIdAnnoOrdine5(String anno){
     //Fix 18536 Inizio
     //iIdAnnoOrdine5= anno;
     if(anno != null)
       iIdAnnoOrdine.put(new Integer((4 + (iCurrentNumPag - 1) * 20)), anno);
     //Fix 18536 Fine
   }

   public String getIdAnnoOrdine5(){
     //Fix 18536 Inizio
     //return iIdAnnoOrdine5;
     return (String)iIdAnnoOrdine.get(new Integer(4 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdNumeroOrdine5(String numero){
     //Fix 18536 Inizio
     //iIdNumeroOrdine5= numero;
     if(numero != null)
       iIdNumeroOrdine.put(new Integer((4 + (iCurrentNumPag - 1) * 20)), numero);
     //Fix 18536 Fine
   }

   public String getIdNumeroOrdine5(){
     //Fix 18536 Inizio
     //return iIdNumeroOrdine5;
     return (String)iIdNumeroOrdine.get(new Integer(4 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdRigaAttivita5(Integer idRiga){
     //Fix 18536 Inizio
     //iIdRigaAttivita5= idRiga;
     if(idRiga != null)
       iIdRigaAttivita.put(new Integer((4 + (iCurrentNumPag - 1) * 20)), idRiga);
     //Fix 18536 Fine
   }

   public Integer getIdRigaAttivita5(){
     //Fix 18536 Inizio
     //return iIdRigaAttivita5;
     return (Integer)iIdRigaAttivita.get(new Integer(4 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 14722 fine

   /*------ Linea attributi prodotto n°6 -----*/
   public void setMagazzinoVrs6(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //this.iMagazzinoVrs6.setObject(magazzino);//Fix 18536
     //Fix 18536 inizio
     if(magazzino != null)
       iMagazzinoVrs.put(new Integer((5 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoVrs6() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs6.getObject();
     return (Magazzino)iMagazzinoVrs.get(new Integer(5 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoVrs6Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoVrs6.setKey(key);
     if(iMagazzinoVrs.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null)
       ((Magazzino)iMagazzinoVrs.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoVrs6Key() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs6.getObject();
     if(iMagazzinoVrs.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoVrs.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoVrs6(String idMagazzino) {
     //Fix 18536 inizio
     //String key = iMagazzinoVrs6.getKey();
     //iMagazzinoVrs6.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     String key = null;
     if(iMagazzinoVrs.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoVrs.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     }
     setDirty();
     //Fix 18536 fine
   }

   public String getIdMagazzinoVrs6() {
     //Fix 18536 Inizio
     //String key = iMagazzinoVrs6.getKey();
     String key = null;
     if(iMagazzinoVrs.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 2);
   }

   public void setProdotto6(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setProdottoInternal6(idArticolo);
     //Fix 18536 Inizio
     //iProdotto6.setObject(articolo);
     if(articolo != null){
       iProdotto.put(new Integer((5 + (iCurrentNumPag - 1) * 20)), articolo);
       setDirty();
     }
     //Fix 18536 Fine
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getProdotto6() {
     //Fix 18536 Inizio
     //return (Articolo) iProdotto6.getObject();
     return (Articolo)iProdotto.get(new Integer(5 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdotto6Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdotto6.setKey(key);
     if(iProdotto.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null){
       ((Articolo)iProdotto.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal6(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdotto6Key() {
     //Fix 18536 Inizio
     //return iProdotto6.getKey();
     if(iProdotto.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Articolo)iProdotto.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdotto6(String rArticolo) {
     setProdottoInternal6(rArticolo);
     setDirty();
   }

   public String getIdProdotto6() {
     //Fix 18536 Inizio
     //String key = iProdotto6.getKey();
     String key = null;
     if(iProdotto.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Articolo)iProdotto.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setProdottoVersione6(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setProdottoInternal6(rArticolo);
     //Fix 18536 Inizio
     //this.iProdottoVersione6.setObject(articoloVersione);
     if(articoloVersione != null)
       iProdottoVersione.put(new Integer((5 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getProdottoVersione6() {
     //Fix 18536 Inizio
     //return (ArticoloVersione) iProdottoVersione6.getObject();
     return (ArticoloVersione)iProdottoVersione.get(new Integer(5 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoVersione6Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536
     //iProdottoVersione6.setKey(key);
     if(iProdottoVersione.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iProdottoVersione.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal6(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoVersione6Key() {
     //Fix 18536 Inizio
     //return iProdottoVersione6.getKey();
     if(iProdottoVersione.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iProdottoVersione.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoVersione6(Integer versione) {
     //Fix 18536 inizio
     //String key = iProdottoVersione6.getKey();
     //iProdottoVersione6.setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     String key = null;
     if(iProdottoVersione.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoVersione6() {
     //Fix 18536 Inizio
     //String key = iProdottoVersione6.getKey();
     String key = null;
     if(iProdottoVersione.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key, 3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setProdottoConfig6(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //String rArticolo = null;
     //if (configurazione != null) {
     //rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     //}
     //Fix 18536 Inizio
     //this.iProdottoConfig6.setObject(configurazione);
     if(configurazione != null)
       iProdottoConfig.put(new Integer((5 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getProdottoConfig6() {
     //Fix 18536 Inizio
     //return (Configurazione) iProdottoConfig6.getObject();
     return (Configurazione) iProdottoConfig.get(new Integer(5 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoConfig6Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdottoConfig6.setKey(key);
     if(iProdottoConfig.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal6(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoConfig6Key() {
     //Fix 18536 Inizio
     //return iProdottoConfig6.getKey();
     if(iProdottoConfig.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoConfig6(Integer idConfigurazione) {
     //Fix 18536 inizio
     //String key = iProdottoConfig6.getKey();
     //iProdottoConfig6.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     String key = null;
     if(iProdottoConfig.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iProdottoConfig.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoConfig6() {
     //Fix 18536 Inizio
     //String key = iProdottoConfig6.getKey();
     String key = null;
     if(iProdottoConfig.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getKey();
     }
     //Fix 18536 Fine
     return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2));
   }

   public String getPrdIdEsternoConfig6() {
     //Fix 18536 Inizio
     //return iProdottoConfig6.getIdEsternoConfig();
     if(iProdottoConfig.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     return null;
     //Fix 18536 Fine
   }

   public void setPrdIdEsternoConfig6(String idEsternoConfig) {
     //Fix 18536 Inizio
     //iProdottoConfig6.setIdEsternoConfig(idEsternoConfig);
     if(iProdottoConfig.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     //Fix 18536 Fine
   }

   public void setLottoProdotto6(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setProdottoInternal6(rArticolo);
     //Fix 18536 Inizio
     //this.iLottoProdotto6.setObject(lotto);
     if(lotto != null)
       iLottoProdotto.put(new Integer((5 + (iCurrentNumPag - 1) * 20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLottoProdotto6() {
     //Fix 18536 Inizio
     //return (Lotto) iLottoProdotto6.getObject();
     return (Lotto) iLottoProdotto.get(new Integer(5 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLottoProdotto6Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLottoProdotto6.setKey(key);
     if(iLottoProdotto.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoProdotto.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal6(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLottoProdotto6Key() {
     //Fix 18536 Inizio
     //return iLottoProdotto6.getKey();
     if(iLottoProdotto.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoProdotto.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLottoProdotto6(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLottoProdotto6.getKey();
     //iLottoProdotto6.setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     String key = null;
     if(iLottoProdotto.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Lotto)iLottoProdotto.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdLottoProdotto6() {
     //Fix 18536 Inizio
     //String key = iLottoProdotto6.getKey();
     String key = null;
     if(iLottoProdotto.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoProdotto.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setProdottoInternal6(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iProdottoVersione6.getKey();
     //iProdottoVersione6.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     //String key2 = iProdotto6.getKey();
     //iProdotto6.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     //String key3 = iLottoProdotto6.getKey();
     //iLottoProdotto6.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     //iProdottoConfig6.setIdArticolo(rArticolo);
     if(iProdottoVersione.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null){
       String key1 = ((ArticoloVersione)iProdottoVersione.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     }
     if(iProdotto.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null){
       String key2 = ((Articolo)iProdotto.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iProdotto.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     }
     if(iLottoProdotto.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null){
       String key3 = ((Lotto)iLottoProdotto.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     }
     if(iProdottoConfig.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(5 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaVrsUmPrm6(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmPrm6= qtaPrlUmPrm;
    /*if(qtaPrlUmPrm != null)
       iQtaVrsUmPrm.put(new Integer((5 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaVrsUmPrmInternal(qtaPrlUmPrm, 5);
     setDirty();
   }

   public BigDecimal getQtaVrsUmPrm6() {
     //Fix 18536 Inizio
     //return iQtaVrsUmPrm6;
     return (BigDecimal)iQtaVrsUmPrm.get(new Integer(5 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaVrsUmSec6(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmSec6= qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaVrsUmSec.put(new Integer((5 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaVrsUmSecInternal(qtaPrlUmSec, 5);
     setDirty();
   }

   public BigDecimal getQtaVrsUmSec6() {
     //Fix 18536 Inizio
     //return iQtaVrsUmSec6;
     return (BigDecimal)iQtaVrsUmSec.get(new Integer(5 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmPrm6(BigDecimal qtaScartoUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmPrm6= qtaScartoUmPrm;
     /*if(qtaScartoUmPrm != null)
       iQtaScartoUmPrm.put(new Integer((5 + (iCurrentNumPag - 1) * 20)), qtaScartoUmPrm);*/
     //Fix 18536 Fine
  	 setQtaScartoUmPrmInternal(qtaScartoUmPrm, 5);
     setDirty();
   }

   public BigDecimal getQtaScartoUmPrm6() {
     //Fix 18536 Inizio
     //return iQtaScartoUmPrm6;
     return (BigDecimal)iQtaScartoUmPrm.get(new Integer(5 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmSec6(BigDecimal qtaScartoUmSec) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmSec6= qtaScartoUmSec;
     /*if(qtaScartoUmSec != null)
       iQtaScartoUmSec.put(new Integer((5 + (iCurrentNumPag - 1) * 20)), qtaScartoUmSec);*/
     //Fix 18536 Fine
  	 setQtaScartoUmSecInternal(qtaScartoUmSec, 5);
     setDirty();
   }

   public BigDecimal getQtaScartoUmSec6() {
     //Fix 18536 Inizio
     //return iQtaScartoUmSec6;
     return (BigDecimal)iQtaScartoUmSec.get(new Integer(5 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecPrd6() {
     if (getProdotto6() != null)
       return getProdotto6().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmPrd6() {
     if (getProdotto6() != null)
       return getProdotto6().getIdUMPrmMag();
     return null;
   }

   //Fix 17815 Inizio
   public void setDescrizioneProdotto6(String desc){
     //Fix 18536 Inizio
     //iDescrizioneProdotto6= desc;
     if(desc != null)
       iDescrizioneProdotto.put(new Integer((5 + (iCurrentNumPag - 1) * 20)), desc);
     //Fix 18536 Fine
   }

   public String getDescrizioneProdotto6() {
     //if (getProdotto6() != null) {
     //return getProdotto6().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     //Fix 18536 Inizio
     //return iDescrizioneProdotto6;
     return (String)iDescrizioneProdotto.get(new Integer(5 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 17815 Fine

   //Fix 14722 inizio
   public void setIdAnnoOrdine6(String anno){
     //Fix 18536 Inizio
     //iIdAnnoOrdine6= anno;
     if(anno != null)
       iIdAnnoOrdine.put(new Integer((5 + (iCurrentNumPag - 1) * 20)), anno);
     //Fix 18536 Fine
   }

   public String getIdAnnoOrdine6(){
     //Fix 18536 Inizio
     //return iIdAnnoOrdine6;
     return (String)iIdAnnoOrdine.get(new Integer(5 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdNumeroOrdine6(String numero){
     //Fix 18536 Inizio
     //iIdNumeroOrdine6= numero;
     if(numero != null)
       iIdNumeroOrdine.put(new Integer((5 + (iCurrentNumPag - 1) * 20)), numero);
     //Fix 18536 Fine
   }

   public String getIdNumeroOrdine6(){
     //Fix 18536 Inizio
     //return iIdNumeroOrdine6;
     return (String)iIdNumeroOrdine.get(new Integer(5 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdRigaAttivita6(Integer idRiga){
     //Fix 18536 Inizio
     //iIdRigaAttivita6= idRiga;
     if(idRiga != null)
       iIdRigaAttivita.put(new Integer((5 + (iCurrentNumPag - 1) * 20)), idRiga);
     //Fix 18536 Fine
   }

   public Integer getIdRigaAttivita6(){
     //Fix 18536 Inizio
     //return iIdRigaAttivita6;
     return (Integer)iIdRigaAttivita.get(new Integer(5 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 14722 fine

   /*------ Linea attributi prodotto n°7 -----*/
   public void setMagazzinoVrs7(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //this.iMagazzinoVrs7.setObject(magazzino);//Fix 18536
     //Fix 18536 inizio
     if(magazzino != null)
       iMagazzinoVrs.put(new Integer((6 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoVrs7() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs7.getObject();
     return (Magazzino)iMagazzinoVrs.get(new Integer(6 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoVrs7Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoVrs7.setKey(key);
     if(iMagazzinoVrs.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null)
       ((Magazzino)iMagazzinoVrs.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoVrs7Key() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs7.getObject();
     if(iMagazzinoVrs.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoVrs.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoVrs7(String idMagazzino) {
     //Fix 18536 inizio
     //String key = iMagazzinoVrs7.getKey();
     //iMagazzinoVrs7.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     String key = null;
     if(iMagazzinoVrs.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoVrs.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     }
     setDirty();
     //Fix 18536 fine
   }

   public String getIdMagazzinoVrs7() {
     //Fix 18536 Inizio
     //String key = iMagazzinoVrs7.getKey();
     String key = null;
     if(iMagazzinoVrs.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 2);
   }

   public void setProdotto7(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setProdottoInternal7(idArticolo);
     //Fix 18536 Inizio
     //iProdotto7.setObject(articolo);
     if(articolo != null){
       iProdotto.put(new Integer((6 + (iCurrentNumPag - 1) * 20)), articolo);
       setDirty();
     }
     //Fix 18536 Fine
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getProdotto7() {
     //Fix 18536 Inizio
     //return (Articolo) iProdotto7.getObject();
     return (Articolo)iProdotto.get(new Integer(6 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdotto7Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdotto7.setKey(key);
     if(iProdotto.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null){
       ((Articolo)iProdotto.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal7(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdotto7Key() {
     //Fix 18536 Inizio
     //return iProdotto7.getKey();
     if(iProdotto.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Articolo)iProdotto.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdotto7(String rArticolo) {
     setProdottoInternal7(rArticolo);
     setDirty();
   }

   public String getIdProdotto7() {
     //Fix 18536 Inizio
     //String key = iProdotto7.getKey();
     String key = null;
     if(iProdotto.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Articolo)iProdotto.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setProdottoVersione7(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setProdottoInternal7(rArticolo);
     //Fix 18536 Inizio
     //this.iProdottoVersione7.setObject(articoloVersione);
     if(articoloVersione != null)
       iProdottoVersione.put(new Integer((6 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getProdottoVersione7() {
     //Fix 18536 Inizio
     //return (ArticoloVersione) iProdottoVersione7.getObject();
     return (ArticoloVersione)iProdottoVersione.get(new Integer(6 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoVersione7Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536
     //iProdottoVersione7.setKey(key);
     if(iProdottoVersione.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iProdottoVersione.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal7(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoVersione7Key() {
     //Fix 18536 Inizio
     //return iProdottoVersione7.getKey();
     if(iProdottoVersione.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iProdottoVersione.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoVersione7(Integer versione) {
     //Fix 18536 inizio
     //String key = iProdottoVersione7.getKey();
     //iProdottoVersione7.setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     String key = null;
     if(iProdottoVersione.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoVersione7() {
     //Fix 18536 Inizio
     //String key = iProdottoVersione7.getKey();
     String key = null;
     if(iProdottoVersione.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key, 3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setProdottoConfig7(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //String rArticolo = null;
     //if (configurazione != null) {
     //rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     //}
     //Fix 18536 Inizio
     //this.iProdottoConfig7.setObject(configurazione);
     if(configurazione != null)
       iProdottoConfig.put(new Integer((6 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getProdottoConfig7() {
     //Fix 18536 Inizio
     //return (Configurazione) iProdottoConfig7.getObject();
     return (Configurazione) iProdottoConfig.get(new Integer(6 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoConfig7Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdottoConfig7.setKey(key);
     if(iProdottoConfig.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal7(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoConfig7Key() {
     //Fix 18536 Inizio
     //return iProdottoConfig7.getKey();
     if(iProdottoConfig.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoConfig7(Integer idConfigurazione) {
     //Fix 18536 inizio
     //String key = iProdottoConfig7.getKey();
     //iProdottoConfig7.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     String key = null;
     if(iProdottoConfig.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iProdottoConfig.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoConfig7() {
     //Fix 18536 Inizio
     //String key = iProdottoConfig7.getKey();
     String key = null;
     if(iProdottoConfig.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getKey();
     }
     //Fix 18536 Fine
     return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2));
   }

   public String getPrdIdEsternoConfig7() {
     //Fix 18536 Inizio
     //return iProdottoConfig7.getIdEsternoConfig();
     if(iProdottoConfig.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     return null;
     //Fix 18536 Fine
   }

   public void setPrdIdEsternoConfig7(String idEsternoConfig) {
     //Fix 18536 Inizio
     //iProdottoConfig7.setIdEsternoConfig(idEsternoConfig);
     if(iProdottoConfig.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     //Fix 18536 Fine
   }

   public void setLottoProdotto7(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setProdottoInternal7(rArticolo);
     //Fix 18536 Inizio
     //this.iLottoProdotto7.setObject(lotto);
     if(lotto != null)
       iLottoProdotto.put(new Integer((6 + (iCurrentNumPag - 1) * 20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLottoProdotto7() {
     //Fix 18536 Inizio
     //return (Lotto) iLottoProdotto7.getObject();
     return (Lotto) iLottoProdotto.get(new Integer(6 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLottoProdotto7Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLottoProdotto7.setKey(key);
     if(iLottoProdotto.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoProdotto.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal7(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLottoProdotto7Key() {
     //Fix 18536 Inizio
     //return iLottoProdotto7.getKey();
     if(iLottoProdotto.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoProdotto.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLottoProdotto7(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLottoProdotto7.getKey();
     //iLottoProdotto7.setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     String key = null;
     if(iLottoProdotto.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Lotto)iLottoProdotto.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdLottoProdotto7() {
     //Fix 18536 Inizio
     //String key = iLottoProdotto7.getKey();
     String key = null;
     if(iLottoProdotto.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoProdotto.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setProdottoInternal7(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iProdottoVersione7.getKey();
     //iProdottoVersione7.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     //String key2 = iProdotto7.getKey();
     //iProdotto7.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     //String key3 = iLottoProdotto7.getKey();
     //iLottoProdotto7.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     //iProdottoConfig7.setIdArticolo(rArticolo);
     if(iProdottoVersione.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null){
       String key1 = ((ArticoloVersione)iProdottoVersione.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     }
     if(iProdotto.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null){
       String key2 = ((Articolo)iProdotto.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iProdotto.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     }
     if(iLottoProdotto.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null){
       String key3 = ((Lotto)iLottoProdotto.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     }
     if(iProdottoConfig.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(6 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaVrsUmPrm7(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmPrm7= qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaVrsUmPrm.put(new Integer((6 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaVrsUmPrmInternal(qtaPrlUmPrm, 6);
     setDirty();
   }

   public BigDecimal getQtaVrsUmPrm7() {
     //Fix 18536 Inizio
     //return iQtaVrsUmPrm7;
     return (BigDecimal)iQtaVrsUmPrm.get(new Integer(6 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaVrsUmSec7(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmSec7= qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaVrsUmSec.put(new Integer((6 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaVrsUmSecInternal(qtaPrlUmSec, 6);
     setDirty();
   }

   public BigDecimal getQtaVrsUmSec7() {
     //Fix 18536 Inizio
     //return iQtaVrsUmSec7;
     return (BigDecimal)iQtaVrsUmSec.get(new Integer(6 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmPrm7(BigDecimal qtaScartoUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmPrm7= qtaScartoUmPrm;
    /*if(qtaScartoUmPrm != null)
       iQtaScartoUmPrm.put(new Integer((6 + (iCurrentNumPag - 1) * 20)), qtaScartoUmPrm);*/
     //Fix 18536 Fine
  	 setQtaScartoUmPrmInternal(qtaScartoUmPrm, 6);
     setDirty();
   }

   public BigDecimal getQtaScartoUmPrm7() {
     //Fix 18536 Inizio
     //return iQtaScartoUmPrm7;
     return (BigDecimal)iQtaScartoUmPrm.get(new Integer(6 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmSec7(BigDecimal qtaScartoUmSec) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmSec7= qtaScartoUmSec;
     /*if(qtaScartoUmSec != null)
       iQtaScartoUmSec.put(new Integer((6 + (iCurrentNumPag - 1) * 20)), qtaScartoUmSec);*/
     //Fix 18536 Fine
  	 setQtaScartoUmSecInternal(qtaScartoUmSec, 6);
     setDirty();
   }

   public BigDecimal getQtaScartoUmSec7() {
     //Fix 18536 Inizio
     //return iQtaScartoUmSec7;
     return (BigDecimal)iQtaScartoUmSec.get(new Integer(6 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecPrd7() {
     if (getProdotto7() != null)
       return getProdotto7().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmPrd7() {
     if (getProdotto7() != null)
       return getProdotto7().getIdUMPrmMag();
     return null;
   }

   //Fix 17815 Inizio
   public void setDescrizioneProdotto7(String desc){
     //Fix 18536 Inizio
     //iDescrizioneProdotto7= desc;
     if(desc != null)
       iDescrizioneProdotto.put(new Integer((6 + (iCurrentNumPag - 1) * 20)), desc);
     //Fix 18536 Fine
   }

   public String getDescrizioneProdotto7() {
     //if (getProdotto7() != null) {
     //return getProdotto7().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     //Fix 18536 Inizio
     //return iDescrizioneProdotto7;
     return (String)iDescrizioneProdotto.get(new Integer(6 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 17815 Fine

   //Fix 14722 inizio
   public void setIdAnnoOrdine7(String anno){
     //Fix 18536 Inizio
     //iIdAnnoOrdine7= anno;
     if(anno != null)
       iIdAnnoOrdine.put(new Integer((6 + (iCurrentNumPag - 1) * 20)), anno);
     //Fix 18536 Fine
   }

   public String getIdAnnoOrdine7(){
     //Fix 18536 Inizio
     //return iIdAnnoOrdine7;
     return (String)iIdAnnoOrdine.get(new Integer(6 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdNumeroOrdine7(String numero){
     //Fix 18536 Inizio
     //iIdNumeroOrdine7= numero;
     if(numero != null)
       iIdNumeroOrdine.put(new Integer((6 + (iCurrentNumPag - 1) * 20)), numero);
     //Fix 18536 Fine
   }

   public String getIdNumeroOrdine7(){
     //Fix 18536 Inizio
     //return iIdNumeroOrdine7;
     return (String)iIdNumeroOrdine.get(new Integer(6 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdRigaAttivita7(Integer idRiga){
     //Fix 18536 Inizio
     //iIdRigaAttivita7= idRiga;
     if(idRiga != null)
       iIdRigaAttivita.put(new Integer((6 + (iCurrentNumPag - 1) * 20)), idRiga);
     //Fix 18536 Fine
   }

   public Integer getIdRigaAttivita7(){
     //Fix 18536 Inizio
     //return iIdRigaAttivita7;
     return (Integer)iIdRigaAttivita.get(new Integer(6 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 14722 fine

   /*------ Linea attributi prodotto n°8 -----*/
   public void setMagazzinoVrs8(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //this.iMagazzinoVrs8.setObject(magazzino);//Fix 18536
     //Fix 18536 inizio
     if(magazzino != null)
       iMagazzinoVrs.put(new Integer((7 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoVrs8() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs8.getObject();
     return (Magazzino)iMagazzinoVrs.get(new Integer(7 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoVrs8Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoVrs8.setKey(key);
     if(iMagazzinoVrs.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null)
       ((Magazzino)iMagazzinoVrs.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoVrs8Key() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs8.getObject();
     if(iMagazzinoVrs.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoVrs.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoVrs8(String idMagazzino) {
     //Fix 18536 inizio
     //String key = iMagazzinoVrs8.getKey();
     //iMagazzinoVrs8.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     String key = null;
     if(iMagazzinoVrs.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoVrs.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     }
     setDirty();
     //Fix 18536 fine
   }

   public String getIdMagazzinoVrs8() {
     //Fix 18536 Inizio
     //String key = iMagazzinoVrs8.getKey();
     String key = null;
     if(iMagazzinoVrs.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 2);
   }

   public void setProdotto8(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setProdottoInternal8(idArticolo);
     //Fix 18536 Inizio
     //iProdotto8.setObject(articolo);
     if(articolo != null){
       iProdotto.put(new Integer((7 + (iCurrentNumPag - 1) * 20)), articolo);
       setDirty();
     }
     //Fix 18536 Fine
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getProdotto8() {
     //Fix 18536 Inizio
     //return (Articolo) iProdotto8.getObject();
     return (Articolo)iProdotto.get(new Integer(7 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdotto8Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdotto8.setKey(key);
     if(iProdotto.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null){
       ((Articolo)iProdotto.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal8(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdotto8Key() {
     //Fix 18536 Inizio
     //return iProdotto8.getKey();
     if(iProdotto.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Articolo)iProdotto.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdotto8(String rArticolo) {
     setProdottoInternal8(rArticolo);
     setDirty();
   }

   public String getIdProdotto8() {
     //Fix 18536 Inizio
     //String key = iProdotto8.getKey();
     String key = null;
     if(iProdotto.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Articolo)iProdotto.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setProdottoVersione8(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setProdottoInternal8(rArticolo);
     //Fix 18536 Inizio
     //this.iProdottoVersione8.setObject(articoloVersione);
     if(articoloVersione != null)
       iProdottoVersione.put(new Integer((7 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getProdottoVersione8() {
     //Fix 18536 Inizio
     //return (ArticoloVersione) iProdottoVersione8.getObject();
     return (ArticoloVersione)iProdottoVersione.get(new Integer(7 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoVersione8Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536
     //iProdottoVersione8.setKey(key);
     if(iProdottoVersione.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iProdottoVersione.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal8(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoVersione8Key() {
     //Fix 18536 Inizio
     //return iProdottoVersione8.getKey();
     if(iProdottoVersione.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iProdottoVersione.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoVersione8(Integer versione) {
     //Fix 18536 inizio
     //String key = iProdottoVersione8.getKey();
     //iProdottoVersione8.setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     String key = null;
     if(iProdottoVersione.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoVersione8() {
     //Fix 18536 Inizio
     //String key = iProdottoVersione8.getKey();
     String key = null;
     if(iProdottoVersione.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key, 3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setProdottoConfig8(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //String rArticolo = null;
     //if (configurazione != null) {
     //rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     //}
     //Fix 18536 Inizio
     //this.iProdottoConfig8.setObject(configurazione);
     if(configurazione != null)
       iProdottoConfig.put(new Integer((7 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getProdottoConfig8() {
     //Fix 18536 Inizio
     //return (Configurazione) iProdottoConfig8.getObject();
     return (Configurazione) iProdottoConfig.get(new Integer(7 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoConfig8Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdottoConfig8.setKey(key);
     if(iProdottoConfig.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal8(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoConfig8Key() {
     //Fix 18536 Inizio
     //return iProdottoConfig8.getKey();
     if(iProdottoConfig.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoConfig8(Integer idConfigurazione) {
     //Fix 18536 inizio
     //String key = iProdottoConfig8.getKey();
     //iProdottoConfig8.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     String key = null;
     if(iProdottoConfig.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iProdottoConfig.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoConfig8() {
     //Fix 18536 Inizio
     //String key = iProdottoConfig8.getKey();
     String key = null;
     if(iProdottoConfig.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getKey();
     }
     //Fix 18536 Fine
     return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2));
   }

   public String getPrdIdEsternoConfig8() {
     //Fix 18536 Inizio
     //return iProdottoConfig8.getIdEsternoConfig();
     if(iProdottoConfig.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     return null;
     //Fix 18536 Fine
   }

   public void setPrdIdEsternoConfig8(String idEsternoConfig) {
     //Fix 18536 Inizio
     //iProdottoConfig8.setIdEsternoConfig(idEsternoConfig);
     if(iProdottoConfig.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     //Fix 18536 Fine
   }

   public void setLottoProdotto8(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setProdottoInternal8(rArticolo);
     //Fix 18536 Inizio
     //this.iLottoProdotto8.setObject(lotto);
     if(lotto != null)
       iLottoProdotto.put(new Integer((7 + (iCurrentNumPag - 1) * 20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLottoProdotto8() {
     //Fix 18536 Inizio
     //return (Lotto) iLottoProdotto8.getObject();
     return (Lotto) iLottoProdotto.get(new Integer(7 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLottoProdotto8Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLottoProdotto8.setKey(key);
     if(iLottoProdotto.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoProdotto.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal8(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLottoProdotto8Key() {
     //Fix 18536 Inizio
     //return iLottoProdotto8.getKey();
     if(iLottoProdotto.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoProdotto.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLottoProdotto8(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLottoProdotto8.getKey();
     //iLottoProdotto8.setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     String key = null;
     if(iLottoProdotto.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Lotto)iLottoProdotto.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdLottoProdotto8() {
     //Fix 18536 Inizio
     //String key = iLottoProdotto8.getKey();
     String key = null;
     if(iLottoProdotto.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoProdotto.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setProdottoInternal8(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iProdottoVersione8.getKey();
     //iProdottoVersione8.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     //String key2 = iProdotto8.getKey();
     //iProdotto8.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     //String key3 = iLottoProdotto8.getKey();
     //iLottoProdotto8.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     //iProdottoConfig8.setIdArticolo(rArticolo);
     if(iProdottoVersione.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null){
       String key1 = ((ArticoloVersione)iProdottoVersione.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     }
     if(iProdotto.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null){
       String key2 = ((Articolo)iProdotto.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iProdotto.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     }
     if(iLottoProdotto.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null){
       String key3 = ((Lotto)iLottoProdotto.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     }
     if(iProdottoConfig.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(7 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaVrsUmPrm8(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmPrm8= qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaVrsUmPrm.put(new Integer((7 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaVrsUmPrmInternal(qtaPrlUmPrm, 7);
     setDirty();
   }

   public BigDecimal getQtaVrsUmPrm8() {
     //Fix 18536 Inizio
     //return iQtaVrsUmPrm8;
     return (BigDecimal)iQtaVrsUmPrm.get(new Integer(7 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaVrsUmSec8(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmSec8= qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaVrsUmSec.put(new Integer((7 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaVrsUmSecInternal(qtaPrlUmSec, 7);
     setDirty();
   }
   
   public BigDecimal getQtaVrsUmSec8() {
     //Fix 18536 Inizio
     //return iQtaVrsUmSec8;
     return (BigDecimal)iQtaVrsUmSec.get(new Integer(7 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmPrm8(BigDecimal qtaScartoUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmPrm8= qtaScartoUmPrm;
     /*if(qtaScartoUmPrm != null)
       iQtaScartoUmPrm.put(new Integer((7 + (iCurrentNumPag - 1) * 20)), qtaScartoUmPrm);*/
     //Fix 18536 Fine
  	 setQtaScartoUmPrmInternal(qtaScartoUmPrm, 7);
     setDirty();
   }

   public BigDecimal getQtaScartoUmPrm8() {
     //Fix 18536 Inizio
     //return iQtaScartoUmPrm8;
     return (BigDecimal)iQtaScartoUmPrm.get(new Integer(7 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmSec8(BigDecimal qtaScartoUmSec) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmSec8= qtaScartoUmSec;
    /*if(qtaScartoUmSec != null)
       iQtaScartoUmSec.put(new Integer((7 + (iCurrentNumPag - 1) * 20)), qtaScartoUmSec);*/
     //Fix 18536 Fine
  	 setQtaScartoUmSecInternal(qtaScartoUmSec, 7);
     setDirty();
   }

   public BigDecimal getQtaScartoUmSec8() {
     //Fix 18536 Inizio
     //return iQtaScartoUmSec8;
     return (BigDecimal)iQtaScartoUmSec.get(new Integer(7 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecPrd8() {
     if (getProdotto8() != null)
       return getProdotto8().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmPrd8() {
     if (getProdotto8() != null)
       return getProdotto8().getIdUMPrmMag();
     return null;
   }

   //Fix 17815 Inizio
   public void setDescrizioneProdotto8(String desc){
     //Fix 18536 Inizio
     //iDescrizioneProdotto8= desc;
     if(desc != null)
       iDescrizioneProdotto.put(new Integer((7 + (iCurrentNumPag - 1) * 20)), desc);
     //Fix 18536 Fine
   }

   public String getDescrizioneProdotto8() {
     //if (getProdotto8() != null) {
     //return getProdotto8().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     //Fix 18536 Inizio
     //return iDescrizioneProdotto8;
     return (String)iDescrizioneProdotto.get(new Integer(7 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 17815 Fine

   //Fix 14722 inizio
   public void setIdAnnoOrdine8(String anno){
     //Fix 18536 Inizio
     //iIdAnnoOrdine8= anno;
     if(anno != null)
       iIdAnnoOrdine.put(new Integer((7 + (iCurrentNumPag - 1) * 20)), anno);
     //Fix 18536 Fine
   }

   public String getIdAnnoOrdine8(){
     //Fix 18536 Inizio
     //return iIdAnnoOrdine8;
     return (String)iIdAnnoOrdine.get(new Integer(7 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdNumeroOrdine8(String numero){
     //Fix 18536 Inizio
     //iIdNumeroOrdine8= numero;
     if(numero != null)
       iIdNumeroOrdine.put(new Integer((7 + (iCurrentNumPag - 1) * 20)), numero);
     //Fix 18536 Fine
   }

   public String getIdNumeroOrdine8(){
     //Fix 18536 Inizio
     //return iIdNumeroOrdine8;
     return (String)iIdNumeroOrdine.get(new Integer(7 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdRigaAttivita8(Integer idRiga){
     //Fix 18536 Inizio
     //iIdRigaAttivita8= idRiga;
     if(idRiga != null)
       iIdRigaAttivita.put(new Integer((7 + (iCurrentNumPag - 1) * 20)), idRiga);
     //Fix 18536 Fine
   }

   public Integer getIdRigaAttivita8(){
     //Fix 18536 Inizio
     //return iIdRigaAttivita8;
     return (Integer)iIdRigaAttivita.get(new Integer(7 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 14722 fine

   /*------ Linea attributi prodotto n°9 -----*/
   public void setMagazzinoVrs9(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //this.iMagazzinoVrs9.setObject(magazzino);//Fix 18536
     //Fix 18536 inizio
     if(magazzino != null)
       iMagazzinoVrs.put(new Integer((8 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoVrs9() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs9.getObject();
     return (Magazzino)iMagazzinoVrs.get(new Integer(8 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoVrs9Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoVrs9.setKey(key);
     if(iMagazzinoVrs.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null)
       ((Magazzino)iMagazzinoVrs.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoVrs9Key() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs9.getObject();
     if(iMagazzinoVrs.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoVrs.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoVrs9(String idMagazzino) {
     //Fix 18536 inizio
     //String key = iMagazzinoVrs9.getKey();
     //iMagazzinoVrs9.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     String key = null;
     if(iMagazzinoVrs.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoVrs.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     }
     setDirty();
     //Fix 18536 fine
   }

   public String getIdMagazzinoVrs9() {
     //Fix 18536 Inizio
     //String key = iMagazzinoVrs9.getKey();
     String key = null;
     if(iMagazzinoVrs.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 2);
   }

   public void setProdotto9(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setProdottoInternal9(idArticolo);
     //Fix 18536 Inizio
     //iProdotto9.setObject(articolo);
     if(articolo != null){
       iProdotto.put(new Integer((8 + (iCurrentNumPag - 1) * 20)), articolo);
       setDirty();
     }
     //Fix 18536 Fine
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getProdotto9() {
     //Fix 18536 Inizio
     //return (Articolo) iProdotto9.getObject();
     return (Articolo)iProdotto.get(new Integer(8 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdotto9Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdotto9.setKey(key);
     if(iProdotto.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null){
       ((Articolo)iProdotto.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal9(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdotto9Key() {
     //Fix 18536 Inizio
     //return iProdotto9.getKey();
     if(iProdotto.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Articolo)iProdotto.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdotto9(String rArticolo) {
     setProdottoInternal9(rArticolo);
     setDirty();
   }

   public String getIdProdotto9() {
     //Fix 18536 Inizio
     //String key = iProdotto9.getKey();
     String key = null;
     if(iProdotto.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Articolo)iProdotto.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setProdottoVersione9(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setProdottoInternal9(rArticolo);
     //Fix 18536 Inizio
     //this.iProdottoVersione9.setObject(articoloVersione);
     if(articoloVersione != null)
       iProdottoVersione.put(new Integer((8 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getProdottoVersione9() {
     //Fix 18536 Inizio
     //return (ArticoloVersione) iProdottoVersione9.getObject();
     return (ArticoloVersione)iProdottoVersione.get(new Integer(8 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoVersione9Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536
     //iProdottoVersione9.setKey(key);
     if(iProdottoVersione.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iProdottoVersione.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal9(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoVersione9Key() {
     //Fix 18536 Inizio
     //return iProdottoVersione9.getKey();
     if(iProdottoVersione.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iProdottoVersione.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoVersione9(Integer versione) {
     //Fix 18536 inizio
     //String key = iProdottoVersione9.getKey();
     //iProdottoVersione9.setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     String key = null;
     if(iProdottoVersione.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoVersione9() {
     //Fix 18536 Inizio
     //String key = iProdottoVersione9.getKey();
     String key = null;
     if(iProdottoVersione.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key, 3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setProdottoConfig9(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //String rArticolo = null;
     //if (configurazione != null) {
     //rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     //}
     //Fix 18536 Inizio
     //this.iProdottoConfig9.setObject(configurazione);
     if(configurazione != null)
       iProdottoConfig.put(new Integer((8 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getProdottoConfig9() {
     //Fix 18536 Inizio
     //return (Configurazione) iProdottoConfig9.getObject();
     return (Configurazione) iProdottoConfig.get(new Integer(8 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoConfig9Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdottoConfig9.setKey(key);
     if(iProdottoConfig.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal9(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoConfig9Key() {
     //Fix 18536 Inizio
     //return iProdottoConfig9.getKey();
     if(iProdottoConfig.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoConfig9(Integer idConfigurazione) {
     //Fix 18536 inizio
     //String key = iProdottoConfig9.getKey();
     //iProdottoConfig9.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     String key = null;
     if(iProdottoConfig.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iProdottoConfig.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoConfig9() {
     //Fix 18536 Inizio
     //String key = iProdottoConfig9.getKey();
     String key = null;
     if(iProdottoConfig.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getKey();
     }
     //Fix 18536 Fine
     return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2));
   }

   public String getPrdIdEsternoConfig9() {
     //Fix 18536 Inizio
     //return iProdottoConfig9.getIdEsternoConfig();
     if(iProdottoConfig.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     return null;
     //Fix 18536 Fine
   }

   public void setPrdIdEsternoConfig9(String idEsternoConfig) {
     //Fix 18536 Inizio
     //iProdottoConfig9.setIdEsternoConfig(idEsternoConfig);
     if(iProdottoConfig.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     //Fix 18536 Fine
   }

   public void setLottoProdotto9(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setProdottoInternal9(rArticolo);
     //Fix 18536 Inizio
     //this.iLottoProdotto9.setObject(lotto);
     if(lotto != null)
       iLottoProdotto.put(new Integer((8 + (iCurrentNumPag - 1) * 20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLottoProdotto9() {
     //Fix 18536 Inizio
     //return (Lotto) iLottoProdotto9.getObject();
     return (Lotto) iLottoProdotto.get(new Integer(8 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLottoProdotto9Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLottoProdotto9.setKey(key);
     if(iLottoProdotto.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoProdotto.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal9(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLottoProdotto9Key() {
     //Fix 18536 Inizio
     //return iLottoProdotto9.getKey();
     if(iLottoProdotto.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoProdotto.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLottoProdotto9(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLottoProdotto9.getKey();
     //iLottoProdotto9.setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     String key = null;
     if(iLottoProdotto.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Lotto)iLottoProdotto.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdLottoProdotto9() {
     //Fix 18536 Inizio
     //String key = iLottoProdotto9.getKey();
     String key = null;
     if(iLottoProdotto.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoProdotto.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setProdottoInternal9(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iProdottoVersione9.getKey();
     //iProdottoVersione9.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     //String key2 = iProdotto9.getKey();
     //iProdotto9.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     //String key3 = iLottoProdotto9.getKey();
     //iLottoProdotto9.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     //iProdottoConfig9.setIdArticolo(rArticolo);
     if(iProdottoVersione.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null){
       String key1 = ((ArticoloVersione)iProdottoVersione.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     }
     if(iProdotto.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null){
       String key2 = ((Articolo)iProdotto.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iProdotto.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     }
     if(iLottoProdotto.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null){
       String key3 = ((Lotto)iLottoProdotto.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     }
     if(iProdottoConfig.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(8 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaVrsUmPrm9(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmPrm9= qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaVrsUmPrm.put(new Integer((8 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaVrsUmPrmInternal(qtaPrlUmPrm, 8);
     setDirty();
   }

   public BigDecimal getQtaVrsUmPrm9() {
     //Fix 18536 Inizio
     //return iQtaVrsUmPrm9;
     return (BigDecimal)iQtaVrsUmPrm.get(new Integer(8 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaVrsUmSec9(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmSec9= qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaVrsUmSec.put(new Integer((8 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaVrsUmSecInternal(qtaPrlUmSec, 8);
     setDirty();
   }

   public BigDecimal getQtaVrsUmSec9() {
     //Fix 18536 Inizio
     //return iQtaVrsUmSec9;
     return (BigDecimal)iQtaVrsUmSec.get(new Integer(8 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmPrm9(BigDecimal qtaScartoUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmPrm9= qtaScartoUmPrm;
     /*if(qtaScartoUmPrm != null)
       iQtaScartoUmPrm.put(new Integer((8 + (iCurrentNumPag - 1) * 20)), qtaScartoUmPrm);*/
     //Fix 18536 Fine
  	 setQtaScartoUmPrmInternal(qtaScartoUmPrm, 8);
     setDirty();
   }

   public BigDecimal getQtaScartoUmPrm9() {
     //Fix 18536 Inizio
     //return iQtaScartoUmPrm9;
     return (BigDecimal)iQtaScartoUmPrm.get(new Integer(8 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmSec9(BigDecimal qtaScartoUmSec) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmSec9= qtaScartoUmSec;
     /*if(qtaScartoUmSec != null)
       iQtaScartoUmSec.put(new Integer((8 + (iCurrentNumPag - 1) * 20)), qtaScartoUmSec);*/
     //Fix 18536 Fine
  	 setQtaScartoUmSecInternal(qtaScartoUmSec, 8);
     setDirty();
   }

   public BigDecimal getQtaScartoUmSec9() {
     //Fix 18536 Inizio
     //return iQtaScartoUmSec9;
     return (BigDecimal)iQtaScartoUmSec.get(new Integer(8 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecPrd9() {
     if (getProdotto9() != null)
       return getProdotto9().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmPrd9() {
     if (getProdotto9() != null)
       return getProdotto9().getIdUMPrmMag();
     return null;
   }

   //Fix 17815 Inizio
   public void setDescrizioneProdotto9(String desc){
     //Fix 18536 Inizio
     //iDescrizioneProdotto9= desc;
     if(desc != null)
       iDescrizioneProdotto.put(new Integer((8 + (iCurrentNumPag - 1) * 20)), desc);
     //Fix 18536 Fine
   }

   public String getDescrizioneProdotto9() {
     //if (getProdotto9() != null) {
     //return getProdotto9().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     //Fix 18536 Inizio
     //return iDescrizioneProdotto9;
     return (String)iDescrizioneProdotto.get(new Integer(8 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 17815 Fine

   //Fix 14722 inizio
   public void setIdAnnoOrdine9(String anno){
     //Fix 18536 Inizio
     //iIdAnnoOrdine9= anno;
     if(anno != null)
       iIdAnnoOrdine.put(new Integer((8 + (iCurrentNumPag - 1) * 20)), anno);
     //Fix 18536 Fine
   }

   public String getIdAnnoOrdine9(){
     //Fix 18536 Inizio
     //return iIdAnnoOrdine9;
     return (String)iIdAnnoOrdine.get(new Integer(8 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdNumeroOrdine9(String numero){
     //Fix 18536 Inizio
     //iIdNumeroOrdine9= numero;
     if(numero != null)
       iIdNumeroOrdine.put(new Integer((8 + (iCurrentNumPag - 1) * 20)), numero);
     //Fix 18536 Fine
   }

   public String getIdNumeroOrdine9(){
     //Fix 18536 Inizio
     //return iIdNumeroOrdine9;
     return (String)iIdNumeroOrdine.get(new Integer(8 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdRigaAttivita9(Integer idRiga){
     //Fix 18536 Inizio
     //iIdRigaAttivita9= idRiga;
     if(idRiga != null)
       iIdRigaAttivita.put(new Integer((8 + (iCurrentNumPag - 1) * 20)), idRiga);
     //Fix 18536 Fine
   }

   public Integer getIdRigaAttivita9(){
     //Fix 18536 Inizio
     //return iIdRigaAttivita9;
     return (Integer)iIdRigaAttivita.get(new Integer(8 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 14722 fine

   /*------ Linea attributi prodotto n°10 -----*/
   public void setMagazzinoVrs10(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //this.iMagazzinoVrs10.setObject(magazzino);//Fix 18536
     //Fix 18536 inizio
     if(magazzino != null)
       iMagazzinoVrs.put(new Integer((9 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoVrs10() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs10.getObject();
     return (Magazzino)iMagazzinoVrs.get(new Integer(9 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoVrs10Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoVrs10.setKey(key);
     if(iMagazzinoVrs.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null)
       ((Magazzino)iMagazzinoVrs.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoVrs10Key() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs10.getObject();
     if(iMagazzinoVrs.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoVrs.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoVrs10(String idMagazzino) {
     //Fix 18536 inizio
     //String key = iMagazzinoVrs10.getKey();
     //iMagazzinoVrs10.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     String key = null;
     if(iMagazzinoVrs.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoVrs.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     }
     setDirty();
     //Fix 18536 fine
   }

   public String getIdMagazzinoVrs10() {
     //Fix 18536 Inizio
     //String key = iMagazzinoVrs10.getKey();
     String key = null;
     if(iMagazzinoVrs.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 2);
   }

   public void setProdotto10(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setProdottoInternal10(idArticolo);
     //Fix 18536 Inizio
     //iProdotto10.setObject(articolo);
     if(articolo != null){
       iProdotto.put(new Integer((9 + (iCurrentNumPag - 1) * 20)), articolo);
       setDirty();
     }
     //Fix 18536 Fine
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getProdotto10() {
     //Fix 18536 Inizio
     //return (Articolo) iProdotto10.getObject();
     return (Articolo)iProdotto.get(new Integer(9 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdotto10Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdotto10.setKey(key);
     if(iProdotto.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null){
       ((Articolo)iProdotto.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal10(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdotto10Key() {
     //Fix 18536 Inizio
     //return iProdotto10.getKey();
     if(iProdotto.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Articolo)iProdotto.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdotto10(String rArticolo) {
     setProdottoInternal10(rArticolo);
     setDirty();
   }

   public String getIdProdotto10() {
     //Fix 18536 Inizio
     //String key = iProdotto10.getKey();
     String key = null;
     if(iProdotto.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Articolo)iProdotto.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setProdottoVersione10(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setProdottoInternal10(rArticolo);
     //Fix 18536 Inizio
     //this.iProdottoVersione10.setObject(articoloVersione);
     if(articoloVersione != null)
       iProdottoVersione.put(new Integer((9 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getProdottoVersione10() {
     //Fix 18536 Inizio
     //return (ArticoloVersione) iProdottoVersione10.getObject();
     return (ArticoloVersione)iProdottoVersione.get(new Integer(9 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoVersione10Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536
     //iProdottoVersione10.setKey(key);
     if(iProdottoVersione.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iProdottoVersione.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal10(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoVersione10Key() {
     //Fix 18536 Inizio
     //return iProdottoVersione10.getKey();
     if(iProdottoVersione.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iProdottoVersione.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoVersione10(Integer versione) {
     //Fix 18536 inizio
     //String key = iProdottoVersione10.getKey();
     //iProdottoVersione10.setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     String key = null;
     if(iProdottoVersione.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoVersione10() {
     //Fix 18536 Inizio
     //String key = iProdottoVersione10.getKey();
     String key = null;
     if(iProdottoVersione.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key, 3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setProdottoConfig10(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //String rArticolo = null;
     //if (configurazione != null) {
     //rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     //}
     //Fix 18536 Inizio
     //this.iProdottoConfig10.setObject(configurazione);
     if(configurazione != null)
       iProdottoConfig.put(new Integer((9 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getProdottoConfig10() {
     //Fix 18536 Inizio
     //return (Configurazione) iProdottoConfig10.getObject();
     return (Configurazione) iProdottoConfig.get(new Integer(9 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoConfig10Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdottoConfig10.setKey(key);
     if(iProdottoConfig.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal10(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoConfig10Key() {
     //Fix 18536 Inizio
     //return iProdottoConfig10.getKey();
     if(iProdottoConfig.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoConfig10(Integer idConfigurazione) {
     //Fix 18536 inizio
     //String key = iProdottoConfig10.getKey();
     //iProdottoConfig10.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     String key = null;
     if(iProdottoConfig.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iProdottoConfig.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoConfig10() {
     //Fix 18536 Inizio
     //String key = iProdottoConfig10.getKey();
     String key = null;
     if(iProdottoConfig.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getKey();
     }
     //Fix 18536 Fine
     return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2));
   }

   public String getPrdIdEsternoConfig10() {
     //Fix 18536 Inizio
     //return iProdottoConfig10.getIdEsternoConfig();
     if(iProdottoConfig.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     return null;
     //Fix 18536 Fine
   }

   public void setPrdIdEsternoConfig10(String idEsternoConfig) {
     //Fix 18536 Inizio
     //iProdottoConfig10.setIdEsternoConfig(idEsternoConfig);
     if(iProdottoConfig.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     //Fix 18536 Fine
   }

   public void setLottoProdotto10(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setProdottoInternal10(rArticolo);
     //Fix 18536 Inizio
     //this.iLottoProdotto10.setObject(lotto);
     if(lotto != null)
       iLottoProdotto.put(new Integer((9 + (iCurrentNumPag - 1) * 20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLottoProdotto10() {
     //Fix 18536 Inizio
     //return (Lotto) iLottoProdotto10.getObject();
     return (Lotto) iLottoProdotto.get(new Integer(9 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLottoProdotto10Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLottoProdotto10.setKey(key);
     if(iLottoProdotto.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoProdotto.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal10(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLottoProdotto10Key() {
     //Fix 18536 Inizio
     //return iLottoProdotto10.getKey();
     if(iLottoProdotto.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoProdotto.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLottoProdotto10(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLottoProdotto10.getKey();
     //iLottoProdotto10.setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     String key = null;
     if(iLottoProdotto.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Lotto)iLottoProdotto.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdLottoProdotto10() {
     //Fix 18536 Inizio
     //String key = iLottoProdotto10.getKey();
     String key = null;
     if(iLottoProdotto.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoProdotto.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setProdottoInternal10(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iProdottoVersione10.getKey();
     //iProdottoVersione10.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     //String key2 = iProdotto10.getKey();
     //iProdotto10.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     //String key3 = iLottoProdotto10.getKey();
     //iLottoProdotto10.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     //iProdottoConfig10.setIdArticolo(rArticolo);
     if(iProdottoVersione.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null){
       String key1 = ((ArticoloVersione)iProdottoVersione.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     }
     if(iProdotto.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null){
       String key2 = ((Articolo)iProdotto.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iProdotto.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     }
     if(iLottoProdotto.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null){
       String key3 = ((Lotto)iLottoProdotto.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     }
     if(iProdottoConfig.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(9 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaVrsUmPrm10(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmPrm10= qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaVrsUmPrm.put(new Integer((9 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaVrsUmPrmInternal(qtaPrlUmPrm, 9);
     setDirty();
   }
   
   public BigDecimal getQtaVrsUmPrm10() {
     //Fix 18536 Inizio
     //return iQtaVrsUmPrm10;
     return (BigDecimal)iQtaVrsUmPrm.get(new Integer(9 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaVrsUmSec10(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmSec10= qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaVrsUmSec.put(new Integer((9 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaVrsUmSecInternal(qtaPrlUmSec, 9);
     setDirty();
   }

   public BigDecimal getQtaVrsUmSec10() {
     //Fix 18536 Inizio
     //return iQtaVrsUmSec10;
     return (BigDecimal)iQtaVrsUmSec.get(new Integer(9 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmPrm10(BigDecimal qtaScartoUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmPrm10= qtaScartoUmPrm;
     /*if(qtaScartoUmPrm != null)
       iQtaScartoUmPrm.put(new Integer((9 + (iCurrentNumPag - 1) * 20)), qtaScartoUmPrm);*/
     //Fix 18536 Fine
  	 setQtaScartoUmPrmInternal(qtaScartoUmPrm, 9);
     setDirty();
   }

   public BigDecimal getQtaScartoUmPrm10() {
     //Fix 18536 Inizio
     //return iQtaScartoUmPrm10;
     return (BigDecimal)iQtaScartoUmPrm.get(new Integer(9 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmSec10(BigDecimal qtaScartoUmSec) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmSec10= qtaScartoUmSec;
     /*if(qtaScartoUmSec != null)
       iQtaScartoUmSec.put(new Integer((9 + (iCurrentNumPag - 1) * 20)), qtaScartoUmSec);*/
     //Fix 18536 Fine
  	 setQtaScartoUmSecInternal(qtaScartoUmSec, 9);
     setDirty();
   }

   public BigDecimal getQtaScartoUmSec10() {
     //Fix 18536 Inizio
     //return iQtaScartoUmSec10;
     return (BigDecimal)iQtaScartoUmSec.get(new Integer(9 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecPrd10() {
     if (getProdotto10() != null)
       return getProdotto10().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmPrd10() {
     if (getProdotto10() != null)
       return getProdotto10().getIdUMPrmMag();
     return null;
   }

   //Fix 17815 Inizio
   public void setDescrizioneProdotto10(String desc){
     //Fix 18536 Inizio
     //iDescrizioneProdotto10= desc;
     if(desc != null)
       iDescrizioneProdotto.put(new Integer((9 + (iCurrentNumPag - 1) * 20)), desc);
     //Fix 18536 Fine
   }

   public String getDescrizioneProdotto10() {
     //if (getProdotto10() != null) {
     //return getProdotto10().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     //Fix 18536 Inizio
     //return iDescrizioneProdotto10;
     return (String)iDescrizioneProdotto.get(new Integer(9 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 17815 Fine

   //Fix 14722 inizio
   public void setIdAnnoOrdine10(String anno){
     //Fix 18536 Inizio
     //iIdAnnoOrdine10= anno;
     if(anno != null)
       iIdAnnoOrdine.put(new Integer((9 + (iCurrentNumPag - 1) * 20)), anno);
     //Fix 18536 Fine
   }

   public String getIdAnnoOrdine10(){
     //Fix 18536 Inizio
     //return iIdAnnoOrdine10;
     return (String)iIdAnnoOrdine.get(new Integer(9 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdNumeroOrdine10(String numero){
     //Fix 18536 Inizio
     //iIdNumeroOrdine10= numero;
     if(numero != null)
       iIdNumeroOrdine.put(new Integer((9 + (iCurrentNumPag - 1) * 20)), numero);
     //Fix 18536 Fine
   }

   public String getIdNumeroOrdine10(){
     //Fix 18536 Inizio
     //return iIdNumeroOrdine10;
     return (String)iIdNumeroOrdine.get(new Integer(9 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdRigaAttivita10(Integer idRiga){
     //Fix 18536 Inizio
     //iIdRigaAttivita10= idRiga;
     if(idRiga != null)
       iIdRigaAttivita.put(new Integer((9 + (iCurrentNumPag - 1) * 20)), idRiga);
     //Fix 18536 Fine
   }

   public Integer getIdRigaAttivita10(){
     //Fix 18536 Inizio
     //return iIdRigaAttivita10;
     return (Integer)iIdRigaAttivita.get(new Integer(9 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 14722 fine

   /*------ Linea attributi prodotto n°11 -----*/
   public void setMagazzinoVrs11(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //this.iMagazzinoVrs11.setObject(magazzino);//Fix 18536
     //Fix 18536 inizio
     if(magazzino != null)
       iMagazzinoVrs.put(new Integer((10 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoVrs11() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs11.getObject();
     return (Magazzino)iMagazzinoVrs.get(new Integer(10 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoVrs11Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoVrs11.setKey(key);
     if(iMagazzinoVrs.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null)
       ((Magazzino)iMagazzinoVrs.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoVrs11Key() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs11.getObject();
     if(iMagazzinoVrs.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoVrs.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoVrs11(String idMagazzino) {
     //Fix 18536 inizio
     //String key = iMagazzinoVrs11.getKey();
     //iMagazzinoVrs11.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     String key = null;
     if(iMagazzinoVrs.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoVrs.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     }
     setDirty();
     //Fix 18536 fine
   }

   public String getIdMagazzinoVrs11() {
     //Fix 18536 Inizio
     //String key = iMagazzinoVrs11.getKey();
     String key = null;
     if(iMagazzinoVrs.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 2);
   }

   public void setProdotto11(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setProdottoInternal11(idArticolo);
     //Fix 18536 Inizio
     //iProdotto11.setObject(articolo);
     if(articolo != null){
       iProdotto.put(new Integer((10 + (iCurrentNumPag - 1) * 20)), articolo);
       setDirty();
     }
     //Fix 18536 Fine
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getProdotto11() {
     //Fix 18536 Inizio
     //return (Articolo) iProdotto11.getObject();
     return (Articolo)iProdotto.get(new Integer(10 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdotto11Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdotto11.setKey(key);
     if(iProdotto.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null){
       ((Articolo)iProdotto.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal11(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdotto11Key() {
     //Fix 18536 Inizio
     //return iProdotto11.getKey();
     if(iProdotto.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Articolo)iProdotto.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdotto11(String rArticolo) {
     setProdottoInternal11(rArticolo);
     setDirty();
   }

   public String getIdProdotto11() {
     //Fix 18536 Inizio
     //String key = iProdotto11.getKey();
     String key = null;
     if(iProdotto.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Articolo)iProdotto.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setProdottoVersione11(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setProdottoInternal11(rArticolo);
     //Fix 18536 Inizio
     //this.iProdottoVersione11.setObject(articoloVersione);
     if(articoloVersione != null)
       iProdottoVersione.put(new Integer((10 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getProdottoVersione11() {
     //Fix 18536 Inizio
     //return (ArticoloVersione) iProdottoVersione11.getObject();
     return (ArticoloVersione)iProdottoVersione.get(new Integer(10 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoVersione11Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536
     //iProdottoVersione11.setKey(key);
     if(iProdottoVersione.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iProdottoVersione.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal11(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoVersione11Key() {
     //Fix 18536 Inizio
     //return iProdottoVersione11.getKey();
     if(iProdottoVersione.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iProdottoVersione.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoVersione11(Integer versione) {
     //Fix 18536 inizio
     //String key = iProdottoVersione11.getKey();
     //iProdottoVersione11.setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     String key = null;
     if(iProdottoVersione.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoVersione11() {
     //Fix 18536 Inizio
     //String key = iProdottoVersione11.getKey();
     String key = null;
     if(iProdottoVersione.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key, 3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setProdottoConfig11(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //String rArticolo = null;
     //if (configurazione != null) {
     //rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     //}
     //Fix 18536 Inizio
     //this.iProdottoConfig11.setObject(configurazione);
     if(configurazione != null)
       iProdottoConfig.put(new Integer((10 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getProdottoConfig11() {
     //Fix 18536 Inizio
     //return (Configurazione) iProdottoConfig11.getObject();
     return (Configurazione) iProdottoConfig.get(new Integer(10 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoConfig11Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdottoConfig11.setKey(key);
     if(iProdottoConfig.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal11(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoConfig11Key() {
     //Fix 18536 Inizio
     //return iProdottoConfig11.getKey();
     if(iProdottoConfig.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoConfig11(Integer idConfigurazione) {
     //Fix 18536 inizio
     //String key = iProdottoConfig11.getKey();
     //iProdottoConfig11.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     String key = null;
     if(iProdottoConfig.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iProdottoConfig.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoConfig11() {
     //Fix 18536 Inizio
     //String key = iProdottoConfig11.getKey();
     String key = null;
     if(iProdottoConfig.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getKey();
     }
     //Fix 18536 Fine
     return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2));
   }

   public String getPrdIdEsternoConfig11() {
     //Fix 18536 Inizio
     //return iProdottoConfig11.getIdEsternoConfig();
     if(iProdottoConfig.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     return null;
     //Fix 18536 Fine
   }

   public void setPrdIdEsternoConfig11(String idEsternoConfig) {
     //Fix 18536 Inizio
     //iProdottoConfig11.setIdEsternoConfig(idEsternoConfig);
     if(iProdottoConfig.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     //Fix 18536 Fine
   }

   public void setLottoProdotto11(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setProdottoInternal11(rArticolo);
     //Fix 18536 Inizio
     //this.iLottoProdotto11.setObject(lotto);
     if(lotto != null)
       iLottoProdotto.put(new Integer((10 + (iCurrentNumPag - 1) * 20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLottoProdotto11() {
     //Fix 18536 Inizio
     //return (Lotto) iLottoProdotto11.getObject();
     return (Lotto) iLottoProdotto.get(new Integer(10 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLottoProdotto11Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLottoProdotto11.setKey(key);
     if(iLottoProdotto.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoProdotto.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal11(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLottoProdotto11Key() {
     //Fix 18536 Inizio
     //return iLottoProdotto11.getKey();
     if(iLottoProdotto.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoProdotto.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLottoProdotto11(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLottoProdotto11.getKey();
     //iLottoProdotto11.setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     String key = null;
     if(iLottoProdotto.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Lotto)iLottoProdotto.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdLottoProdotto11() {
     //Fix 18536 Inizio
     //String key = iLottoProdotto11.getKey();
     String key = null;
     if(iLottoProdotto.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoProdotto.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setProdottoInternal11(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iProdottoVersione11.getKey();
     //iProdottoVersione11.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     //String key2 = iProdotto11.getKey();
     //iProdotto11.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     //String key3 = iLottoProdotto11.getKey();
     //iLottoProdotto11.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     //iProdottoConfig11.setIdArticolo(rArticolo);
     if(iProdottoVersione.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null){
       String key1 = ((ArticoloVersione)iProdottoVersione.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     }
     if(iProdotto.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null){
       String key2 = ((Articolo)iProdotto.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iProdotto.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     }
     if(iLottoProdotto.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null){
       String key3 = ((Lotto)iLottoProdotto.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     }
     if(iProdottoConfig.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(10 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaVrsUmPrm11(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmPrm11= qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaVrsUmPrm.put(new Integer((10 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaVrsUmPrmInternal(qtaPrlUmPrm, 10);
     setDirty();
   }

   public BigDecimal getQtaVrsUmPrm11() {
     //Fix 18536 Inizio
     //return iQtaVrsUmPrm11;
     return (BigDecimal)iQtaVrsUmPrm.get(new Integer(10 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaVrsUmSec11(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmSec11= qtaPrlUmSec;
    /*if(qtaPrlUmSec != null)
       iQtaVrsUmSec.put(new Integer((10 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaVrsUmSecInternal(qtaPrlUmSec, 10);
     setDirty();
   }

   public BigDecimal getQtaVrsUmSec11() {
     //Fix 18536 Inizio
     //return iQtaVrsUmSec11;
     return (BigDecimal)iQtaVrsUmSec.get(new Integer(10 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmPrm11(BigDecimal qtaScartoUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmPrm11= qtaScartoUmPrm;
     /*if(qtaScartoUmPrm != null)
       iQtaScartoUmPrm.put(new Integer((10 + (iCurrentNumPag - 1) * 20)), qtaScartoUmPrm);*/
     //Fix 18536 Fine
  	 setQtaScartoUmPrmInternal(qtaScartoUmPrm, 10);
     setDirty();
   }

   public BigDecimal getQtaScartoUmPrm11() {
     //Fix 18536 Inizio
     //return iQtaScartoUmPrm11;
     return (BigDecimal)iQtaScartoUmPrm.get(new Integer(10 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmSec11(BigDecimal qtaScartoUmSec) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmSec11= qtaScartoUmSec;
     /*if(qtaScartoUmSec != null)
       iQtaScartoUmSec.put(new Integer((10 + (iCurrentNumPag - 1) * 20)), qtaScartoUmSec);*/
     //Fix 18536 Fine
  	 setQtaScartoUmSecInternal(qtaScartoUmSec, 10);
     setDirty();
   }

   public BigDecimal getQtaScartoUmSec11() {
     //Fix 18536 Inizio
     //return iQtaScartoUmSec11;
     return (BigDecimal)iQtaScartoUmSec.get(new Integer(10 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecPrd11() {
     if (getProdotto11() != null)
       return getProdotto11().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmPrd11() {
     if (getProdotto11() != null)
       return getProdotto11().getIdUMPrmMag();
     return null;
   }

   //Fix 17815 Inizio
   public void setDescrizioneProdotto11(String desc){
     //Fix 18536 Inizio
     //iDescrizioneProdotto11= desc;
     if(desc != null)
       iDescrizioneProdotto.put(new Integer((10 + (iCurrentNumPag - 1) * 20)), desc);
     //Fix 18536 Fine
   }

   public String getDescrizioneProdotto11() {
     //if (getProdotto11() != null) {
     //return getProdotto11().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     //Fix 18536 Inizio
     //return iDescrizioneProdotto11;
     return (String)iDescrizioneProdotto.get(new Integer(10 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 17815 Fine

   //Fix 14722 inizio
   public void setIdAnnoOrdine11(String anno){
     //Fix 18536 Inizio
     //iIdAnnoOrdine11= anno;
     if(anno != null)
       iIdAnnoOrdine.put(new Integer((10 + (iCurrentNumPag - 1) * 20)), anno);
     //Fix 18536 Fine
   }

   public String getIdAnnoOrdine11(){
     //Fix 18536 Inizio
     //return iIdAnnoOrdine11;
     return (String)iIdAnnoOrdine.get(new Integer(10 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdNumeroOrdine11(String numero){
     //Fix 18536 Inizio
     //iIdNumeroOrdine11= numero;
     if(numero != null)
       iIdNumeroOrdine.put(new Integer((10 + (iCurrentNumPag - 1) * 20)), numero);
     //Fix 18536 Fine
   }

   public String getIdNumeroOrdine11(){
     //Fix 18536 Inizio
     //return iIdNumeroOrdine11;
     return (String)iIdNumeroOrdine.get(new Integer(10 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdRigaAttivita11(Integer idRiga){
     //Fix 18536 Inizio
     //iIdRigaAttivita11= idRiga;
     if(idRiga != null)
       iIdRigaAttivita.put(new Integer((10 + (iCurrentNumPag - 1) * 20)), idRiga);
     //Fix 18536 Fine
   }

   public Integer getIdRigaAttivita11(){
     //Fix 18536 Inizio
     //return iIdRigaAttivita11;
     return (Integer)iIdRigaAttivita.get(new Integer(10 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 14722 fine

   /*------ Linea attributi prodotto n°12 -----*/
   public void setMagazzinoVrs12(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //this.iMagazzinoVrs12.setObject(magazzino);//Fix 18536
     //Fix 18536 inizio
     if(magazzino != null)
       iMagazzinoVrs.put(new Integer((11 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoVrs12() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs12.getObject();
     return (Magazzino)iMagazzinoVrs.get(new Integer(11 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoVrs12Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoVrs12.setKey(key);
     if(iMagazzinoVrs.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null)
       ((Magazzino)iMagazzinoVrs.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoVrs12Key() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs12.getObject();
     if(iMagazzinoVrs.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoVrs.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoVrs12(String idMagazzino) {
     //Fix 18536 inizio
     //String key = iMagazzinoVrs12.getKey();
     //iMagazzinoVrs12.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     String key = null;
     if(iMagazzinoVrs.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoVrs.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     }
     setDirty();
     //Fix 18536 fine
   }

   public String getIdMagazzinoVrs12() {
     //Fix 18536 Inizio
     //String key = iMagazzinoVrs12.getKey();
     String key = null;
     if(iMagazzinoVrs.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 2);
   }

   public void setProdotto12(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setProdottoInternal12(idArticolo);
     //Fix 18536 Inizio
     //iProdotto12.setObject(articolo);
     if(articolo != null){
       iProdotto.put(new Integer((11 + (iCurrentNumPag - 1) * 20)), articolo);
       setDirty();
     }
     //Fix 18536 Fine
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getProdotto12() {
     //Fix 18536 Inizio
     //return (Articolo) iProdotto12.getObject();
     return (Articolo)iProdotto.get(new Integer(11 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdotto12Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdotto12.setKey(key);
     if(iProdotto.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null){
       ((Articolo)iProdotto.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal12(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdotto12Key() {
     //Fix 18536 Inizio
     //return iProdotto12.getKey();
     if(iProdotto.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Articolo)iProdotto.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdotto12(String rArticolo) {
     setProdottoInternal12(rArticolo);
     setDirty();
   }

   public String getIdProdotto12() {
     //Fix 18536 Inizio
     //String key = iProdotto12.getKey();
     String key = null;
     if(iProdotto.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Articolo)iProdotto.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setProdottoVersione12(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setProdottoInternal12(rArticolo);
     //Fix 18536 Inizio
     //this.iProdottoVersione12.setObject(articoloVersione);
     if(articoloVersione != null)
       iProdottoVersione.put(new Integer((11 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getProdottoVersione12() {
     //Fix 18536 Inizio
     //return (ArticoloVersione) iProdottoVersione12.getObject();
     return (ArticoloVersione)iProdottoVersione.get(new Integer(11 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoVersione12Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536
     //iProdottoVersione12.setKey(key);
     if(iProdottoVersione.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iProdottoVersione.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal12(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoVersione12Key() {
     //Fix 18536 Inizio
     //return iProdottoVersione12.getKey();
     if(iProdottoVersione.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iProdottoVersione.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoVersione12(Integer versione) {
     //Fix 18536 inizio
     //String key = iProdottoVersione12.getKey();
     //iProdottoVersione12.setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     String key = null;
     if(iProdottoVersione.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoVersione12() {
     //Fix 18536 Inizio
     //String key = iProdottoVersione12.getKey();
     String key = null;
     if(iProdottoVersione.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key, 3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setProdottoConfig12(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //String rArticolo = null;
     //if (configurazione != null) {
     //rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     //}
     //Fix 18536 Inizio
     //this.iProdottoConfig12.setObject(configurazione);
     if(configurazione != null)
       iProdottoConfig.put(new Integer((11 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getProdottoConfig12() {
     //Fix 18536 Inizio
     //return (Configurazione) iProdottoConfig12.getObject();
     return (Configurazione) iProdottoConfig.get(new Integer(11 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoConfig12Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdottoConfig12.setKey(key);
     if(iProdottoConfig.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal12(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoConfig12Key() {
     //Fix 18536 Inizio
     //return iProdottoConfig12.getKey();
     if(iProdottoConfig.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoConfig12(Integer idConfigurazione) {
     //Fix 18536 inizio
     //String key = iProdottoConfig12.getKey();
     //iProdottoConfig12.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     String key = null;
     if(iProdottoConfig.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iProdottoConfig.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoConfig12() {
     //Fix 18536 Inizio
     //String key = iProdottoConfig12.getKey();
     String key = null;
     if(iProdottoConfig.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getKey();
     }
     //Fix 18536 Fine
     return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2));
   }

   public String getPrdIdEsternoConfig12() {
     //Fix 18536 Inizio
     //return iProdottoConfig12.getIdEsternoConfig();
     if(iProdottoConfig.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     return null;
     //Fix 18536 Fine
   }

   public void setPrdIdEsternoConfig12(String idEsternoConfig) {
     //Fix 18536 Inizio
     //iProdottoConfig12.setIdEsternoConfig(idEsternoConfig);
     if(iProdottoConfig.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     //Fix 18536 Fine
   }

   public void setLottoProdotto12(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setProdottoInternal12(rArticolo);
     //Fix 18536 Inizio
     //this.iLottoProdotto12.setObject(lotto);
     if(lotto != null)
       iLottoProdotto.put(new Integer((11 + (iCurrentNumPag - 1) * 20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLottoProdotto12() {
     //Fix 18536 Inizio
     //return (Lotto) iLottoProdotto12.getObject();
     return (Lotto) iLottoProdotto.get(new Integer(11 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLottoProdotto12Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLottoProdotto12.setKey(key);
     if(iLottoProdotto.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoProdotto.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal12(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLottoProdotto12Key() {
     //Fix 18536 Inizio
     //return iLottoProdotto12.getKey();
     if(iLottoProdotto.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoProdotto.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLottoProdotto12(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLottoProdotto12.getKey();
     //iLottoProdotto12.setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     String key = null;
     if(iLottoProdotto.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Lotto)iLottoProdotto.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdLottoProdotto12() {
     //Fix 18536 Inizio
     //String key = iLottoProdotto12.getKey();
     String key = null;
     if(iLottoProdotto.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoProdotto.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setProdottoInternal12(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iProdottoVersione12.getKey();
     //iProdottoVersione12.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     //String key2 = iProdotto12.getKey();
     //iProdotto12.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     //String key3 = iLottoProdotto12.getKey();
     //iLottoProdotto12.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     //iProdottoConfig12.setIdArticolo(rArticolo);
     if(iProdottoVersione.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null){
       String key1 = ((ArticoloVersione)iProdottoVersione.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     }
     if(iProdotto.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null){
       String key2 = ((Articolo)iProdotto.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iProdotto.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     }
     if(iLottoProdotto.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null){
       String key3 = ((Lotto)iLottoProdotto.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     }
     if(iProdottoConfig.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(11 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaVrsUmPrm12(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmPrm12= qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaVrsUmPrm.put(new Integer((11 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaVrsUmPrmInternal(qtaPrlUmPrm, 11);
     setDirty();
   }

   public BigDecimal getQtaVrsUmPrm12() {
     //Fix 18536 Inizio
     //return iQtaVrsUmPrm12;
     return (BigDecimal)iQtaVrsUmPrm.get(new Integer(11 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaVrsUmSec12(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmSec12= qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaVrsUmSec.put(new Integer((11 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaVrsUmSecInternal(qtaPrlUmSec, 11);
     setDirty();
   }

   public BigDecimal getQtaVrsUmSec12() {
     //Fix 18536 Inizio
     //return iQtaVrsUmSec12;
     return (BigDecimal)iQtaVrsUmSec.get(new Integer(11 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmPrm12(BigDecimal qtaScartoUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmPrm12= qtaScartoUmPrm;
     /*if(qtaScartoUmPrm != null)
       iQtaScartoUmPrm.put(new Integer((11 + (iCurrentNumPag - 1) * 20)), qtaScartoUmPrm);*/
     //Fix 18536 Fine
  	 setQtaScartoUmPrmInternal(qtaScartoUmPrm, 11);
     setDirty();
   }

   public BigDecimal getQtaScartoUmPrm12() {
     //Fix 18536 Inizio
     //return iQtaScartoUmPrm12;
     return (BigDecimal)iQtaScartoUmPrm.get(new Integer(11 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmSec12(BigDecimal qtaScartoUmSec) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmSec12= qtaScartoUmSec;
     /*if(qtaScartoUmSec != null)
       iQtaScartoUmSec.put(new Integer((11 + (iCurrentNumPag - 1) * 20)), qtaScartoUmSec);*/
     //Fix 18536 Fine
  	 setQtaScartoUmSecInternal(qtaScartoUmSec, 11);
     setDirty();
   }

   public BigDecimal getQtaScartoUmSec12() {
     //Fix 18536 Inizio
     //return iQtaScartoUmSec12;
     return (BigDecimal)iQtaScartoUmSec.get(new Integer(11 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecPrd12() {
     if (getProdotto12() != null)
       return getProdotto12().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmPrd12() {
     if (getProdotto12() != null)
       return getProdotto12().getIdUMPrmMag();
     return null;
   }

   //Fix 17815 Inizio
   public void setDescrizioneProdotto12(String desc){
     //Fix 18536 Inizio
     //iDescrizioneProdotto12= desc;
     if(desc != null)
       iDescrizioneProdotto.put(new Integer((11 + (iCurrentNumPag - 1) * 20)), desc);
     //Fix 18536 Fine
   }

   public String getDescrizioneProdotto12() {
     //if (getProdotto12() != null) {
     //return getProdotto12().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     //Fix 18536 Inizio
     //return iDescrizioneProdotto12;
     return (String)iDescrizioneProdotto.get(new Integer(11 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 17815 Fine

   //Fix 14722 inizio
   public void setIdAnnoOrdine12(String anno){
     //Fix 18536 Inizio
     //iIdAnnoOrdine12= anno;
     if(anno != null)
       iIdAnnoOrdine.put(new Integer((11 + (iCurrentNumPag - 1) * 20)), anno);
     //Fix 18536 Fine
   }

   public String getIdAnnoOrdine12(){
     //Fix 18536 Inizio
     //return iIdAnnoOrdine12;
     return (String)iIdAnnoOrdine.get(new Integer(11 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdNumeroOrdine12(String numero){
     //Fix 18536 Inizio
     //iIdNumeroOrdine12= numero;
     if(numero != null)
       iIdNumeroOrdine.put(new Integer((11 + (iCurrentNumPag - 1) * 20)), numero);
     //Fix 18536 Fine
   }

   public String getIdNumeroOrdine12(){
     //Fix 18536 Inizio
     //return iIdNumeroOrdine12;
     return (String)iIdNumeroOrdine.get(new Integer(11 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdRigaAttivita12(Integer idRiga){
     //Fix 18536 Inizio
     //iIdRigaAttivita12= idRiga;
     if(idRiga != null)
       iIdRigaAttivita.put(new Integer((11 + (iCurrentNumPag - 1) * 20)), idRiga);
     //Fix 18536 Fine
   }

   public Integer getIdRigaAttivita12(){
     //Fix 18536 Inizio
     //return iIdRigaAttivita12;
     return (Integer)iIdRigaAttivita.get(new Integer(11 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 14722 fine

   /*------ Linea attributi prodotto n°13 -----*/
   public void setMagazzinoVrs13(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //this.iMagazzinoVrs13.setObject(magazzino);//Fix 18536
     //Fix 18536 inizio
     if(magazzino != null)
       iMagazzinoVrs.put(new Integer((12 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoVrs13() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs13.getObject();
     return (Magazzino)iMagazzinoVrs.get(new Integer(12 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoVrs13Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoVrs13.setKey(key);
     if(iMagazzinoVrs.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null)
       ((Magazzino)iMagazzinoVrs.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoVrs13Key() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs13.getObject();
     if(iMagazzinoVrs.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoVrs.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoVrs13(String idMagazzino) {
     //Fix 18536 inizio
     //String key = iMagazzinoVrs13.getKey();
     //iMagazzinoVrs13.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     String key = null;
     if(iMagazzinoVrs.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoVrs.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     }
     setDirty();
     //Fix 18536 fine
   }

   public String getIdMagazzinoVrs13() {
     //Fix 18536 Inizio
     //String key = iMagazzinoVrs13.getKey();
     String key = null;
     if(iMagazzinoVrs.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 2);
   }

   public void setProdotto13(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setProdottoInternal13(idArticolo);
     //Fix 18536 Inizio
     //iProdotto13.setObject(articolo);
     if(articolo != null){
       iProdotto.put(new Integer((12 + (iCurrentNumPag - 1) * 20)), articolo);
       setDirty();
     }
     //Fix 18536 Fine
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getProdotto13() {
     //Fix 18536 Inizio
     //return (Articolo) iProdotto13.getObject();
     return (Articolo)iProdotto.get(new Integer(12 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdotto13Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdotto13.setKey(key);
     if(iProdotto.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null){
       ((Articolo)iProdotto.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal13(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdotto13Key() {
     //Fix 18536 Inizio
     //return iProdotto13.getKey();
     if(iProdotto.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Articolo)iProdotto.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdotto13(String rArticolo) {
     setProdottoInternal13(rArticolo);
     setDirty();
   }

   public String getIdProdotto13() {
     //Fix 18536 Inizio
     //String key = iProdotto13.getKey();
     String key = null;
     if(iProdotto.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Articolo)iProdotto.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setProdottoVersione13(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setProdottoInternal13(rArticolo);
     //Fix 18536 Inizio
     //this.iProdottoVersione13.setObject(articoloVersione);
     if(articoloVersione != null)
       iProdottoVersione.put(new Integer((12 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getProdottoVersione13() {
     //Fix 18536 Inizio
     //return (ArticoloVersione) iProdottoVersione13.getObject();
     return (ArticoloVersione)iProdottoVersione.get(new Integer(12 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoVersione13Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536
     //iProdottoVersione13.setKey(key);
     if(iProdottoVersione.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iProdottoVersione.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal13(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoVersione13Key() {
     //Fix 18536 Inizio
     //return iProdottoVersione13.getKey();
     if(iProdottoVersione.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iProdottoVersione.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoVersione13(Integer versione) {
     //Fix 18536 inizio
     //String key = iProdottoVersione13.getKey();
     //iProdottoVersione13.setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     String key = null;
     if(iProdottoVersione.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoVersione13() {
     //Fix 18536 Inizio
     //String key = iProdottoVersione13.getKey();
     String key = null;
     if(iProdottoVersione.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key, 3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setProdottoConfig13(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //String rArticolo = null;
     //if (configurazione != null) {
     //rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     //}
     //Fix 18536 Inizio
     //this.iProdottoConfig13.setObject(configurazione);
     if(configurazione != null)
       iProdottoConfig.put(new Integer((12 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getProdottoConfig13() {
     //Fix 18536 Inizio
     //return (Configurazione) iProdottoConfig13.getObject();
     return (Configurazione) iProdottoConfig.get(new Integer(12 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoConfig13Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdottoConfig13.setKey(key);
     if(iProdottoConfig.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal13(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoConfig13Key() {
     //Fix 18536 Inizio
     //return iProdottoConfig13.getKey();
     if(iProdottoConfig.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoConfig13(Integer idConfigurazione) {
     //Fix 18536 inizio
     //String key = iProdottoConfig13.getKey();
     //iProdottoConfig13.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     String key = null;
     if(iProdottoConfig.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iProdottoConfig.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoConfig13() {
     //Fix 18536 Inizio
     //String key = iProdottoConfig13.getKey();
     String key = null;
     if(iProdottoConfig.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getKey();
     }
     //Fix 18536 Fine
     return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2));
   }

   public String getPrdIdEsternoConfig13() {
     //Fix 18536 Inizio
     //return iProdottoConfig13.getIdEsternoConfig();
     if(iProdottoConfig.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     return null;
     //Fix 18536 Fine
   }

   public void setPrdIdEsternoConfig13(String idEsternoConfig) {
     //Fix 18536 Inizio
     //iProdottoConfig13.setIdEsternoConfig(idEsternoConfig);
     if(iProdottoConfig.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     //Fix 18536 Fine
   }

   public void setLottoProdotto13(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setProdottoInternal13(rArticolo);
     //Fix 18536 Inizio
     //this.iLottoProdotto13.setObject(lotto);
     if(lotto != null)
       iLottoProdotto.put(new Integer((12 + (iCurrentNumPag - 1) * 20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLottoProdotto13() {
     //Fix 18536 Inizio
     //return (Lotto) iLottoProdotto13.getObject();
     return (Lotto) iLottoProdotto.get(new Integer(12 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLottoProdotto13Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLottoProdotto13.setKey(key);
     if(iLottoProdotto.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoProdotto.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal13(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLottoProdotto13Key() {
     //Fix 18536 Inizio
     //return iLottoProdotto13.getKey();
     if(iLottoProdotto.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoProdotto.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLottoProdotto13(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLottoProdotto13.getKey();
     //iLottoProdotto13.setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     String key = null;
     if(iLottoProdotto.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Lotto)iLottoProdotto.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdLottoProdotto13() {
     //Fix 18536 Inizio
     //String key = iLottoProdotto13.getKey();
     String key = null;
     if(iLottoProdotto.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoProdotto.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setProdottoInternal13(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iProdottoVersione13.getKey();
     //iProdottoVersione13.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     //String key2 = iProdotto13.getKey();
     //iProdotto13.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     //String key3 = iLottoProdotto13.getKey();
     //iLottoProdotto13.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     //iProdottoConfig13.setIdArticolo(rArticolo);
     if(iProdottoVersione.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null){
       String key1 = ((ArticoloVersione)iProdottoVersione.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     }
     if(iProdotto.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null){
       String key2 = ((Articolo)iProdotto.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iProdotto.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     }
     if(iLottoProdotto.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null){
       String key3 = ((Lotto)iLottoProdotto.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     }
     if(iProdottoConfig.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(12 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaVrsUmPrm13(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmPrm13= qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaVrsUmPrm.put(new Integer((12 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaVrsUmPrmInternal(qtaPrlUmPrm, 12);
     setDirty();
   }

   public BigDecimal getQtaVrsUmPrm13() {
     //Fix 18536 Inizio
     //return iQtaVrsUmPrm13;
     return (BigDecimal)iQtaVrsUmPrm.get(new Integer(12 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaVrsUmSec13(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmSec13= qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaVrsUmSec.put(new Integer((12 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaVrsUmSecInternal(qtaPrlUmSec, 12);
     setDirty();
   }

   public BigDecimal getQtaVrsUmSec13() {
     //Fix 18536 Inizio
     //return iQtaVrsUmSec13;
     return (BigDecimal)iQtaVrsUmSec.get(new Integer(12 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmPrm13(BigDecimal qtaScartoUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmPrm13= qtaScartoUmPrm;
     /*if(qtaScartoUmPrm != null)
       iQtaScartoUmPrm.put(new Integer((12 + (iCurrentNumPag - 1) * 20)), qtaScartoUmPrm);*/
     //Fix 18536 Fine
  	 setQtaScartoUmPrmInternal(qtaScartoUmPrm, 12);
     setDirty();
   }

   public BigDecimal getQtaScartoUmPrm13() {
     //Fix 18536 Inizio
     //return iQtaScartoUmPrm13;
     return (BigDecimal)iQtaScartoUmPrm.get(new Integer(12 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmSec13(BigDecimal qtaScartoUmSec) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmSec13= qtaScartoUmSec;
     /*if(qtaScartoUmSec != null)
       iQtaScartoUmSec.put(new Integer((12 + (iCurrentNumPag - 1) * 20)), qtaScartoUmSec);*/
     //Fix 18536 Fine
  	 setQtaScartoUmSecInternal(qtaScartoUmSec, 12);
     setDirty();
   }

   public BigDecimal getQtaScartoUmSec13() {
     //Fix 18536 Inizio
     //return iQtaScartoUmSec13;
     return (BigDecimal)iQtaScartoUmSec.get(new Integer(12 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecPrd13() {
     if (getProdotto13() != null)
       return getProdotto13().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmPrd13() {
     if (getProdotto13() != null)
       return getProdotto13().getIdUMPrmMag();
     return null;
   }

   //Fix 17815 Inizio
   public void setDescrizioneProdotto13(String desc){
     //Fix 18536 Inizio
     //iDescrizioneProdotto13= desc;
     if(desc != null)
       iDescrizioneProdotto.put(new Integer((12 + (iCurrentNumPag - 1) * 20)), desc);
     //Fix 18536 Fine
   }

   public String getDescrizioneProdotto13() {
     //if (getProdotto13() != null) {
     //return getProdotto13().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     //Fix 18536 Inizio
     //return iDescrizioneProdotto13;
     return (String)iDescrizioneProdotto.get(new Integer(12 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 17815 Fine

   //Fix 14722 inizio
   public void setIdAnnoOrdine13(String anno){
     //Fix 18536 Inizio
     //iIdAnnoOrdine13= anno;
     if(anno != null)
       iIdAnnoOrdine.put(new Integer((12 + (iCurrentNumPag - 1) * 20)), anno);
     //Fix 18536 Fine
   }

   public String getIdAnnoOrdine13(){
     //Fix 18536 Inizio
     //return iIdAnnoOrdine13;
     return (String)iIdAnnoOrdine.get(new Integer(12 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdNumeroOrdine13(String numero){
     //Fix 18536 Inizio
     //iIdNumeroOrdine13= numero;
     if(numero != null)
       iIdNumeroOrdine.put(new Integer((12 + (iCurrentNumPag - 1) * 20)), numero);
     //Fix 18536 Fine
   }

   public String getIdNumeroOrdine13(){
     //Fix 18536 Inizio
     //return iIdNumeroOrdine13;
     return (String)iIdNumeroOrdine.get(new Integer(12 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdRigaAttivita13(Integer idRiga){
     //Fix 18536 Inizio
     //iIdRigaAttivita13= idRiga;
     if(idRiga != null)
       iIdRigaAttivita.put(new Integer((12 + (iCurrentNumPag - 1) * 20)), idRiga);
     //Fix 18536 Fine
   }

   public Integer getIdRigaAttivita13(){
     //Fix 18536 Inizio
     //return iIdRigaAttivita13;
     return (Integer)iIdRigaAttivita.get(new Integer(12 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 14722 fine

   /*------ Linea attributi prodotto n°14 -----*/
   public void setMagazzinoVrs14(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //this.iMagazzinoVrs14.setObject(magazzino);//Fix 18536
     //Fix 18536 inizio
     if(magazzino != null)
       iMagazzinoVrs.put(new Integer((13 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoVrs14() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs14.getObject();
     return (Magazzino)iMagazzinoVrs.get(new Integer(13 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoVrs14Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoVrs14.setKey(key);
     if(iMagazzinoVrs.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null)
       ((Magazzino)iMagazzinoVrs.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoVrs14Key() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs14.getObject();
     if(iMagazzinoVrs.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoVrs.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoVrs14(String idMagazzino) {
     //Fix 18536 inizio
     //String key = iMagazzinoVrs14.getKey();
     //iMagazzinoVrs14.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     String key = null;
     if(iMagazzinoVrs.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoVrs.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     }
     setDirty();
     //Fix 18536 fine
   }

   public String getIdMagazzinoVrs14() {
     //Fix 18536 Inizio
     //String key = iMagazzinoVrs14.getKey();
     String key = null;
     if(iMagazzinoVrs.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 2);
   }

   public void setProdotto14(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setProdottoInternal14(idArticolo);
     //Fix 18536 Inizio
     //iProdotto14.setObject(articolo);
     if(articolo != null){
       iProdotto.put(new Integer((13 + (iCurrentNumPag - 1) * 20)), articolo);
       setDirty();
     }
     //Fix 18536 Fine
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getProdotto14() {
     //Fix 18536 Inizio
     //return (Articolo) iProdotto14.getObject();
     return (Articolo)iProdotto.get(new Integer(13 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdotto14Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdotto14.setKey(key);
     if(iProdotto.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null){
       ((Articolo)iProdotto.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal14(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdotto14Key() {
     //Fix 18536 Inizio
     //return iProdotto14.getKey();
     if(iProdotto.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Articolo)iProdotto.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdotto14(String rArticolo) {
     setProdottoInternal14(rArticolo);
     setDirty();
   }

   public String getIdProdotto14() {
     //Fix 18536 Inizio
     //String key = iProdotto14.getKey();
     String key = null;
     if(iProdotto.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Articolo)iProdotto.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setProdottoVersione14(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setProdottoInternal14(rArticolo);
     //Fix 18536 Inizio
     //this.iProdottoVersione14.setObject(articoloVersione);
     if(articoloVersione != null)
       iProdottoVersione.put(new Integer((13 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getProdottoVersione14() {
     //Fix 18536 Inizio
     //return (ArticoloVersione) iProdottoVersione14.getObject();
     return (ArticoloVersione)iProdottoVersione.get(new Integer(13 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoVersione14Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536
     //iProdottoVersione14.setKey(key);
     if(iProdottoVersione.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iProdottoVersione.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal14(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoVersione14Key() {
     //Fix 18536 Inizio
     //return iProdottoVersione14.getKey();
     if(iProdottoVersione.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iProdottoVersione.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoVersione14(Integer versione) {
     //Fix 18536 inizio
     //String key = iProdottoVersione14.getKey();
     //iProdottoVersione14.setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     String key = null;
     if(iProdottoVersione.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoVersione14() {
     //Fix 18536 Inizio
     //String key = iProdottoVersione14.getKey();
     String key = null;
     if(iProdottoVersione.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key, 3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setProdottoConfig14(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //String rArticolo = null;
     //if (configurazione != null) {
     //rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     //}
     //Fix 18536 Inizio
     //this.iProdottoConfig14.setObject(configurazione);
     if(configurazione != null)
       iProdottoConfig.put(new Integer((13 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getProdottoConfig14() {
     //Fix 18536 Inizio
     //return (Configurazione) iProdottoConfig14.getObject();
     return (Configurazione) iProdottoConfig.get(new Integer(13 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoConfig14Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdottoConfig14.setKey(key);
     if(iProdottoConfig.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal14(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoConfig14Key() {
     //Fix 18536 Inizio
     //return iProdottoConfig14.getKey();
     if(iProdottoConfig.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoConfig14(Integer idConfigurazione) {
     //Fix 18536 inizio
     //String key = iProdottoConfig14.getKey();
     //iProdottoConfig14.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     String key = null;
     if(iProdottoConfig.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iProdottoConfig.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoConfig14() {
     //Fix 18536 Inizio
     //String key = iProdottoConfig14.getKey();
     String key = null;
     if(iProdottoConfig.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getKey();
     }
     //Fix 18536 Fine
     return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2));
   }

   public String getPrdIdEsternoConfig14() {
     //Fix 18536 Inizio
     //return iProdottoConfig14.getIdEsternoConfig();
     if(iProdottoConfig.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     return null;
     //Fix 18536 Fine
   }

   public void setPrdIdEsternoConfig14(String idEsternoConfig) {
     //Fix 18536 Inizio
     //iProdottoConfig14.setIdEsternoConfig(idEsternoConfig);
     if(iProdottoConfig.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     //Fix 18536 Fine
   }

   public void setLottoProdotto14(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setProdottoInternal14(rArticolo);
     //Fix 18536 Inizio
     //this.iLottoProdotto14.setObject(lotto);
     if(lotto != null)
       iLottoProdotto.put(new Integer((13 + (iCurrentNumPag - 1) * 20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLottoProdotto14() {
     //Fix 18536 Inizio
     //return (Lotto) iLottoProdotto14.getObject();
     return (Lotto) iLottoProdotto.get(new Integer(13 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLottoProdotto14Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLottoProdotto14.setKey(key);
     if(iLottoProdotto.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoProdotto.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal14(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLottoProdotto14Key() {
     //Fix 18536 Inizio
     //return iLottoProdotto14.getKey();
     if(iLottoProdotto.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoProdotto.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLottoProdotto14(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLottoProdotto14.getKey();
     //iLottoProdotto14.setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     String key = null;
     if(iLottoProdotto.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Lotto)iLottoProdotto.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdLottoProdotto14() {
     //Fix 18536 Inizio
     //String key = iLottoProdotto14.getKey();
     String key = null;
     if(iLottoProdotto.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoProdotto.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setProdottoInternal14(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iProdottoVersione14.getKey();
     //iProdottoVersione14.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     //String key2 = iProdotto14.getKey();
     //iProdotto14.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     //String key3 = iLottoProdotto14.getKey();
     //iLottoProdotto14.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     //iProdottoConfig14.setIdArticolo(rArticolo);
     if(iProdottoVersione.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null){
       String key1 = ((ArticoloVersione)iProdottoVersione.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     }
     if(iProdotto.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null){
       String key2 = ((Articolo)iProdotto.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iProdotto.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     }
     if(iLottoProdotto.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null){
       String key3 = ((Lotto)iLottoProdotto.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     }
     if(iProdottoConfig.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(13 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaVrsUmPrm14(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmPrm14= qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaVrsUmPrm.put(new Integer((13 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaVrsUmPrmInternal(qtaPrlUmPrm, 13);
     setDirty();
   }

   public BigDecimal getQtaVrsUmPrm14() {
     //Fix 18536 Inizio
     //return iQtaVrsUmPrm14;
     return (BigDecimal)iQtaVrsUmPrm.get(new Integer(13 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaVrsUmSec14(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmSec14= qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaVrsUmSec.put(new Integer((13 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaVrsUmSecInternal(qtaPrlUmSec, 13);
     setDirty();
   }

   public BigDecimal getQtaVrsUmSec14() {
     //Fix 18536 Inizio
     //return iQtaVrsUmSec14;
     return (BigDecimal)iQtaVrsUmSec.get(new Integer(13 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmPrm14(BigDecimal qtaScartoUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmPrm14= qtaScartoUmPrm;
     /*if(qtaScartoUmPrm != null)
       iQtaScartoUmPrm.put(new Integer((13 + (iCurrentNumPag - 1) * 20)), qtaScartoUmPrm);*/
     //Fix 18536 Fine
  	 setQtaScartoUmPrmInternal(qtaScartoUmPrm, 13);
     setDirty();
   }

   public BigDecimal getQtaScartoUmPrm14() {
     //Fix 18536 Inizio
     //return iQtaScartoUmPrm14;
     return (BigDecimal)iQtaScartoUmPrm.get(new Integer(13 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmSec14(BigDecimal qtaScartoUmSec) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmSec14= qtaScartoUmSec;
     /*if(qtaScartoUmSec != null)
       iQtaScartoUmSec.put(new Integer((13 + (iCurrentNumPag - 1) * 20)), qtaScartoUmSec);*/
     //Fix 18536 Fine
  	 setQtaScartoUmSecInternal(qtaScartoUmSec, 13);
     setDirty();
   }

   public BigDecimal getQtaScartoUmSec14() {
     //Fix 18536 Inizio
     //return iQtaScartoUmSec14;
     return (BigDecimal)iQtaScartoUmSec.get(new Integer(13 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecPrd14() {
     if (getProdotto14() != null)
       return getProdotto14().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmPrd14() {
     if (getProdotto14() != null)
       return getProdotto14().getIdUMPrmMag();
     return null;
   }

   //Fix 17815 Inizio
   public void setDescrizioneProdotto14(String desc){
     //Fix 18536 Inizio
     //iDescrizioneProdotto14= desc;
     if(desc != null)
       iDescrizioneProdotto.put(new Integer((13 + (iCurrentNumPag - 1) * 20)), desc);
     //Fix 18536 Fine
   }

   public String getDescrizioneProdotto14() {
     //if (getProdotto14() != null) {
     //return getProdotto14().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     //Fix 18536 Inizio
     //return iDescrizioneProdotto14;
     return (String)iDescrizioneProdotto.get(new Integer(13 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 17815 Fine

   //Fix 14722 inizio
   public void setIdAnnoOrdine14(String anno){
     //Fix 18536 Inizio
     //iIdAnnoOrdine14= anno;
     if(anno != null)
       iIdAnnoOrdine.put(new Integer((13 + (iCurrentNumPag - 1) * 20)), anno);
     //Fix 18536 Fine
   }

   public String getIdAnnoOrdine14(){
     //Fix 18536 Inizio
     //return iIdAnnoOrdine14;
     return (String)iIdAnnoOrdine.get(new Integer(13 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdNumeroOrdine14(String numero){
     //Fix 18536 Inizio
     //iIdNumeroOrdine14= numero;
     if(numero != null)
       iIdNumeroOrdine.put(new Integer((13 + (iCurrentNumPag - 1) * 20)), numero);
     //Fix 18536 Fine
   }

   public String getIdNumeroOrdine14(){
     //Fix 18536 Inizio
     //return iIdNumeroOrdine14;
     return (String)iIdNumeroOrdine.get(new Integer(13 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdRigaAttivita14(Integer idRiga){
     //Fix 18536 Inizio
     //iIdRigaAttivita14= idRiga;
     if(idRiga != null)
       iIdRigaAttivita.put(new Integer((13 + (iCurrentNumPag - 1) * 20)), idRiga);
     //Fix 18536 Fine
   }

   public Integer getIdRigaAttivita14(){
     //Fix 18536 Inizio
     //return iIdRigaAttivita14;
     return (Integer)iIdRigaAttivita.get(new Integer(13 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 14722 fine

   /*------ Linea attributi prodotto n°15 -----*/
   public void setMagazzinoVrs15(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //this.iMagazzinoVrs15.setObject(magazzino);//Fix 18536
     //Fix 18536 inizio
     if(magazzino != null)
       iMagazzinoVrs.put(new Integer((14 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoVrs15() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs15.getObject();
     return (Magazzino)iMagazzinoVrs.get(new Integer(14 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoVrs15Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoVrs15.setKey(key);
     if(iMagazzinoVrs.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null)
       ((Magazzino)iMagazzinoVrs.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoVrs15Key() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs15.getObject();
     if(iMagazzinoVrs.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoVrs.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoVrs15(String idMagazzino) {
     //Fix 18536 inizio
     //String key = iMagazzinoVrs15.getKey();
     //iMagazzinoVrs15.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     String key = null;
     if(iMagazzinoVrs.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoVrs.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     }
     setDirty();
     //Fix 18536 fine
   }

   public String getIdMagazzinoVrs15() {
     //Fix 18536 Inizio
     //String key = iMagazzinoVrs15.getKey();
     String key = null;
     if(iMagazzinoVrs.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 2);
   }

   public void setProdotto15(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setProdottoInternal15(idArticolo);
     //Fix 18536 Inizio
     //iProdotto15.setObject(articolo);
     if(articolo != null){
       iProdotto.put(new Integer((14 + (iCurrentNumPag - 1) * 20)), articolo);
       setDirty();
     }
     //Fix 18536 Fine
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getProdotto15() {
     //Fix 18536 Inizio
     //return (Articolo) iProdotto15.getObject();
     return (Articolo)iProdotto.get(new Integer(14 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdotto15Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdotto15.setKey(key);
     if(iProdotto.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null){
       ((Articolo)iProdotto.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal15(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdotto15Key() {
     //Fix 18536 Inizio
     //return iProdotto15.getKey();
     if(iProdotto.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Articolo)iProdotto.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdotto15(String rArticolo) {
     setProdottoInternal15(rArticolo);
     setDirty();
   }

   public String getIdProdotto15() {
     //Fix 18536 Inizio
     //String key = iProdotto15.getKey();
     String key = null;
     if(iProdotto.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Articolo)iProdotto.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setProdottoVersione15(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setProdottoInternal15(rArticolo);
     //Fix 18536 Inizio
     //this.iProdottoVersione15.setObject(articoloVersione);
     if(articoloVersione != null)
       iProdottoVersione.put(new Integer((14 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getProdottoVersione15() {
     //Fix 18536 Inizio
     //return (ArticoloVersione) iProdottoVersione15.getObject();
     return (ArticoloVersione)iProdottoVersione.get(new Integer(14 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoVersione15Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536
     //iProdottoVersione15.setKey(key);
     if(iProdottoVersione.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iProdottoVersione.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal15(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoVersione15Key() {
     //Fix 18536 Inizio
     //return iProdottoVersione15.getKey();
     if(iProdottoVersione.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iProdottoVersione.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoVersione15(Integer versione) {
     //Fix 18536 inizio
     //String key = iProdottoVersione15.getKey();
     //iProdottoVersione15.setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     String key = null;
     if(iProdottoVersione.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoVersione15() {
     //Fix 18536 Inizio
     //String key = iProdottoVersione15.getKey();
     String key = null;
     if(iProdottoVersione.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key, 3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setProdottoConfig15(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //String rArticolo = null;
     //if (configurazione != null) {
     //rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     //}
     //Fix 18536 Inizio
     //this.iProdottoConfig15.setObject(configurazione);
     if(configurazione != null)
       iProdottoConfig.put(new Integer((14 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getProdottoConfig15() {
     //Fix 18536 Inizio
     //return (Configurazione) iProdottoConfig15.getObject();
     return (Configurazione) iProdottoConfig.get(new Integer(14 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoConfig15Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdottoConfig15.setKey(key);
     if(iProdottoConfig.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal15(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoConfig15Key() {
     //Fix 18536 Inizio
     //return iProdottoConfig15.getKey();
     if(iProdottoConfig.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoConfig15(Integer idConfigurazione) {
     //Fix 18536 inizio
     //String key = iProdottoConfig15.getKey();
     //iProdottoConfig15.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     String key = null;
     if(iProdottoConfig.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iProdottoConfig.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoConfig15() {
     //Fix 18536 Inizio
     //String key = iProdottoConfig15.getKey();
     String key = null;
     if(iProdottoConfig.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getKey();
     }
     //Fix 18536 Fine
     return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2));
   }

   public String getPrdIdEsternoConfig15() {
     //Fix 18536 Inizio
     //return iProdottoConfig15.getIdEsternoConfig();
     if(iProdottoConfig.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     return null;
     //Fix 18536 Fine
   }

   public void setPrdIdEsternoConfig15(String idEsternoConfig) {
     //Fix 18536 Inizio
     //iProdottoConfig15.setIdEsternoConfig(idEsternoConfig);
     if(iProdottoConfig.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     //Fix 18536 Fine
   }

   public void setLottoProdotto15(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setProdottoInternal15(rArticolo);
     //Fix 18536 Inizio
     //this.iLottoProdotto15.setObject(lotto);
     if(lotto != null)
       iLottoProdotto.put(new Integer((14 + (iCurrentNumPag - 1) * 20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLottoProdotto15() {
     //Fix 18536 Inizio
     //return (Lotto) iLottoProdotto15.getObject();
     return (Lotto) iLottoProdotto.get(new Integer(14 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLottoProdotto15Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLottoProdotto15.setKey(key);
     if(iLottoProdotto.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoProdotto.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal15(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLottoProdotto15Key() {
     //Fix 18536 Inizio
     //return iLottoProdotto15.getKey();
     if(iLottoProdotto.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoProdotto.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLottoProdotto15(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLottoProdotto15.getKey();
     //iLottoProdotto15.setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     String key = null;
     if(iLottoProdotto.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Lotto)iLottoProdotto.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdLottoProdotto15() {
     //Fix 18536 Inizio
     //String key = iLottoProdotto15.getKey();
     String key = null;
     if(iLottoProdotto.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoProdotto.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setProdottoInternal15(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iProdottoVersione15.getKey();
     //iProdottoVersione15.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     //String key2 = iProdotto15.getKey();
     //iProdotto15.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     //String key3 = iLottoProdotto15.getKey();
     //iLottoProdotto15.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     //iProdottoConfig15.setIdArticolo(rArticolo);
     if(iProdottoVersione.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null){
       String key1 = ((ArticoloVersione)iProdottoVersione.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     }
     if(iProdotto.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null){
       String key2 = ((Articolo)iProdotto.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iProdotto.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     }
     if(iLottoProdotto.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null){
       String key3 = ((Lotto)iLottoProdotto.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     }
     if(iProdottoConfig.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(14 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaVrsUmPrm15(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmPrm15= qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaVrsUmPrm.put(new Integer((14 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaVrsUmPrmInternal(qtaPrlUmPrm, 14);
     setDirty();
   }

   public BigDecimal getQtaVrsUmPrm15() {
     //Fix 18536 Inizio
     //return iQtaVrsUmPrm15;
     return (BigDecimal)iQtaVrsUmPrm.get(new Integer(14 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaVrsUmSec15(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmSec15= qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaVrsUmSec.put(new Integer((14 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaVrsUmSecInternal(qtaPrlUmSec, 14);
     setDirty();
   }

   public BigDecimal getQtaVrsUmSec15() {
     //Fix 18536 Inizio
     //return iQtaVrsUmSec15;
     return (BigDecimal)iQtaVrsUmSec.get(new Integer(14 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmPrm15(BigDecimal qtaScartoUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmPrm15= qtaScartoUmPrm;
     /*if(qtaScartoUmPrm != null)
       iQtaScartoUmPrm.put(new Integer((14 + (iCurrentNumPag - 1) * 20)), qtaScartoUmPrm);*/
     //Fix 18536 Fine
  	 setQtaScartoUmPrmInternal(qtaScartoUmPrm, 14);
     setDirty();
   }

   public BigDecimal getQtaScartoUmPrm15() {
     //Fix 18536 Inizio
     //return iQtaScartoUmPrm15;
     return (BigDecimal)iQtaScartoUmPrm.get(new Integer(14 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmSec15(BigDecimal qtaScartoUmSec) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmSec15= qtaScartoUmSec;
    /*if(qtaScartoUmSec != null)
       iQtaScartoUmSec.put(new Integer((14 + (iCurrentNumPag - 1) * 20)), qtaScartoUmSec);*/
     //Fix 18536 Fine
  	 setQtaScartoUmSecInternal(qtaScartoUmSec, 14);
     setDirty();
   }

   public BigDecimal getQtaScartoUmSec15() {
     //Fix 18536 Inizio
     //return iQtaScartoUmSec15;
     return (BigDecimal)iQtaScartoUmSec.get(new Integer(14 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecPrd15() {
     if (getProdotto15() != null)
       return getProdotto15().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmPrd15() {
     if (getProdotto15() != null)
       return getProdotto15().getIdUMPrmMag();
     return null;
   }

   //Fix 17815 Inizio
   public void setDescrizioneProdotto15(String desc){
     //Fix 18536 Inizio
     //iDescrizioneProdotto15= desc;
     if(desc != null)
       iDescrizioneProdotto.put(new Integer((14 + (iCurrentNumPag - 1) * 20)), desc);
     //Fix 18536 Fine
   }

   public String getDescrizioneProdotto15() {
     //if (getProdotto15() != null) {
     //return getProdotto15().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     //Fix 18536 Inizio
     //return iDescrizioneProdotto15;
     return (String)iDescrizioneProdotto.get(new Integer(14 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 17815 Fine

   //Fix 14722 inizio
   public void setIdAnnoOrdine15(String anno){
     //Fix 18536 Inizio
     //iIdAnnoOrdine15= anno;
     if(anno != null)
       iIdAnnoOrdine.put(new Integer((14 + (iCurrentNumPag - 1) * 20)), anno);
     //Fix 18536 Fine
   }

   public String getIdAnnoOrdine15(){
     //Fix 18536 Inizio
     //return iIdAnnoOrdine15;
     return (String)iIdAnnoOrdine.get(new Integer(14 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdNumeroOrdine15(String numero){
     //Fix 18536 Inizio
     //iIdNumeroOrdine15= numero;
     if(numero != null)
       iIdNumeroOrdine.put(new Integer((14 + (iCurrentNumPag - 1) * 20)), numero);
     //Fix 18536 Fine
   }

   public String getIdNumeroOrdine15(){
     //Fix 18536 Inizio
     //return iIdNumeroOrdine15;
     return (String)iIdNumeroOrdine.get(new Integer(14 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdRigaAttivita15(Integer idRiga){
     //Fix 18536 Inizio
     //iIdRigaAttivita15= idRiga;
     if(idRiga != null)
       iIdRigaAttivita.put(new Integer((14 + (iCurrentNumPag - 1) * 20)), idRiga);
     //Fix 18536 Fine
   }

   public Integer getIdRigaAttivita15(){
     //Fix 18536 Inizio
     //return iIdRigaAttivita15;
     return (Integer)iIdRigaAttivita.get(new Integer(14 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 14722 fine

   /*------ Linea attributi prodotto n°16 -----*/
   public void setMagazzinoVrs16(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //this.iMagazzinoVrs16.setObject(magazzino);//Fix 18536
     //Fix 18536 inizio
     if(magazzino != null)
       iMagazzinoVrs.put(new Integer((15 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoVrs16() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs16.getObject();
     return (Magazzino)iMagazzinoVrs.get(new Integer(15 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoVrs16Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoVrs16.setKey(key);
     if(iMagazzinoVrs.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null)
       ((Magazzino)iMagazzinoVrs.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoVrs16Key() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs16.getObject();
     if(iMagazzinoVrs.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoVrs.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoVrs16(String idMagazzino) {
     //Fix 18536 inizio
     //String key = iMagazzinoVrs16.getKey();
     //iMagazzinoVrs16.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     String key = null;
     if(iMagazzinoVrs.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoVrs.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     }
     setDirty();
     //Fix 18536 fine
   }

   public String getIdMagazzinoVrs16() {
     //Fix 18536 Inizio
     //String key = iMagazzinoVrs16.getKey();
     String key = null;
     if(iMagazzinoVrs.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 2);
   }

   public void setProdotto16(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setProdottoInternal16(idArticolo);
     //Fix 18536 Inizio
     //iProdotto16.setObject(articolo);
     if(articolo != null){
       iProdotto.put(new Integer((15 + (iCurrentNumPag - 1) * 20)), articolo);
       setDirty();
     }
     //Fix 18536 Fine
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getProdotto16() {
     //Fix 18536 Inizio
     //return (Articolo) iProdotto16.getObject();
     return (Articolo)iProdotto.get(new Integer(15 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdotto16Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdotto16.setKey(key);
     if(iProdotto.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null){
       ((Articolo)iProdotto.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal16(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdotto16Key() {
     //Fix 18536 Inizio
     //return iProdotto16.getKey();
     if(iProdotto.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Articolo)iProdotto.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdotto16(String rArticolo) {
     setProdottoInternal16(rArticolo);
     setDirty();
   }

   public String getIdProdotto16() {
     //Fix 18536 Inizio
     //String key = iProdotto16.getKey();
     String key = null;
     if(iProdotto.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Articolo)iProdotto.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setProdottoVersione16(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setProdottoInternal16(rArticolo);
     //Fix 18536 Inizio
     //this.iProdottoVersione16.setObject(articoloVersione);
     if(articoloVersione != null)
       iProdottoVersione.put(new Integer((15 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getProdottoVersione16() {
     //Fix 18536 Inizio
     //return (ArticoloVersione) iProdottoVersione16.getObject();
     return (ArticoloVersione)iProdottoVersione.get(new Integer(15 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoVersione16Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536
     //iProdottoVersione16.setKey(key);
     if(iProdottoVersione.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iProdottoVersione.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal16(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoVersione16Key() {
     //Fix 18536 Inizio
     //return iProdottoVersione16.getKey();
     if(iProdottoVersione.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iProdottoVersione.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoVersione16(Integer versione) {
     //Fix 18536 inizio
     //String key = iProdottoVersione16.getKey();
     //iProdottoVersione16.setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     String key = null;
     if(iProdottoVersione.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoVersione16() {
     //Fix 18536 Inizio
     //String key = iProdottoVersione16.getKey();
     String key = null;
     if(iProdottoVersione.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key, 3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setProdottoConfig16(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //String rArticolo = null;
     //if (configurazione != null) {
     //rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     //}
     //Fix 18536 Inizio
     //this.iProdottoConfig16.setObject(configurazione);
     if(configurazione != null)
       iProdottoConfig.put(new Integer((15 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getProdottoConfig16() {
     //Fix 18536 Inizio
     //return (Configurazione) iProdottoConfig16.getObject();
     return (Configurazione) iProdottoConfig.get(new Integer(15 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoConfig16Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdottoConfig16.setKey(key);
     if(iProdottoConfig.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal16(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoConfig16Key() {
     //Fix 18536 Inizio
     //return iProdottoConfig16.getKey();
     if(iProdottoConfig.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoConfig16(Integer idConfigurazione) {
     //Fix 18536 inizio
     //String key = iProdottoConfig16.getKey();
     //iProdottoConfig16.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     String key = null;
     if(iProdottoConfig.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iProdottoConfig.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoConfig16() {
     //Fix 18536 Inizio
     //String key = iProdottoConfig16.getKey();
     String key = null;
     if(iProdottoConfig.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getKey();
     }
     //Fix 18536 Fine
     return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2));
   }

   public String getPrdIdEsternoConfig16() {
     //Fix 18536 Inizio
     //return iProdottoConfig16.getIdEsternoConfig();
     if(iProdottoConfig.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     return null;
     //Fix 18536 Fine
   }

   public void setPrdIdEsternoConfig16(String idEsternoConfig) {
     //Fix 18536 Inizio
     //iProdottoConfig16.setIdEsternoConfig(idEsternoConfig);
     if(iProdottoConfig.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     //Fix 18536 Fine
   }

   public void setLottoProdotto16(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setProdottoInternal16(rArticolo);
     //Fix 18536 Inizio
     //this.iLottoProdotto16.setObject(lotto);
     if(lotto != null)
       iLottoProdotto.put(new Integer((15 + (iCurrentNumPag - 1) * 20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLottoProdotto16() {
     //Fix 18536 Inizio
     //return (Lotto) iLottoProdotto16.getObject();
     return (Lotto) iLottoProdotto.get(new Integer(15 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLottoProdotto16Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLottoProdotto16.setKey(key);
     if(iLottoProdotto.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoProdotto.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal16(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLottoProdotto16Key() {
     //Fix 18536 Inizio
     //return iLottoProdotto16.getKey();
     if(iLottoProdotto.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoProdotto.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLottoProdotto16(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLottoProdotto16.getKey();
     //iLottoProdotto16.setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     String key = null;
     if(iLottoProdotto.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Lotto)iLottoProdotto.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdLottoProdotto16() {
     //Fix 18536 Inizio
     //String key = iLottoProdotto16.getKey();
     String key = null;
     if(iLottoProdotto.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoProdotto.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setProdottoInternal16(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iProdottoVersione16.getKey();
     //iProdottoVersione16.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     //String key2 = iProdotto16.getKey();
     //iProdotto16.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     //String key3 = iLottoProdotto16.getKey();
     //iLottoProdotto16.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     //iProdottoConfig16.setIdArticolo(rArticolo);
     if(iProdottoVersione.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null){
       String key1 = ((ArticoloVersione)iProdottoVersione.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     }
     if(iProdotto.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null){
       String key2 = ((Articolo)iProdotto.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iProdotto.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     }
     if(iLottoProdotto.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null){
       String key3 = ((Lotto)iLottoProdotto.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     }
     if(iProdottoConfig.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(15 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaVrsUmPrm16(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmPrm16= qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaVrsUmPrm.put(new Integer((15 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaVrsUmPrmInternal(qtaPrlUmPrm, 15);
     setDirty();
   }

   public BigDecimal getQtaVrsUmPrm16() {
     //Fix 18536 Inizio
     //return iQtaVrsUmPrm16;
     return (BigDecimal)iQtaVrsUmPrm.get(new Integer(15 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaVrsUmSec16(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmSec16= qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaVrsUmSec.put(new Integer((15 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaVrsUmSecInternal(qtaPrlUmSec, 15);
     setDirty();
   }

   public BigDecimal getQtaVrsUmSec16() {
     //Fix 18536 Inizio
     //return iQtaVrsUmSec16;
     return (BigDecimal)iQtaVrsUmSec.get(new Integer(15 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmPrm16(BigDecimal qtaScartoUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmPrm16= qtaScartoUmPrm;
     /*if(qtaScartoUmPrm != null)
       iQtaScartoUmPrm.put(new Integer((15 + (iCurrentNumPag - 1) * 20)), qtaScartoUmPrm);*/
     //Fix 18536 Fine
  	 setQtaScartoUmPrmInternal(qtaScartoUmPrm, 15);
     setDirty();
   }

   public BigDecimal getQtaScartoUmPrm16() {
     //Fix 18536 Inizio
     //return iQtaScartoUmPrm16;
     return (BigDecimal)iQtaScartoUmPrm.get(new Integer(15 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmSec16(BigDecimal qtaScartoUmSec) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmSec16= qtaScartoUmSec;
     /*if(qtaScartoUmSec != null)
       iQtaScartoUmSec.put(new Integer((15 + (iCurrentNumPag - 1) * 20)), qtaScartoUmSec);*/
     //Fix 18536 Fine
  	 setQtaScartoUmSecInternal(qtaScartoUmSec, 15);
     setDirty();
   }

   public BigDecimal getQtaScartoUmSec16() {
     //Fix 18536 Inizio
     //return iQtaScartoUmSec16;
     return (BigDecimal)iQtaScartoUmSec.get(new Integer(15 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecPrd16() {
     if (getProdotto16() != null)
       return getProdotto16().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmPrd16() {
     if (getProdotto16() != null)
       return getProdotto16().getIdUMPrmMag();
     return null;
   }

   //Fix 17815 Inizio
   public void setDescrizioneProdotto16(String desc){
     //Fix 18536 Inizio
     //iDescrizioneProdotto16= desc;
     if(desc != null)
       iDescrizioneProdotto.put(new Integer((15 + (iCurrentNumPag - 1) * 20)), desc);
     //Fix 18536 Fine
   }

   public String getDescrizioneProdotto16() {
     //if (getProdotto16() != null) {
     //return getProdotto16().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     //Fix 18536 Inizio
     //return iDescrizioneProdotto16;
     return (String)iDescrizioneProdotto.get(new Integer(15 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 17815 Fine

   //Fix 14722 inizio
   public void setIdAnnoOrdine16(String anno){
     //Fix 18536 Inizio
     //iIdAnnoOrdine16= anno;
     if(anno != null)
       iIdAnnoOrdine.put(new Integer((15 + (iCurrentNumPag - 1) * 20)), anno);
     //Fix 18536 Fine
   }

   public String getIdAnnoOrdine16(){
     //Fix 18536 Inizio
     //return iIdAnnoOrdine16;
     return (String)iIdAnnoOrdine.get(new Integer(15 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdNumeroOrdine16(String numero){
     //Fix 18536 Inizio
     //iIdNumeroOrdine16= numero;
     if(numero != null)
       iIdNumeroOrdine.put(new Integer((15 + (iCurrentNumPag - 1) * 20)), numero);
     //Fix 18536 Fine
   }

   public String getIdNumeroOrdine16(){
     //Fix 18536 Inizio
     //return iIdNumeroOrdine16;
     return (String)iIdNumeroOrdine.get(new Integer(15 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdRigaAttivita16(Integer idRiga){
     //Fix 18536 Inizio
     //iIdRigaAttivita16= idRiga;
     if(idRiga != null)
       iIdRigaAttivita.put(new Integer((15 + (iCurrentNumPag - 1) * 20)), idRiga);
     //Fix 18536 Fine
   }

   public Integer getIdRigaAttivita16(){
     //Fix 18536 Inizio
     //return iIdRigaAttivita16;
     return (Integer)iIdRigaAttivita.get(new Integer(15 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 14722 fine

   /*------ Linea attributi prodotto n°17 -----*/
   public void setMagazzinoVrs17(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //this.iMagazzinoVrs17.setObject(magazzino);//Fix 18536
     //Fix 18536 inizio
     if(magazzino != null)
       iMagazzinoVrs.put(new Integer((16 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoVrs17() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs17.getObject();
     return (Magazzino)iMagazzinoVrs.get(new Integer(16 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoVrs17Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoVrs17.setKey(key);
     if(iMagazzinoVrs.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null)
       ((Magazzino)iMagazzinoVrs.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoVrs17Key() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs17.getObject();
     if(iMagazzinoVrs.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoVrs.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoVrs17(String idMagazzino) {
     //Fix 18536 inizio
     //String key = iMagazzinoVrs17.getKey();
     //iMagazzinoVrs17.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     String key = null;
     if(iMagazzinoVrs.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoVrs.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     }
     setDirty();
     //Fix 18536 fine
   }

   public String getIdMagazzinoVrs17() {
     //Fix 18536 Inizio
     //String key = iMagazzinoVrs17.getKey();
     String key = null;
     if(iMagazzinoVrs.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 2);
   }

   public void setProdotto17(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setProdottoInternal17(idArticolo);
     //Fix 18536 Inizio
     //iProdotto17.setObject(articolo);
     if(articolo != null){
       iProdotto.put(new Integer((16 + (iCurrentNumPag - 1) * 20)), articolo);
       setDirty();
     }
     //Fix 18536 Fine
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getProdotto17() {
     //Fix 18536 Inizio
     //return (Articolo) iProdotto17.getObject();
     return (Articolo)iProdotto.get(new Integer(16 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdotto17Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdotto17.setKey(key);
     if(iProdotto.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null){
       ((Articolo)iProdotto.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal17(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdotto17Key() {
     //Fix 18536 Inizio
     //return iProdotto17.getKey();
     if(iProdotto.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Articolo)iProdotto.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdotto17(String rArticolo) {
     setProdottoInternal17(rArticolo);
     setDirty();
   }

   public String getIdProdotto17() {
     //Fix 18536 Inizio
     //String key = iProdotto17.getKey();
     String key = null;
     if(iProdotto.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Articolo)iProdotto.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setProdottoVersione17(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setProdottoInternal17(rArticolo);
     //Fix 18536 Inizio
     //this.iProdottoVersione17.setObject(articoloVersione);
     if(articoloVersione != null)
       iProdottoVersione.put(new Integer((16 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getProdottoVersione17() {
     //Fix 18536 Inizio
     //return (ArticoloVersione) iProdottoVersione17.getObject();
     return (ArticoloVersione)iProdottoVersione.get(new Integer(16 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoVersione17Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536
     //iProdottoVersione17.setKey(key);
     if(iProdottoVersione.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iProdottoVersione.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal17(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoVersione17Key() {
     //Fix 18536 Inizio
     //return iProdottoVersione17.getKey();
     if(iProdottoVersione.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iProdottoVersione.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoVersione17(Integer versione) {
     //Fix 18536 inizio
     //String key = iProdottoVersione17.getKey();
     //iProdottoVersione17.setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     String key = null;
     if(iProdottoVersione.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoVersione17() {
     //Fix 18536 Inizio
     //String key = iProdottoVersione17.getKey();
     String key = null;
     if(iProdottoVersione.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key, 3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setProdottoConfig17(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //String rArticolo = null;
     //if (configurazione != null) {
     //rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     //}
     //Fix 18536 Inizio
     //this.iProdottoConfig17.setObject(configurazione);
     if(configurazione != null)
       iProdottoConfig.put(new Integer((16 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getProdottoConfig17() {
     //Fix 18536 Inizio
     //return (Configurazione) iProdottoConfig17.getObject();
     return (Configurazione) iProdottoConfig.get(new Integer(16 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoConfig17Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdottoConfig17.setKey(key);
     if(iProdottoConfig.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal17(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoConfig17Key() {
     //Fix 18536 Inizio
     //return iProdottoConfig17.getKey();
     if(iProdottoConfig.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoConfig17(Integer idConfigurazione) {
     //Fix 18536 inizio
     //String key = iProdottoConfig17.getKey();
     //iProdottoConfig17.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     String key = null;
     if(iProdottoConfig.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iProdottoConfig.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoConfig17() {
     //Fix 18536 Inizio
     //String key = iProdottoConfig17.getKey();
     String key = null;
     if(iProdottoConfig.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getKey();
     }
     //Fix 18536 Fine
     return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2));
   }

   public String getPrdIdEsternoConfig17() {
     //Fix 18536 Inizio
     //return iProdottoConfig17.getIdEsternoConfig();
     if(iProdottoConfig.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     return null;
     //Fix 18536 Fine
   }

   public void setPrdIdEsternoConfig17(String idEsternoConfig) {
     //Fix 18536 Inizio
     //iProdottoConfig17.setIdEsternoConfig(idEsternoConfig);
     if(iProdottoConfig.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     //Fix 18536 Fine
   }

   public void setLottoProdotto17(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setProdottoInternal17(rArticolo);
     //Fix 18536 Inizio
     //this.iLottoProdotto17.setObject(lotto);
     if(lotto != null)
       iLottoProdotto.put(new Integer((16 + (iCurrentNumPag - 1) * 20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLottoProdotto17() {
     //Fix 18536 Inizio
     //return (Lotto) iLottoProdotto17.getObject();
     return (Lotto) iLottoProdotto.get(new Integer(16 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLottoProdotto17Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLottoProdotto17.setKey(key);
     if(iLottoProdotto.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoProdotto.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal17(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLottoProdotto17Key() {
     //Fix 18536 Inizio
     //return iLottoProdotto17.getKey();
     if(iLottoProdotto.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoProdotto.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLottoProdotto17(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLottoProdotto17.getKey();
     //iLottoProdotto17.setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     String key = null;
     if(iLottoProdotto.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Lotto)iLottoProdotto.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdLottoProdotto17() {
     //Fix 18536 Inizio
     //String key = iLottoProdotto17.getKey();
     String key = null;
     if(iLottoProdotto.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoProdotto.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setProdottoInternal17(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iProdottoVersione17.getKey();
     //iProdottoVersione17.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     //String key2 = iProdotto17.getKey();
     //iProdotto17.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     //String key3 = iLottoProdotto17.getKey();
     //iLottoProdotto17.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     //iProdottoConfig17.setIdArticolo(rArticolo);
     if(iProdottoVersione.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null){
       String key1 = ((ArticoloVersione)iProdottoVersione.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     }
     if(iProdotto.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null){
       String key2 = ((Articolo)iProdotto.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iProdotto.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     }
     if(iLottoProdotto.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null){
       String key3 = ((Lotto)iLottoProdotto.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     }
     if(iProdottoConfig.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(16 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaVrsUmPrm17(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmPrm17= qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaVrsUmPrm.put(new Integer((16 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaVrsUmPrmInternal(qtaPrlUmPrm, 16);
     setDirty();
   }

   public BigDecimal getQtaVrsUmPrm17() {
     //Fix 18536 Inizio
     //return iQtaVrsUmPrm17;
     return (BigDecimal)iQtaVrsUmPrm.get(new Integer(16 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaVrsUmSec17(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmSec17= qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaVrsUmSec.put(new Integer((16 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaVrsUmSecInternal(qtaPrlUmSec, 16);
     setDirty();
   }

   public BigDecimal getQtaVrsUmSec17() {
     //Fix 18536 Inizio
     //return iQtaVrsUmSec17;
     return (BigDecimal)iQtaVrsUmSec.get(new Integer(16 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmPrm17(BigDecimal qtaScartoUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmPrm17= qtaScartoUmPrm;
     /*if(qtaScartoUmPrm != null)
       iQtaScartoUmPrm.put(new Integer((16 + (iCurrentNumPag - 1) * 20)), qtaScartoUmPrm);*/
     //Fix 18536 Fine
  	 setQtaScartoUmPrmInternal(qtaScartoUmPrm, 16);
     setDirty();
   }

   public BigDecimal getQtaScartoUmPrm17() {
     //Fix 18536 Inizio
     //return iQtaScartoUmPrm17;
     return (BigDecimal)iQtaScartoUmPrm.get(new Integer(16 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmSec17(BigDecimal qtaScartoUmSec) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmSec17= qtaScartoUmSec;
     /*if(qtaScartoUmSec != null)
       iQtaScartoUmSec.put(new Integer((16 + (iCurrentNumPag - 1) * 20)), qtaScartoUmSec);*/
     //Fix 18536 Fine
  	 setQtaScartoUmSecInternal(qtaScartoUmSec, 16);
     setDirty();
   }

   public BigDecimal getQtaScartoUmSec17() {
     //Fix 18536 Inizio
     //return iQtaScartoUmSec17;
     return (BigDecimal)iQtaScartoUmSec.get(new Integer(16 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecPrd17() {
     if (getProdotto17() != null)
       return getProdotto17().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmPrd17() {
     if (getProdotto17() != null)
       return getProdotto17().getIdUMPrmMag();
     return null;
   }

   //Fix 17815 Inizio
   public void setDescrizioneProdotto17(String desc){
     //Fix 18536 Inizio
     //iDescrizioneProdotto17= desc;
     if(desc != null)
       iDescrizioneProdotto.put(new Integer((16 + (iCurrentNumPag - 1) * 20)), desc);
     //Fix 18536 Fine
   }

   public String getDescrizioneProdotto17() {
     //if (getProdotto17() != null) {
     //return getProdotto17().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     //Fix 18536 Inizio
     //return iDescrizioneProdotto17;
     return (String)iDescrizioneProdotto.get(new Integer(16 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 17815 Fine

   //Fix 14722 inizio
   public void setIdAnnoOrdine17(String anno){
     //Fix 18536 Inizio
     //iIdAnnoOrdine17= anno;
     if(anno != null)
       iIdAnnoOrdine.put(new Integer((16 + (iCurrentNumPag - 1) * 20)), anno);
     //Fix 18536 Fine
   }

   public String getIdAnnoOrdine17(){
     //Fix 18536 Inizio
     //return iIdAnnoOrdine17;
     return (String)iIdAnnoOrdine.get(new Integer(16 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdNumeroOrdine17(String numero){
     //Fix 18536 Inizio
     //iIdNumeroOrdine17= numero;
     if(numero != null)
       iIdNumeroOrdine.put(new Integer((16 + (iCurrentNumPag - 1) * 20)), numero);
     //Fix 18536 Fine
   }

   public String getIdNumeroOrdine17(){
     //Fix 18536 Inizio
     //return iIdNumeroOrdine17;
     return (String)iIdNumeroOrdine.get(new Integer(16 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdRigaAttivita17(Integer idRiga){
     //Fix 18536 Inizio
     //iIdRigaAttivita17= idRiga;
     if(idRiga != null)
       iIdRigaAttivita.put(new Integer((16 + (iCurrentNumPag - 1) * 20)), idRiga);
     //Fix 18536 Fine
   }

   public Integer getIdRigaAttivita17(){
     //Fix 18536 Inizio
     //return iIdRigaAttivita17;
     return (Integer)iIdRigaAttivita.get(new Integer(16 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 14722 fine

   /*------ Linea attributi prodotto n°18 -----*/
   public void setMagazzinoVrs18(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //this.iMagazzinoVrs18.setObject(magazzino);//Fix 18536
     //Fix 18536 inizio
     if(magazzino != null)
       iMagazzinoVrs.put(new Integer((17 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoVrs18() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs18.getObject();
     return (Magazzino)iMagazzinoVrs.get(new Integer(17 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoVrs18Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoVrs18.setKey(key);
     if(iMagazzinoVrs.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null)
       ((Magazzino)iMagazzinoVrs.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoVrs18Key() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs18.getObject();
     if(iMagazzinoVrs.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoVrs.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoVrs18(String idMagazzino) {
     //Fix 18536 inizio
     //String key = iMagazzinoVrs18.getKey();
     //iMagazzinoVrs18.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     String key = null;
     if(iMagazzinoVrs.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoVrs.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     }
     setDirty();
     //Fix 18536 fine
   }

   public String getIdMagazzinoVrs18() {
     //Fix 18536 Inizio
     //String key = iMagazzinoVrs18.getKey();
     String key = null;
     if(iMagazzinoVrs.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 2);
   }

   public void setProdotto18(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setProdottoInternal18(idArticolo);
     //Fix 18536 Inizio
     //iProdotto18.setObject(articolo);
     if(articolo != null){
       iProdotto.put(new Integer((17 + (iCurrentNumPag - 1) * 20)), articolo);
       setDirty();
     }
     //Fix 18536 Fine
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getProdotto18() {
     //Fix 18536 Inizio
     //return (Articolo) iProdotto18.getObject();
     return (Articolo)iProdotto.get(new Integer(17 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdotto18Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdotto18.setKey(key);
     if(iProdotto.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null){
       ((Articolo)iProdotto.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal18(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdotto18Key() {
     //Fix 18536 Inizio
     //return iProdotto18.getKey();
     if(iProdotto.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Articolo)iProdotto.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdotto18(String rArticolo) {
     setProdottoInternal18(rArticolo);
     setDirty();
   }

   public String getIdProdotto18() {
     //Fix 18536 Inizio
     //String key = iProdotto18.getKey();
     String key = null;
     if(iProdotto.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Articolo)iProdotto.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setProdottoVersione18(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setProdottoInternal18(rArticolo);
     //Fix 18536 Inizio
     //this.iProdottoVersione18.setObject(articoloVersione);
     if(articoloVersione != null)
       iProdottoVersione.put(new Integer((17 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getProdottoVersione18() {
     //Fix 18536 Inizio
     //return (ArticoloVersione) iProdottoVersione18.getObject();
     return (ArticoloVersione)iProdottoVersione.get(new Integer(17 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoVersione18Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536
     //iProdottoVersione18.setKey(key);
     if(iProdottoVersione.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iProdottoVersione.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal18(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoVersione18Key() {
     //Fix 18536 Inizio
     //return iProdottoVersione18.getKey();
     if(iProdottoVersione.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iProdottoVersione.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoVersione18(Integer versione) {
     //Fix 18536 inizio
     //String key = iProdottoVersione18.getKey();
     //iProdottoVersione18.setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     String key = null;
     if(iProdottoVersione.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoVersione18() {
     //Fix 18536 Inizio
     //String key = iProdottoVersione18.getKey();
     String key = null;
     if(iProdottoVersione.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key, 3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setProdottoConfig18(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //String rArticolo = null;
     //if (configurazione != null) {
     //rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     //}
     //Fix 18536 Inizio
     //this.iProdottoConfig18.setObject(configurazione);
     if(configurazione != null)
       iProdottoConfig.put(new Integer((17 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getProdottoConfig18() {
     //Fix 18536 Inizio
     //return (Configurazione) iProdottoConfig18.getObject();
     return (Configurazione) iProdottoConfig.get(new Integer(17 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoConfig18Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdottoConfig18.setKey(key);
     if(iProdottoConfig.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal18(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoConfig18Key() {
     //Fix 18536 Inizio
     //return iProdottoConfig18.getKey();
     if(iProdottoConfig.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoConfig18(Integer idConfigurazione) {
     //Fix 18536 inizio
     //String key = iProdottoConfig18.getKey();
     //iProdottoConfig18.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     String key = null;
     if(iProdottoConfig.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iProdottoConfig.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoConfig18() {
     //Fix 18536 Inizio
     //String key = iProdottoConfig18.getKey();
     String key = null;
     if(iProdottoConfig.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getKey();
     }
     //Fix 18536 Fine
     return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2));
   }

   public String getPrdIdEsternoConfig18() {
     //Fix 18536 Inizio
     //return iProdottoConfig18.getIdEsternoConfig();
     if(iProdottoConfig.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     return null;
     //Fix 18536 Fine
   }

   public void setPrdIdEsternoConfig18(String idEsternoConfig) {
     //Fix 18536 Inizio
     //iProdottoConfig18.setIdEsternoConfig(idEsternoConfig);
     if(iProdottoConfig.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     //Fix 18536 Fine
   }

   public void setLottoProdotto18(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setProdottoInternal18(rArticolo);
     //Fix 18536 Inizio
     //this.iLottoProdotto18.setObject(lotto);
     if(lotto != null)
       iLottoProdotto.put(new Integer((17 + (iCurrentNumPag - 1) * 20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLottoProdotto18() {
     //Fix 18536 Inizio
     //return (Lotto) iLottoProdotto18.getObject();
     return (Lotto) iLottoProdotto.get(new Integer(17 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLottoProdotto18Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLottoProdotto18.setKey(key);
     if(iLottoProdotto.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoProdotto.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal18(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLottoProdotto18Key() {
     //Fix 18536 Inizio
     //return iLottoProdotto18.getKey();
     if(iLottoProdotto.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoProdotto.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLottoProdotto18(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLottoProdotto18.getKey();
     //iLottoProdotto18.setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     String key = null;
     if(iLottoProdotto.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Lotto)iLottoProdotto.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdLottoProdotto18() {
     //Fix 18536 Inizio
     //String key = iLottoProdotto18.getKey();
     String key = null;
     if(iLottoProdotto.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoProdotto.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setProdottoInternal18(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iProdottoVersione18.getKey();
     //iProdottoVersione18.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     //String key2 = iProdotto18.getKey();
     //iProdotto18.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     //String key3 = iLottoProdotto18.getKey();
     //iLottoProdotto18.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     //iProdottoConfig18.setIdArticolo(rArticolo);
     if(iProdottoVersione.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null){
       String key1 = ((ArticoloVersione)iProdottoVersione.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     }
     if(iProdotto.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null){
       String key2 = ((Articolo)iProdotto.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iProdotto.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     }
     if(iLottoProdotto.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null){
       String key3 = ((Lotto)iLottoProdotto.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     }
     if(iProdottoConfig.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(17 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaVrsUmPrm18(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmPrm18= qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaVrsUmPrm.put(new Integer((17 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaVrsUmPrmInternal(qtaPrlUmPrm, 17);
     setDirty();
   }

   public BigDecimal getQtaVrsUmPrm18() {
     //Fix 18536 Inizio
     //return iQtaVrsUmPrm18;
     return (BigDecimal)iQtaVrsUmPrm.get(new Integer(17 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaVrsUmSec18(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmSec18= qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaVrsUmSec.put(new Integer((17 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaVrsUmSecInternal(qtaPrlUmSec, 17);
     setDirty();
   }

   public BigDecimal getQtaVrsUmSec18() {
     //Fix 18536 Inizio
     //return iQtaVrsUmSec18;
     return (BigDecimal)iQtaVrsUmSec.get(new Integer(17 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmPrm18(BigDecimal qtaScartoUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmPrm18= qtaScartoUmPrm;
     /*if(qtaScartoUmPrm != null)
       iQtaScartoUmPrm.put(new Integer((17 + (iCurrentNumPag - 1) * 20)), qtaScartoUmPrm);*/
     //Fix 18536 Fine
  	 setQtaScartoUmPrmInternal(qtaScartoUmPrm, 17);
     setDirty();
   }

   public BigDecimal getQtaScartoUmPrm18() {
     //Fix 18536 Inizio
     //return iQtaScartoUmPrm18;
     return (BigDecimal)iQtaScartoUmPrm.get(new Integer(17 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmSec18(BigDecimal qtaScartoUmSec) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmSec18= qtaScartoUmSec;
     /*if(qtaScartoUmSec != null)
       iQtaScartoUmSec.put(new Integer((17 + (iCurrentNumPag - 1) * 20)), qtaScartoUmSec);*/
     //Fix 18536 Fine
  	 setQtaScartoUmSecInternal(qtaScartoUmSec, 17);
     setDirty();
   }

   public BigDecimal getQtaScartoUmSec18() {
     //Fix 18536 Inizio
     //return iQtaScartoUmSec18;
     return (BigDecimal)iQtaScartoUmSec.get(new Integer(17 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecPrd18() {
     if (getProdotto18() != null)
       return getProdotto18().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmPrd18() {
     if (getProdotto18() != null)
       return getProdotto18().getIdUMPrmMag();
     return null;
   }

   //Fix 17815 Inizio
   public void setDescrizioneProdotto18(String desc){
     //Fix 18536 Inizio
     //iDescrizioneProdotto18= desc;
     if(desc != null)
       iDescrizioneProdotto.put(new Integer((17 + (iCurrentNumPag - 1) * 20)), desc);
     //Fix 18536 Fine
   }

   public String getDescrizioneProdotto18() {
     //if (getProdotto18() != null) {
     //return getProdotto18().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     //Fix 18536 Inizio
     //return iDescrizioneProdotto18;
     return (String)iDescrizioneProdotto.get(new Integer(17 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 17815 Fine

   //Fix 14722 inizio
   public void setIdAnnoOrdine18(String anno){
     //Fix 18536 Inizio
     //iIdAnnoOrdine18= anno;
     if(anno != null)
       iIdAnnoOrdine.put(new Integer((17 + (iCurrentNumPag - 1) * 20)), anno);
     //Fix 18536 Fine
   }

   public String getIdAnnoOrdine18(){
     //Fix 18536 Inizio
     //return iIdAnnoOrdine18;
     return (String)iIdAnnoOrdine.get(new Integer(17 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdNumeroOrdine18(String numero){
     //Fix 18536 Inizio
     //iIdNumeroOrdine18= numero;
     if(numero != null)
       iIdNumeroOrdine.put(new Integer((17 + (iCurrentNumPag - 1) * 20)), numero);
     //Fix 18536 Fine
   }

   public String getIdNumeroOrdine18(){
     //Fix 18536 Inizio
     //return iIdNumeroOrdine18;
     return (String)iIdNumeroOrdine.get(new Integer(17 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdRigaAttivita18(Integer idRiga){
     //Fix 18536 Inizio
     //iIdRigaAttivita18= idRiga;
     if(idRiga != null)
       iIdRigaAttivita.put(new Integer((17 + (iCurrentNumPag - 1) * 20)), idRiga);
     //Fix 18536 Fine
   }

   public Integer getIdRigaAttivita18(){
     //Fix 18536 Inizio
     //return iIdRigaAttivita18;
     return (Integer)iIdRigaAttivita.get(new Integer(17 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 14722 fine

   /*------ Linea attributi prodotto n°19 -----*/
   public void setMagazzinoVrs19(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //this.iMagazzinoVrs19.setObject(magazzino);//Fix 18536
     //Fix 18536 inizio
     if(magazzino != null)
       iMagazzinoVrs.put(new Integer((18 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoVrs19() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs19.getObject();
     return (Magazzino)iMagazzinoVrs.get(new Integer(18 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoVrs19Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoVrs19.setKey(key);
     if(iMagazzinoVrs.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null)
       ((Magazzino)iMagazzinoVrs.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoVrs19Key() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs19.getObject();
     if(iMagazzinoVrs.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoVrs.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoVrs19(String idMagazzino) {
     //Fix 18536 inizio
     //String key = iMagazzinoVrs19.getKey();
     //iMagazzinoVrs19.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     String key = null;
     if(iMagazzinoVrs.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoVrs.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     }
     setDirty();
     //Fix 18536 fine
   }

   public String getIdMagazzinoVrs19() {
     //Fix 18536 Inizio
     //String key = iMagazzinoVrs19.getKey();
     String key = null;
     if(iMagazzinoVrs.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 2);
   }

   public void setProdotto19(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setProdottoInternal19(idArticolo);
     //Fix 18536 Inizio
     //iProdotto19.setObject(articolo);
     if(articolo != null){
       iProdotto.put(new Integer((18 + (iCurrentNumPag - 1) * 20)), articolo);
       setDirty();
     }
     //Fix 18536 Fine
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getProdotto19() {
     //Fix 18536 Inizio
     //return (Articolo) iProdotto19.getObject();
     return (Articolo)iProdotto.get(new Integer(18 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdotto19Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdotto19.setKey(key);
     if(iProdotto.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null){
       ((Articolo)iProdotto.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal19(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdotto19Key() {
     //Fix 18536 Inizio
     //return iProdotto19.getKey();
     if(iProdotto.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Articolo)iProdotto.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdotto19(String rArticolo) {
     setProdottoInternal19(rArticolo);
     setDirty();
   }

   public String getIdProdotto19() {
     //Fix 18536 Inizio
     //String key = iProdotto19.getKey();
     String key = null;
     if(iProdotto.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Articolo)iProdotto.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setProdottoVersione19(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setProdottoInternal19(rArticolo);
     //Fix 18536 Inizio
     //this.iProdottoVersione19.setObject(articoloVersione);
     if(articoloVersione != null)
       iProdottoVersione.put(new Integer((18 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getProdottoVersione19() {
     //Fix 18536 Inizio
     //return (ArticoloVersione) iProdottoVersione19.getObject();
     return (ArticoloVersione)iProdottoVersione.get(new Integer(18 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoVersione19Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536
     //iProdottoVersione19.setKey(key);
     if(iProdottoVersione.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iProdottoVersione.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal19(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoVersione19Key() {
     //Fix 18536 Inizio
     //return iProdottoVersione19.getKey();
     if(iProdottoVersione.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iProdottoVersione.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoVersione19(Integer versione) {
     //Fix 18536 inizio
     //String key = iProdottoVersione19.getKey();
     //iProdottoVersione19.setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     String key = null;
     if(iProdottoVersione.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoVersione19() {
     //Fix 18536 Inizio
     //String key = iProdottoVersione19.getKey();
     String key = null;
     if(iProdottoVersione.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key, 3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setProdottoConfig19(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //String rArticolo = null;
     //if (configurazione != null) {
     //rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     //}
     //Fix 18536 Inizio
     //this.iProdottoConfig19.setObject(configurazione);
     if(configurazione != null)
       iProdottoConfig.put(new Integer((18 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getProdottoConfig19() {
     //Fix 18536 Inizio
     //return (Configurazione) iProdottoConfig19.getObject();
     return (Configurazione) iProdottoConfig.get(new Integer(18 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoConfig19Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdottoConfig19.setKey(key);
     if(iProdottoConfig.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal19(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoConfig19Key() {
     //Fix 18536 Inizio
     //return iProdottoConfig19.getKey();
     if(iProdottoConfig.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoConfig19(Integer idConfigurazione) {
     //Fix 18536 inizio
     //String key = iProdottoConfig19.getKey();
     //iProdottoConfig19.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     String key = null;
     if(iProdottoConfig.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iProdottoConfig.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoConfig19() {
     //Fix 18536 Inizio
     //String key = iProdottoConfig19.getKey();
     String key = null;
     if(iProdottoConfig.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getKey();
     }
     //Fix 18536 Fine
     return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2));
   }

   public String getPrdIdEsternoConfig19() {
     //Fix 18536 Inizio
     //return iProdottoConfig19.getIdEsternoConfig();
     if(iProdottoConfig.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     return null;
     //Fix 18536 Fine
   }

   public void setPrdIdEsternoConfig19(String idEsternoConfig) {
     //Fix 18536 Inizio
     //iProdottoConfig19.setIdEsternoConfig(idEsternoConfig);
     if(iProdottoConfig.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     //Fix 18536 Fine
   }

   public void setLottoProdotto19(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setProdottoInternal19(rArticolo);
     //Fix 18536 Inizio
     //this.iLottoProdotto19.setObject(lotto);
     if(lotto != null)
       iLottoProdotto.put(new Integer((18 + (iCurrentNumPag - 1) * 20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLottoProdotto19() {
     //Fix 18536 Inizio
     //return (Lotto) iLottoProdotto19.getObject();
     return (Lotto) iLottoProdotto.get(new Integer(18 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLottoProdotto19Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLottoProdotto19.setKey(key);
     if(iLottoProdotto.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoProdotto.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal19(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLottoProdotto19Key() {
     //Fix 18536 Inizio
     //return iLottoProdotto19.getKey();
     if(iLottoProdotto.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoProdotto.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLottoProdotto19(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLottoProdotto19.getKey();
     //iLottoProdotto19.setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     String key = null;
     if(iLottoProdotto.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Lotto)iLottoProdotto.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdLottoProdotto19() {
     //Fix 18536 Inizio
     //String key = iLottoProdotto19.getKey();
     String key = null;
     if(iLottoProdotto.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoProdotto.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setProdottoInternal19(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iProdottoVersione19.getKey();
     //iProdottoVersione19.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     //String key2 = iProdotto19.getKey();
     //iProdotto19.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     //String key3 = iLottoProdotto19.getKey();
     //iLottoProdotto19.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     //iProdottoConfig19.setIdArticolo(rArticolo);
     if(iProdottoVersione.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null){
       String key1 = ((ArticoloVersione)iProdottoVersione.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     }
     if(iProdotto.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null){
       String key2 = ((Articolo)iProdotto.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iProdotto.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     }
     if(iLottoProdotto.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null){
       String key3 = ((Lotto)iLottoProdotto.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     }
     if(iProdottoConfig.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(18 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaVrsUmPrm19(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmPrm19= qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaVrsUmPrm.put(new Integer((18 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaVrsUmPrmInternal(qtaPrlUmPrm, 18);
     setDirty();
   }

   public BigDecimal getQtaVrsUmPrm19() {
     //Fix 18536 Inizio
     //return iQtaVrsUmPrm19;
     return (BigDecimal)iQtaVrsUmPrm.get(new Integer(18 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaVrsUmSec19(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmSec19= qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaVrsUmSec.put(new Integer((18 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaVrsUmSecInternal(qtaPrlUmSec, 18);
     setDirty();
   }

   public BigDecimal getQtaVrsUmSec19() {
     //Fix 18536 Inizio
     //return iQtaVrsUmSec19;
     return (BigDecimal)iQtaVrsUmSec.get(new Integer(18 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmPrm19(BigDecimal qtaScartoUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmPrm19= qtaScartoUmPrm;
     /*if(qtaScartoUmPrm != null)
       iQtaScartoUmPrm.put(new Integer((18 + (iCurrentNumPag - 1) * 20)), qtaScartoUmPrm);*/
     //Fix 18536 Fine
  	 setQtaScartoUmPrmInternal(qtaScartoUmPrm, 18);
     setDirty();
   }

   public BigDecimal getQtaScartoUmPrm19() {
     //Fix 18536 Inizio
     //return iQtaScartoUmPrm19;
     return (BigDecimal)iQtaScartoUmPrm.get(new Integer(18 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmSec19(BigDecimal qtaScartoUmSec) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmSec19= qtaScartoUmSec;
    /*if(qtaScartoUmSec != null)
       iQtaScartoUmSec.put(new Integer((18 + (iCurrentNumPag - 1) * 20)), qtaScartoUmSec);*/
     //Fix 18536 Fine
  	 setQtaScartoUmSecInternal(qtaScartoUmSec, 18);
     setDirty();
   }

   public BigDecimal getQtaScartoUmSec19() {
     //Fix 18536 Inizio
     //return iQtaScartoUmSec19;
     return (BigDecimal)iQtaScartoUmSec.get(new Integer(18 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecPrd19() {
     if (getProdotto19() != null)
       return getProdotto19().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmPrd19() {
     if (getProdotto19() != null)
       return getProdotto19().getIdUMPrmMag();
     return null;
   }

   //Fix 17815 Inizio
   public void setDescrizioneProdotto19(String desc){
     //Fix 18536 Inizio
     //iDescrizioneProdotto19= desc;
     if(desc != null)
       iDescrizioneProdotto.put(new Integer((18 + (iCurrentNumPag - 1) * 20)), desc);
     //Fix 18536 Fine
   }

   public String getDescrizioneProdotto19() {
     //if (getProdotto19() != null) {
     //return getProdotto19().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     //Fix 18536 Inizio
     //return iDescrizioneProdotto19;
     return (String)iDescrizioneProdotto.get(new Integer(18 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 17815 Fine

   //Fix 14722 inizio
   public void setIdAnnoOrdine19(String anno){
     //Fix 18536 Inizio
     //iIdAnnoOrdine19= anno;
     if(anno != null)
       iIdAnnoOrdine.put(new Integer((18 + (iCurrentNumPag - 1) * 20)), anno);
     //Fix 18536 Fine
   }

   public String getIdAnnoOrdine19(){
     //Fix 18536 Inizio
     //return iIdAnnoOrdine19;
     return (String)iIdAnnoOrdine.get(new Integer(18 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdNumeroOrdine19(String numero){
     //Fix 18536 Inizio
     //iIdNumeroOrdine19= numero;
     if(numero != null)
       iIdNumeroOrdine.put(new Integer((18 + (iCurrentNumPag - 1) * 20)), numero);
     //Fix 18536 Fine
   }

   public String getIdNumeroOrdine19(){
     //Fix 18536 Inizio
     //return iIdNumeroOrdine19;
     return (String)iIdNumeroOrdine.get(new Integer(18 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdRigaAttivita19(Integer idRiga){
     //Fix 18536 Inizio
     //iIdRigaAttivita19= idRiga;
     if(idRiga != null)
       iIdRigaAttivita.put(new Integer((18 + (iCurrentNumPag - 1) * 20)), idRiga);
     //Fix 18536 Fine
   }

   public Integer getIdRigaAttivita19(){
     //Fix 18536 Inizio
     //return iIdRigaAttivita19;
     return (Integer)iIdRigaAttivita.get(new Integer(18 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 14722 fine

   /*------ Linea attributi prodotto n°20 -----*/
   public void setMagazzinoVrs20(Magazzino magazzino) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (magazzino != null) {
       idAzienda = KeyHelper.getTokenObjectKey(magazzino.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //this.iMagazzinoVrs20.setObject(magazzino);//Fix 18536
     //Fix 18536 inizio
     if(magazzino != null)
       iMagazzinoVrs.put(new Integer((19 + (iCurrentNumPag - 1) * 20)), magazzino);
     //Fix 18536 fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Magazzino getMagazzinoVrs20() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs20.getObject();
     return (Magazzino)iMagazzinoVrs.get(new Integer(19 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setMagazzinoVrs20Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iMagazzinoVrs20.setKey(key);
     if(iMagazzinoVrs.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null)
       ((Magazzino)iMagazzinoVrs.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getMagazzinoVrs20Key() {
     //Fix 18536 Inizio
     //return (Magazzino) iMagazzinoVrs20.getObject();
     if(iMagazzinoVrs.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Magazzino)iMagazzinoVrs.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdMagazzinoVrs20(String idMagazzino) {
     //Fix 18536 inizio
     //String key = iMagazzinoVrs20.getKey();
     //iMagazzinoVrs20.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     String key = null;
     if(iMagazzinoVrs.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Magazzino)iMagazzinoVrs.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idMagazzino));
     }
     setDirty();
     //Fix 18536 fine
   }

   public String getIdMagazzinoVrs20() {
     //Fix 18536 Inizio
     //String key = iMagazzinoVrs20.getKey();
     String key = null;
     if(iMagazzinoVrs.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Magazzino)iMagazzinoVrs.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 2);
   }

   public void setProdotto20(Articolo articolo) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articolo != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articolo.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String idArticolo = null;
     if (articolo != null) {
       idArticolo = KeyHelper.getTokenObjectKey(articolo.getKey(), 2);
     }
     setProdottoInternal20(idArticolo);
     //Fix 18536 Inizio
     //iProdotto20.setObject(articolo);
     if(articolo != null){
       iProdotto.put(new Integer((19 + (iCurrentNumPag - 1) * 20)), articolo);
       setDirty();
     }
     //Fix 18536 Fine
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Articolo getProdotto20() {
     //Fix 18536 Inizio
     //return (Articolo) iProdotto20.getObject();
     return (Articolo)iProdotto.get(new Integer(19 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdotto20Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdotto20.setKey(key);
     if(iProdotto.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null){
       ((Articolo)iProdotto.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).setKey(key);
     }
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String idArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal20(idArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdotto20Key() {
     //Fix 18536 Inizio
     //return iProdotto20.getKey();
     if(iProdotto.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Articolo)iProdotto.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdotto20(String rArticolo) {
     setProdottoInternal20(rArticolo);
     setDirty();
   }

   public String getIdProdotto20() {
     //Fix 18536 Inizio
     //String key = iProdotto20.getKey();
     String key = null;
     if(iProdotto.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Articolo)iProdotto.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objRArticolo = KeyHelper.getTokenObjectKey(key, 2);
     return objRArticolo;
   }

   public void setProdottoVersione20(ArticoloVersione articoloVersione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (articoloVersione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (articoloVersione != null) {
       rArticolo = KeyHelper.getTokenObjectKey(articoloVersione.getKey(), 2);
     }
     setProdottoInternal20(rArticolo);
     //Fix 18536 Inizio
     //this.iProdottoVersione20.setObject(articoloVersione);
     if(articoloVersione != null)
       iProdottoVersione.put(new Integer((19 + (iCurrentNumPag - 1) * 20)), articoloVersione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public ArticoloVersione getProdottoVersione20() {
     //Fix 18536 Inizio
     //return (ArticoloVersione) iProdottoVersione20.getObject();
     return (ArticoloVersione)iProdottoVersione.get(new Integer(19 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoVersione20Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536
     //iProdottoVersione20.setKey(key);
     if(iProdottoVersione.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null)
       ((ArticoloVersione)iProdottoVersione.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal20(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoVersione20Key() {
     //Fix 18536 Inizio
     //return iProdottoVersione20.getKey();
     if(iProdottoVersione.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null)
       return ((ArticoloVersione)iProdottoVersione.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoVersione20(Integer versione) {
     //Fix 18536 inizio
     //String key = iProdottoVersione20.getKey();
     //iProdottoVersione20.setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     String key = null;
     if(iProdottoVersione.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, versione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoVersione20() {
     //Fix 18536 Inizio
     //String key = iProdottoVersione20.getKey();
     String key = null;
     if(iProdottoVersione.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((ArticoloVersione)iProdottoVersione.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     String objVersione = KeyHelper.getTokenObjectKey(key, 3);
     return KeyHelper.stringToIntegerObj(objVersione);
   }

   public void setProdottoConfig20(Configurazione configurazione) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (configurazione != null) {
       idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     //String rArticolo = null;
     //if (configurazione != null) {
     //rArticolo = KeyHelper.getTokenObjectKey(configurazione.getKey(), 2);
     //}
     //Fix 18536 Inizio
     //this.iProdottoConfig20.setObject(configurazione);
     if(configurazione != null)
       iProdottoConfig.put(new Integer((19 + (iCurrentNumPag - 1) * 20)), configurazione);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Configurazione getProdottoConfig20() {
     //Fix 18536 Inizio
     //return (Configurazione) iProdottoConfig20.getObject();
     return (Configurazione) iProdottoConfig.get(new Integer(19 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setProdottoConfig20Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iProdottoConfig20.setKey(key);
     if(iProdottoConfig.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal20(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getProdottoConfig20Key() {
     //Fix 18536 Inizio
     //return iProdottoConfig20.getKey();
     if(iProdottoConfig.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdProdottoConfig20(Integer idConfigurazione) {
     //Fix 18536 inizio
     //String key = iProdottoConfig20.getKey();
     //iProdottoConfig20.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     String key = null;
     if(iProdottoConfig.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Configurazione)iProdottoConfig.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 2, idConfigurazione));
     }
     //Fix 18536 fine
     setDirty();
   }

   public Integer getIdProdottoConfig20() {
     //Fix 18536 Inizio
     //String key = iProdottoConfig20.getKey();
     String key = null;
     if(iProdottoConfig.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Configurazione)iProdottoConfig.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getKey();
     }
     //Fix 18536 Fine
     return Integer.getInteger(KeyHelper.getTokenObjectKey(key, 2));
   }

   public String getPrdIdEsternoConfig20() {
     //Fix 18536 Inizio
     //return iProdottoConfig20.getIdEsternoConfig();
     if(iProdottoConfig.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Configurazione)iProdottoConfig.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getIdEsternoConfig();
     return null;
     //Fix 18536 Fine
   }

   public void setPrdIdEsternoConfig20(String idEsternoConfig) {
     //Fix 18536 Inizio
     //iProdottoConfig20.setIdEsternoConfig(idEsternoConfig);
     if(iProdottoConfig.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).setIdEsternoConfig(idEsternoConfig);
     //Fix 18536 Fine
   }

   public void setLottoProdotto20(Lotto lotto) {
     String oldObjectKey = getKey();
     String idAzienda = null;
     if (lotto != null) {
       idAzienda = KeyHelper.getTokenObjectKey(lotto.getKey(), 1);
     }
     setIdAziendaInternal(idAzienda);
     String rArticolo = null;
     if (lotto != null) {
       rArticolo = KeyHelper.getTokenObjectKey(lotto.getKey(), 2);
     }
     setProdottoInternal20(rArticolo);
     //Fix 18536 Inizio
     //this.iLottoProdotto20.setObject(lotto);
     if(lotto != null)
       iLottoProdotto.put(new Integer((19 + (iCurrentNumPag - 1) * 20)), lotto);
     //Fix 18536 Fine
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public Lotto getLottoProdotto20() {
     //Fix 18536 Inizio
     //return (Lotto) iLottoProdotto20.getObject();
     return (Lotto) iLottoProdotto.get(new Integer(19 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setLottoProdotto20Key(String key) {
     String oldObjectKey = getKey();
     //Fix 18536 Inizio
     //iLottoProdotto20.setKey(key);
     if(iLottoProdotto.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null)
       ((Lotto)iLottoProdotto.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).setKey(key);
     //Fix 18536 Fine
     String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
     setIdAziendaInternal(idAzienda);
     String rArticolo = KeyHelper.getTokenObjectKey(key, 2);
     setProdottoInternal20(rArticolo);
     setDirty();
     if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
       setOnDB(false);
     }
   }

   public String getLottoProdotto20Key() {
     //Fix 18536 Inizio
     //return iLottoProdotto20.getKey();
     if(iLottoProdotto.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null)
       return ((Lotto)iLottoProdotto.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getKey();
     return null;
     //Fix 18536 Fine
   }

   public void setIdLottoProdotto20(String IdLotto) {
     //Fix 18536 Inizio
     //String key = iLottoProdotto20.getKey();
     //iLottoProdotto20.setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     String key = null;
     if(iLottoProdotto.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null){
       key = ((Lotto)iLottoProdotto.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key, 3, IdLotto));
     }
     //Fix 18536 Fine
     setDirty();
   }

   public String getIdLottoProdotto20() {
     //Fix 18536 Inizio
     //String key = iLottoProdotto20.getKey();
     String key = null;
     if(iLottoProdotto.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null)
       key = ((Lotto)iLottoProdotto.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getKey();
     //Fix 18536 Fine
     return KeyHelper.getTokenObjectKey(key, 3);
   }

   protected void setProdottoInternal20(String rArticolo) {
     //Fix 18536 Inizio
     //String key1 = iProdottoVersione20.getKey();
     //iProdottoVersione20.setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     //String key2 = iProdotto20.getKey();
     //iProdotto20.setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     //String key3 = iLottoProdotto20.getKey();
     //iLottoProdotto20.setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     //iProdottoConfig20.setIdArticolo(rArticolo);
     if(iProdottoVersione.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null){
       String key1 = ((ArticoloVersione)iProdottoVersione.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getKey();
       ((ArticoloVersione)iProdottoVersione.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key1, 2, rArticolo));
     }
     if(iProdotto.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null){
       String key2 = ((Articolo)iProdotto.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Articolo)iProdotto.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key2, 2, rArticolo));
     }
     if(iLottoProdotto.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null){
       String key3 = ((Lotto)iLottoProdotto.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).getKey();
       ((Lotto)iLottoProdotto.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).setKey(KeyHelper.replaceTokenObjectKey(key3, 2, rArticolo));
     }
     if(iProdottoConfig.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null)
       ((Configurazione)iProdottoConfig.get(new Integer(19 + (iCurrentNumPag - 1) * 20))).setIdArticolo(rArticolo);
     //Fix 18536 Fine
   }

   public void setQtaVrsUmPrm20(BigDecimal qtaPrlUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmPrm20= qtaPrlUmPrm;
     /*if(qtaPrlUmPrm != null)
       iQtaVrsUmPrm.put(new Integer((19 + (iCurrentNumPag - 1) * 20)), qtaPrlUmPrm);*/
     //Fix 18536 Fine
  	 setQtaVrsUmPrmInternal(qtaPrlUmPrm, 19);
     setDirty();
   }

   public BigDecimal getQtaVrsUmPrm20() {
     //Fix 18536 Inizio
     //return iQtaVrsUmPrm20;
     return (BigDecimal)iQtaVrsUmPrm.get(new Integer(19 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaVrsUmSec20(BigDecimal qtaPrlUmSec) {
     //Fix 18536 Inizio
     //this.iQtaVrsUmSec20= qtaPrlUmSec;
     /*if(qtaPrlUmSec != null)
       iQtaVrsUmSec.put(new Integer((19 + (iCurrentNumPag - 1) * 20)), qtaPrlUmSec);*/
     //Fix 18536 Fine
  	 setQtaVrsUmSecInternal(qtaPrlUmSec, 19);
     setDirty();
   }

   public BigDecimal getQtaVrsUmSec20() {
     //Fix 18536 Inizio
     //return iQtaVrsUmSec20;
     return (BigDecimal)iQtaVrsUmSec.get(new Integer(19 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmPrm20(BigDecimal qtaScartoUmPrm) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmPrm20= qtaScartoUmPrm;
     /*if(qtaScartoUmPrm != null)
       iQtaScartoUmPrm.put(new Integer((19 + (iCurrentNumPag - 1) * 20)), qtaScartoUmPrm);*/
     //Fix 18536 Fine
  	 setQtaScartoUmPrmInternal(qtaScartoUmPrm, 19);
     setDirty();
   }

   public BigDecimal getQtaScartoUmPrm20() {
     //Fix 18536 Inizio
     //return iQtaScartoUmPrm20;
     return (BigDecimal)iQtaScartoUmPrm.get(new Integer(19 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setQtaScartoUmSec20(BigDecimal qtaScartoUmSec) {
     //Fix 18536 Inizio
     //this.iQtaScartoUmSec20= qtaScartoUmSec;
     /*if(qtaScartoUmSec != null)
       iQtaScartoUmSec.put(new Integer((19 + (iCurrentNumPag - 1) * 20)), qtaScartoUmSec);*/
     //Fix 18536 Fine
  	 setQtaScartoUmSecInternal(qtaScartoUmSec, 19);
     setDirty();
   }

   public BigDecimal getQtaScartoUmSec20() {
     //Fix 18536 Inizio
     //return iQtaScartoUmSec20;
     return (BigDecimal)iQtaScartoUmSec.get(new Integer(19 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public String getIdUMSecPrd20() {
     if (getProdotto20() != null)
       return getProdotto20().getIdUMSecMag();
     return null;
   }

   public String getIdUMPrmPrd20() {
     if (getProdotto20() != null)
       return getProdotto20().getIdUMPrmMag();
     return null;
   }

   //Fix 17815 Inizio
   public void setDescrizioneProdotto20(String desc){
     //Fix 18536 Inizio
     //iDescrizioneProdotto20= desc;
     if(desc != null)
       iDescrizioneProdotto.put(new Integer((19 + (iCurrentNumPag - 1) * 20)), desc);
     //Fix 18536 Fine
   }

   public String getDescrizioneProdotto20() {
     //if (getProdotto20() != null) {
     //return getProdotto20().getDescrizioneArticoloNLS().getDescrizione();
     //}
     //return null;
     //Fix 18536 Inizio
     //return iDescrizioneProdotto20;
     return (String)iDescrizioneProdotto.get(new Integer(19 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 17815 Fine

   //Fix 14722 inizio
   public void setIdAnnoOrdine20(String anno){
     //Fix 18536 Inizio
     //iIdAnnoOrdine20= anno;
     if(anno != null)
       iIdAnnoOrdine.put(new Integer((19 + (iCurrentNumPag - 1) * 20)), anno);
     //Fix 18536 Fine
   }

   public String getIdAnnoOrdine20(){
     //Fix 18536 Inizio
     //return iIdAnnoOrdine20;
     return (String)iIdAnnoOrdine.get(new Integer(19 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdNumeroOrdine20(String numero){
     //Fix 18536 Inizio
     //iIdNumeroOrdine20= numero;
     if(numero != null)
       iIdNumeroOrdine.put(new Integer((19 + (iCurrentNumPag - 1) * 20)), numero);
     //Fix 18536 Fine
   }

   public String getIdNumeroOrdine20(){
     //Fix 18536 Inizio
     //return iIdNumeroOrdine20;
     return (String)iIdNumeroOrdine.get(new Integer(19 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }

   public void setIdRigaAttivita20(Integer idRiga){
     //Fix 18536 Inizio
     //iIdRigaAttivita20= idRiga;
     if(idRiga != null)
       iIdRigaAttivita.put(new Integer((19 + (iCurrentNumPag - 1) * 20)), idRiga);
     //Fix 18536 Fine
   }

   public Integer getIdRigaAttivita20(){
     //Fix 18536 Inizio
     //return iIdRigaAttivita20;
     return (Integer)iIdRigaAttivita.get(new Integer(19 + (iCurrentNumPag - 1) * 20));
     //Fix 18536 Fine
   }
   //Fix 14722 fine

   //Fix 14722 inizio

   public char getTipoBolla(){
     return iTipoBolla;
   }

   public void setTipoBolla(char tipo){
     iTipoBolla = tipo;
   }

   public BollaCucitaTes leggiBollaCucita() {
    String where = BollaCucitaTesTM.ID_AZIENDA + " = '" + Azienda.getAziendaCorrente() + "' AND " +
                   BollaCucitaTesTM.NUM_RITORNO + " = '" + getBollaLavorazione() + "'";
    try {
      Vector vect = BollaCucitaTes.retrieveList(where, "", true);
      if (!vect.isEmpty()) {
        return (BollaCucitaTes) vect.firstElement();
      }
    }
    catch (Exception e) {
      e.printStackTrace(Trace.excStream);
    }
    return null;
  }

  public List creaRigheRilevazioneMateriali(RilevazioneDatiProdTes testata){
    List righe = new ArrayList();
     try {
       //Fix 18536 Inizio blocco commentato
       /*
       for (int i=1; i < 21; i++) {
         String getterPrd = "getMateriale" + String.valueOf(i);
         Class c = Factory.getClass(this.getClass());
         Method matMethod = c.getMethod(getterPrd, null);
         Articolo materiale = (Articolo) matMethod.invoke(this, null);
         if(materiale != null){
           RilevazioneDatiProdMat riga = (RilevazioneDatiProdMat)Factory.createObject(RilevazioneDatiProdMat.class);
           riga.setIdAzienda(getIdAzienda());
           riga.setArticolo(materiale);
           riga.setRilevazioneDatiProdTes(testata);
           //Fix 14722 inizio
           if(testata != null && testata.getModalitaRilevazione() == RilevazioneDatiProdTes.RIDOTTA){
             riga.setIdRigaRil(new Integer(1));
           }
           else if (testata != null && testata.getModalitaRilevazione() != RilevazioneDatiProdTes.RIDOTTA){
             riga.setIdRigaRil(testata.getLastRiga().getIdRigaRilev());
           }
           //riga.setIdRigaRil(testata.getLastRiga().getIdRigaRilev());
           //Fix 14722 inizio
           Class c1 = Factory.getClass(this.getClass());

           String getterCfg = "getConfigurazione" + String.valueOf(i);
           String getterVers = "getMaterialeVersione" + String.valueOf(i);
           String getterLotti = "getLotto" + String.valueOf(i);
           String getterQtaPrlPrm = "getQtaPrlUmPrm" + String.valueOf(i);
           String getterQtaPrlSec = "getQtaPrlUmSec" + String.valueOf(i);
           String getterMag = "getMagazzinoPrl" + String.valueOf(i);
           //String getterUMPrm = "getIdUMPrmMat" + String.valueOf(i);
           //String getterUMSec = "getIdUMSecMat" + String.valueOf(i);

           Method cfgMethod = c1.getMethod(getterCfg, null);
           Method versMethod = c1.getMethod(getterVers, null);
           Method lottiMethod = c1.getMethod(getterLotti, null);
           Method QtaVrsPrmMethod = c1.getMethod(getterQtaPrlPrm, null);
           Method QtaVrsSecMethod = c1.getMethod(getterQtaPrlSec, null);
           Method magMethod = c1.getMethod(getterMag, null);
           //Fix 16109 blocco commentato
           /*Method UMPrmMethod = c1.getMethod(getterUMPrm, null);
           Method UMsecMethod = c1.getMethod(getterUMSec, null);
           String UMPrm = (String)UMPrmMethod.invoke(this, null);
           String UMSec = (String)UMsecMethod.invoke(this, null);*/

           /*
           Configurazione configMat = (Configurazione) cfgMethod.invoke(this, null);
           if(configMat != null)
             riga.setConfigurazione(configMat);
           ArticoloVersione versioneMat = (ArticoloVersione) versMethod.invoke(this, null);
           if(versioneMat != null)
             riga.setArticoloVersione(versioneMat);
           Lotto lottiMat = (Lotto) lottiMethod.invoke(this, null);
           if(lottiMat != null)
             riga.setIdLotto(lottiMat.getCodiceLotto());
           BigDecimal qtaPrlPrm = (BigDecimal) QtaVrsPrmMethod.invoke(this, null);
           if(qtaPrlPrm != null)
             riga.setQtaPrlUmPrm(qtaPrlPrm);
           BigDecimal qtaPrlSec = (BigDecimal) QtaVrsSecMethod.invoke(this, null);
           if(qtaPrlSec != null)
             riga.setQtaPrlUmSec(qtaPrlSec);
           Magazzino magazzinoPrl = (Magazzino) magMethod.invoke(this, null);
           if(magazzinoPrl != null)
             riga.setMagazzino(magazzinoPrl);
           riga = gestoreQuantitaRigaMat(riga, materiale); //Fix 16109
           righe.add(riga);
         }
       }*/
        for (int i=0; i < getMateriali().size(); i++) {
          Articolo materiale = (Articolo) getMateriali().get(new Integer(i));
          if(materiale != null && materiale.getIdArticolo() != null){
            RilevazioneDatiProdMat riga = (RilevazioneDatiProdMat)Factory.createObject(RilevazioneDatiProdMat.class);
            riga.setIdAzienda(getIdAzienda());
            riga.setArticolo(materiale);
            riga.setRilevazioneDatiProdTes(testata);

            //if(testata != null && testata.getModalitaRilevazione() == RilevazioneDatiProdTes.RIDOTTA){//Fix 24177
            if(testata != null && testata.getModalitaRilevazione() == RilevazioneDatiProdTes.RIDOTTA //Fix 24177
            		|| (getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO //Fix 24177
            				&& getPersDatiPrdCausaleRilev() != null && getPersDatiPrdCausaleRilev().isAbilitaPrelievo()//Fix 24177
            				&& getPersDatiPrdCausaleRilev().getPosizionePrelievo() == PersDatiPrdCausaleRilev.INIZIO)){//Fix 24177
              riga.setIdRigaRil(new Integer(1));
            }
            else if (testata != null && testata.getModalitaRilevazione() != RilevazioneDatiProdTes.RIDOTTA){
              riga.setIdRigaRil(testata.getLastRiga().getIdRigaRilev());
            }

            Configurazione configMat = (Configurazione) getMaterialiConfig().get(new Integer(i));
            if(configMat != null){ //Fix 19705 --inizio
            	//riga.setConfigurazione(configMat);
            	configMat = recuperaConfigurazione(configMat);
            	if(configMat != null && configMat.getIdConfigurazione() != null && !configMat.getIdConfigurazione().equals(new Integer(0))){
            		riga.setIdConfigurazione(configMat.getIdConfigurazione());
            	}
            }//Fix 19705 --fine

            ArticoloVersione versioneMat = (ArticoloVersione) getMaterialiVersione().get(new Integer(i));
            if(versioneMat != null)
              riga.setArticoloVersione(versioneMat);

            Lotto lottiMat = (Lotto) getLottiMateriale().get(new Integer(i));
            if(lottiMat != null)
              riga.setIdLotto(lottiMat.getCodiceLotto());

            BigDecimal qtaPrlPrm = (BigDecimal) getQtaPrlUmPrm().get(new Integer(i));
            if(qtaPrlPrm != null)
              riga.setQtaPrlUmPrm(qtaPrlPrm);
            BigDecimal qtaPrlSec = (BigDecimal) getQtaPrlUmSec().get(new Integer(i));
            if(qtaPrlSec != null)
              riga.setQtaPrlUmSec(qtaPrlSec);
            Magazzino magazzinoPrl = (Magazzino) getMagazziniPrl().get(new Integer(i));
            if(magazzinoPrl != null)
              riga.setMagazzino(magazzinoPrl);
            riga = gestoreQuantitaRigaMat(riga, materiale); //Fix 16109
            righe.add(riga);
          }
        }
        //Fix 18536 Fine
     }
     catch (Exception ex) {
       ex.printStackTrace(Trace.excStream);
     }
     return righe;
  }


  //Fix 19702 - inizio
  protected void impostaDatiTestataPers(RilevazioneDatiProdTes testata) {
	  
  }
  //Fix 19702 - fine
  

   public List creaRigheRilevazioneVersamenti(RilevazioneDatiProdTes testata) {
     List righe = new ArrayList();
     boolean first = true; //Fix 17550
     try {
       //Fix 18536 Inizio blocco commentato
       /*
       for (int i=1; i < 21; i++) {
         String getterPrd = "getProdotto" + String.valueOf(i);
         Class c = Factory.getClass(this.getClass());
         Method prdMethod = c.getMethod(getterPrd, null);
         Articolo prodotto = (Articolo) prdMethod.invoke(this, null);
         if(prodotto != null){
           RilevazioneDatiProdVrs riga = (RilevazioneDatiProdVrs)Factory.createObject(RilevazioneDatiProdVrs.class);
           riga.setIdAzienda(getIdAzienda());
           riga.setArticolo(prodotto);
           riga.setRilevazioneDatiProdTes(testata);
           //Fix 14722 inizio
           if(testata != null && testata.getModalitaRilevazione() == RilevazioneDatiProdTes.RIDOTTA){
             riga.setIdRigaRil(new Integer(1));
           }
           else if (testata != null && testata.getModalitaRilevazione() != RilevazioneDatiProdTes.RIDOTTA){
             riga.setIdRigaRil(testata.getLastRiga().getIdRigaRilev());
           }
           //riga.setIdRigaRil(testata.getLastRiga().getIdRigaRilev());
           //Fix 14722 fine
           Class c1 = Factory.getClass(this.getClass());

           String getterCfg = "getProdottoConfig" + String.valueOf(i);
           String getterVers = "getProdottoVersione" + String.valueOf(i);
           String getterLotti = "getLottoProdotto" + String.valueOf(i);
           String getterQtaVrsPrm = "getQtaVrsUmPrm" + String.valueOf(i);
           String getterQtaVrsSec = "getQtaVrsUmSec" + String.valueOf(i);
           String getterMag = "getMagazzinoVrs" + String.valueOf(i);
           String getterQtaScartoPrm = "getQtaScartoUmPrm" + String.valueOf(i);
           String getterQtaScartoSec = "getQtaScartoUmSec" + String.valueOf(i);
           String getterIdAnnoOrdine = "getIdAnnoOrdine" + String.valueOf(i); //Fix 14722
           String getterIdNumeroOrdine = "getIdNumeroOrdine" + String.valueOf(i); //Fix 14722
           String getterIdRigaAttivita = "getIdRigaAttivita" + String.valueOf(i); //Fix 14722

           Method cfgMethod = c1.getMethod(getterCfg, null);
           Method versMethod = c1.getMethod(getterVers, null);
           Method lottiMethod = c1.getMethod(getterLotti, null);
           Method QtaVrsPrmMethod = c1.getMethod(getterQtaVrsPrm, null);
           Method QtaVrsSecMethod = c1.getMethod(getterQtaVrsSec, null);
           Method magMethod = c1.getMethod(getterMag, null);
           Method QtaScartoPrmMethod = c1.getMethod(getterQtaScartoPrm, null);
           Method QtaScartoSecMethod = c1.getMethod(getterQtaScartoSec, null);
           Method IdAnnoOrdineMethod = c1.getMethod(getterIdAnnoOrdine, null); //Fix 14722
           Method IdNumeroOrdineMethod = c1.getMethod(getterIdNumeroOrdine, null); //Fix 14722
           Method IdRigaAtvMethod = c1.getMethod(getterIdRigaAttivita, null); //Fix 14722

           Configurazione configPrd = (Configurazione) cfgMethod.invoke(this, null);
           if(configPrd != null)
             riga.setConfigurazione(configPrd);
           ArticoloVersione versionePrd = (ArticoloVersione) versMethod.invoke(this, null);
           if(versionePrd != null)
             riga.setArticoloVersione(versionePrd);
           Lotto lottiPrd = (Lotto) lottiMethod.invoke(this, null);
           if(lottiPrd != null)
             riga.setLotto(lottiPrd);
           BigDecimal qtaVrsPrm = (BigDecimal) QtaVrsPrmMethod.invoke(this, null);
           if(qtaVrsPrm != null)
             riga.setQtaVrsUmPrm(qtaVrsPrm);
           BigDecimal qtaVrsSec = (BigDecimal) QtaVrsSecMethod.invoke(this, null);
           if(qtaVrsSec != null)
             riga.setQtaVrsUmSec(qtaVrsSec);
           Magazzino magazzinoVrs = (Magazzino) magMethod.invoke(this, null);
           if(magazzinoVrs != null)
             riga.setMagazzino(magazzinoVrs.getIdMagazzino());
           BigDecimal qtaScartoPrm = (BigDecimal) QtaScartoPrmMethod.invoke(this, null);
           if(qtaScartoPrm != null)
             riga.setQtaScaUmPrm(qtaScartoPrm);
           BigDecimal qtaScartoSec = (BigDecimal) QtaScartoSecMethod.invoke(this, null);
           if(qtaScartoSec != null)
             riga.setQtaScaUmSec(qtaScartoSec);
           //Fix 14722 inizio
           String idAnnoOrdine = (String) IdAnnoOrdineMethod.invoke(this, null);
           if(idAnnoOrdine != null)
             riga.setIdAnnoOrdine(idAnnoOrdine);
           String idNumeroOrdine = (String) IdNumeroOrdineMethod.invoke(this, null);
           if(idNumeroOrdine != null)
             riga.setIdNumeroOrd(idNumeroOrdine);
           Integer idRigaAtvMethod = (Integer) IdRigaAtvMethod.invoke(this, null);
           if(idRigaAtvMethod != null)
             riga.setIdRigaAttivita(idRigaAtvMethod);
           riga = gestoreQuantitaRigaVrs(riga, prodotto); //Fix 16109
           RilevazioneDatiProdRig lastRiga = testata.getLastRiga();
           if((lastRiga.getTipoTimbratura() == RilevazioneDatiProdRig.SOSPENSIONE ||
               lastRiga.getTipoTimbratura() == RilevazioneDatiProdRig.FINE) &&
               (riga.getIdArticolo() != null && getAttivitaEsecutiva() != null &&
                (riga.getIdArticolo().equals(getAttivitaEsecutiva().getOrdineEsecutivo().getIdArticolo()) ||
                 riga.getArticolo().getTipoParte() == ArticoloDatiIdent.ARTICOLO_WIP))) { //Fix 15064 //Fix 15866 //Fix 17550
             //Fix 17550 inzio
             if (first) {
               if (getAttivitaEsecutiva().isAttivitaFinale()) //Fix 18532
                 lastRiga.setQuantita(new BigDecimal("0"));
               lastRiga.setQuantitaScarto(new BigDecimal("0"));
               if(lastRiga.getIdUMSec() != null) {
                 if (getAttivitaEsecutiva().isAttivitaFinale()) //Fix 18532
                   lastRiga.setQtaSec(new BigDecimal("0"));
                 lastRiga.setQtaScartoSec(new BigDecimal("0"));
               }
             }
             first = false;
             //Fix 17550 fine
             if (getAttivitaEsecutiva().isAttivitaFinale()) { //Fix 18532 Inizio
               if(lastRiga.getQuantita()!=null){
                 lastRiga.setQuantita(lastRiga.getQuantita().add(riga.getQtaVrsUmPrm()));
               }
               else{
                 lastRiga.setQuantita(riga.getQtaVrsUmPrm());
               }
               if(lastRiga.getQtaSec()!=null&&riga.getQtaVrsUmSec()!=null){ //Fix 15030
                 lastRiga.setQtaSec(lastRiga.getQtaSec().add(riga.getQtaVrsUmSec()));
               }
               else if(riga.getQtaVrsUmSec()!=null){ //Fix 17550
                 lastRiga.setQtaSec(riga.getQtaVrsUmSec());
               }
             } //Fix 18532 Fine
             if(lastRiga.getQuantitaScarto() != null && riga.getQtaScaUmPrm() != null){ //Fix 15030
               lastRiga.setQuantitaScarto(lastRiga.getQuantitaScarto().add(riga.getQtaScaUmPrm()));
             }
             else if (riga.getQtaScaUmPrm() != null) { //Fix 17550
               lastRiga.setQuantitaScarto(riga.getQtaScaUmPrm());
             }
             if(lastRiga.getQtaScartoSec() != null && riga.getQtaScaUmSec() != null){ //Fix 15030
               lastRiga.setQtaScartoSec(lastRiga.getQtaScartoSec().add(riga.getQtaScaUmSec()));
             }
             else if (riga.getQtaScaUmSec() != null) { //Fix 17550 inzio
               lastRiga.setQtaScartoSec(riga.getQtaScaUmSec());
             }
           }
           //Fix 14722 fine
           if ((riga.getQtaVrsUmPrm() != null && riga.getQtaVrsUmPrm().compareTo(new BigDecimal("0")) != 0) ||
               (riga.getQtaScaUmPrm() != null && riga.getQtaScaUmPrm().compareTo(new BigDecimal("0")) != 0)) //Fix 17550
             righe.add(riga);
         }
       }*/
       for (int i=0; i < getProdotti().size(); i++) {
         Articolo prodotto = (Articolo) getProdotti().get(new Integer(i));
         if(prodotto != null && prodotto.getIdArticolo() != null){
           RilevazioneDatiProdVrs riga = (RilevazioneDatiProdVrs)Factory.createObject(RilevazioneDatiProdVrs.class);
           riga.setIdAzienda(getIdAzienda());
           riga.setArticolo(prodotto);
           riga.setRilevazioneDatiProdTes(testata);

           if(testata != null && testata.getModalitaRilevazione() == RilevazioneDatiProdTes.RIDOTTA){
             riga.setIdRigaRil(new Integer(1));
           }
           else if (testata != null && testata.getModalitaRilevazione() != RilevazioneDatiProdTes.RIDOTTA){
             riga.setIdRigaRil(testata.getLastRiga().getIdRigaRilev());
           }

           Configurazione configPrd = (Configurazione) getProdottiConfig().get(new Integer(i));
           if(configPrd != null){
             if(configPrd.getIdConfigurazione() != null && !configPrd.getIdConfigurazione().equals(new Integer(0)))
               riga.setIdConfigurazione(configPrd.getIdConfigurazione());
             riga.setIdEsternoConfig(configPrd.getIdEsternoConfig());
           }

           ArticoloVersione versionePrd = (ArticoloVersione) getProdottiVersione().get(new Integer(i));
           if(versionePrd != null)
             riga.setArticoloVersione(versionePrd);

           Lotto lottiPrd = (Lotto) getLottiProdotto().get(new Integer(i));
           if(lottiPrd != null)
             riga.setLotto(lottiPrd);

           BigDecimal qtaVrsPrm = (BigDecimal) getQtaVrsUmPrm().get(new Integer(i));
           if(qtaVrsPrm != null)
             riga.setQtaVrsUmPrm(qtaVrsPrm);

           BigDecimal qtaVrsSec = (BigDecimal) getQtaVrsUmSec().get(new Integer(i));
           if(qtaVrsSec != null)
             riga.setQtaVrsUmSec(qtaVrsSec);

           Magazzino magazzinoVrs = (Magazzino) getMagazziniVrs().get(new Integer(i));
           if(magazzinoVrs != null)
             riga.setMagazzino(magazzinoVrs.getIdMagazzino());

           BigDecimal qtaScartoPrm = (BigDecimal) getQtaScartoUmPrm().get(new Integer(i));
           if(qtaScartoPrm != null)
             riga.setQtaScaUmPrm(qtaScartoPrm);

           BigDecimal qtaScartoSec = (BigDecimal) getQtaScartoUmSec().get(new Integer(i));
           if(qtaScartoSec != null)
             riga.setQtaScaUmSec(qtaScartoSec);

           String idAnnoOrdine = (String) getAnniOrdine().get(new Integer(i));
           if(idAnnoOrdine != null)
             riga.setIdAnnoOrdine(idAnnoOrdine);

           String idNumeroOrdine = (String) getNumeriOrdine().get(new Integer(i));
           if(idNumeroOrdine != null)
             riga.setIdNumeroOrd(idNumeroOrdine);

           Integer idRigaAtvMethod = (Integer) getRigaAttivitaId().get(new Integer(i));
           if(idRigaAtvMethod != null)
             riga.setIdRigaAttivita(idRigaAtvMethod);
           riga = gestoreQuantitaRigaVrs(riga, prodotto);
           
           RilevazioneDatiProdRig lastRiga = testata.getLastRiga();
           if((lastRiga.getTipoTimbratura() == RilevazioneDatiProdRig.SOSPENSIONE ||
               lastRiga.getTipoTimbratura() == RilevazioneDatiProdRig.FINE) &&
               (riga.getIdArticolo() != null && getAttivitaEsecutiva() != null &&
                (riga.getIdArticolo().equals(getAttivitaEsecutiva().getOrdineEsecutivo().getIdArticolo()) ||
                 riga.getArticolo().getTipoParte() == ArticoloDatiIdent.ARTICOLO_WIP))) { //Fix 15064 //Fix 15866 //Fix 17550
             //Fix 17550 inzio
             if (first) {
               if (getAttivitaEsecutiva().isAttivitaFinale()) //Fix 18532
                 lastRiga.setQuantita(new BigDecimal("0"));
               lastRiga.setQuantitaScarto(new BigDecimal("0"));
               if(lastRiga.getIdUMSec() != null) {
                 if (getAttivitaEsecutiva().isAttivitaFinale()) //Fix 18532
                   lastRiga.setQtaSec(new BigDecimal("0"));
                 lastRiga.setQtaScartoSec(new BigDecimal("0"));
               }
             }
             first = false;
             //Fix 17550 fine
             if (getAttivitaEsecutiva().isAttivitaFinale()) { //Fix 18532 Inizio
               if(lastRiga.getQuantita()!=null){
                 lastRiga.setQuantita(lastRiga.getQuantita().add(riga.getQtaVrsUmPrm()));
               }
               else{
                 lastRiga.setQuantita(riga.getQtaVrsUmPrm());
               }
               if(lastRiga.getQtaSec()!=null&&riga.getQtaVrsUmSec()!=null){ //Fix 15030
                 lastRiga.setQtaSec(lastRiga.getQtaSec().add(riga.getQtaVrsUmSec()));
               }
               else if(riga.getQtaVrsUmSec()!=null){ //Fix 17550
                 lastRiga.setQtaSec(riga.getQtaVrsUmSec());
               }
             } //Fix 18532 Fine
             if(lastRiga.getQuantitaScarto() != null && riga.getQtaScaUmPrm() != null){ //Fix 15030
               lastRiga.setQuantitaScarto(lastRiga.getQuantitaScarto().add(riga.getQtaScaUmPrm()));
             }
             else if (riga.getQtaScaUmPrm() != null) { //Fix 17550
               lastRiga.setQuantitaScarto(riga.getQtaScaUmPrm());
             }
             if(lastRiga.getQtaScartoSec() != null && riga.getQtaScaUmSec() != null){ //Fix 15030
               lastRiga.setQtaScartoSec(lastRiga.getQtaScartoSec().add(riga.getQtaScaUmSec()));
             }
             else if (riga.getQtaScaUmSec() != null) { //Fix 17550 inzio
               lastRiga.setQtaScartoSec(riga.getQtaScaUmSec());
             }
           }
           //Fix 14722 fine
           //29505 inizio
           /*
           if ((riga.getQtaVrsUmPrm() != null && riga.getQtaVrsUmPrm().compareTo(new BigDecimal("0")) != 0) ||
        		 //(riga.getQtaScaUmPrm() != null && riga.getQtaScaUmPrm().compareTo(new BigDecimal("0")) != 0)) //Fix 17550 //Fix 26118
            	(riga.getQtaScaUmPrm() != null && riga.getQtaScaUmPrm().compareTo(new BigDecimal("0")) != 0) || (getTipoBolla() == RilevazioneDatiProdTes.BOLLA_CUCITA)) //Fix 26118
           */
           //29505 fine
           if (riga.getQtaVrsUmPrm() != null || riga.getQtaScaUmPrm() != null || getTipoBolla() == RilevazioneDatiProdTes.BOLLA_CUCITA) //Fix 26118 //29505
             righe.add(riga);
         }
       }
       //Fix 18536 Fine
     }
     catch (Exception ex) {
       ex.printStackTrace(Trace.excStream);
     }
     return righe;
  }

  /*----- Check QtaPrlUmPrm -----*/
  public ErrorMessage checkQtaPrlUmPrm1() {
    if(getIdUMPrmMat1() != null && getQtaPrlUmPrm1() == null && getIdUMSecMat1() == null)
      return new ErrorMessage("BAS0000000");
    if(getIdUMPrmMat1() != null && getIdUMSecMat1() != null)
      if(getQtaPrlUmPrm1() == null && getQtaPrlUmSec1() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaPrlUmPrm2() {
    if(getIdUMPrmMat2() != null && getQtaPrlUmPrm2() == null && getIdUMSecMat2() == null)
      return new ErrorMessage("BAS0000000");
    if(getIdUMPrmMat2() != null && getIdUMSecMat2() != null)
      if(getQtaPrlUmPrm2() == null && getQtaPrlUmSec2() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaPrlUmPrm3() {
    if(getIdUMPrmMat3() != null && getQtaPrlUmPrm3() == null && getIdUMSecMat3() == null)
      return new ErrorMessage("BAS0000000");
    if(getIdUMPrmMat3() != null && getIdUMSecMat3() != null)
      if(getQtaPrlUmPrm3() == null && getQtaPrlUmSec3() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaPrlUmPrm4() {
    if(getIdUMPrmMat4() != null && getQtaPrlUmPrm4() == null && getIdUMSecMat4() == null)
      return new ErrorMessage("BAS0000000");
    if(getIdUMPrmMat4() != null && getIdUMSecMat4() != null)
      if(getQtaPrlUmPrm4() == null && getQtaPrlUmSec4() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaPrlUmPrm5() {
    if(getIdUMPrmMat5() != null && getQtaPrlUmPrm5() == null && getIdUMSecMat5() == null)
      return new ErrorMessage("BAS0000000");
    if(getIdUMPrmMat5() != null && getIdUMSecMat5() != null)
      if(getQtaPrlUmPrm5() == null && getQtaPrlUmSec5() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaPrlUmPrm6() {
    if(getIdUMPrmMat6() != null && getQtaPrlUmPrm6() == null)
      return new ErrorMessage("BAS0000000");
    if(getIdUMPrmMat6() != null && getIdUMSecMat6() != null && getIdUMSecMat6() == null)
      if(getQtaPrlUmPrm6() == null && getQtaPrlUmSec6() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaPrlUmPrm7() {
    if(getIdUMPrmMat7() != null && getQtaPrlUmPrm7() == null && getIdUMSecMat7() == null)
      return new ErrorMessage("BAS0000000");
    if(getIdUMPrmMat7() != null && getIdUMSecMat7() != null)
      if(getQtaPrlUmPrm7() == null && getQtaPrlUmSec7() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaPrlUmPrm8() {
    if(getIdUMPrmMat8() != null && getQtaPrlUmPrm8() == null && getIdUMSecMat8() == null)
      return new ErrorMessage("BAS0000000");
    if(getIdUMPrmMat8() != null && getIdUMSecMat8() != null)
      if(getQtaPrlUmPrm8() == null && getQtaPrlUmSec8() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaPrlUmPrm9() {
    if(getIdUMPrmMat9() != null && getQtaPrlUmPrm9() == null && getIdUMSecMat9() == null)
      return new ErrorMessage("BAS0000000");
    if(getIdUMPrmMat9() != null && getIdUMSecMat9() != null)
      if(getQtaPrlUmPrm9() == null && getQtaPrlUmSec9() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaPrlUmPrm10() {
    if(getIdUMPrmMat10() != null && getQtaPrlUmPrm10() == null && getIdUMSecMat10() == null)
      return new ErrorMessage("BAS0000000");
    if(getIdUMPrmMat10() != null && getIdUMSecMat10() != null)
      if(getQtaPrlUmPrm10() == null && getQtaPrlUmSec10() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaPrlUmPrm11() {
    if(getIdUMPrmMat11() != null && getQtaPrlUmPrm11() == null && getIdUMSecMat11() == null)
      return new ErrorMessage("BAS0000000");
    if(getIdUMPrmMat11() != null && getIdUMSecMat11() != null)
      if(getQtaPrlUmPrm11() == null && getQtaPrlUmSec11() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaPrlUmPrm12() {
    if(getIdUMPrmMat12() != null && getQtaPrlUmPrm12() == null && getIdUMSecMat12() == null)
      return new ErrorMessage("BAS0000000");
    if(getIdUMPrmMat12() != null && getIdUMSecMat12() != null)
      if(getQtaPrlUmPrm12() == null && getQtaPrlUmSec12() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaPrlUmPrm13() {
    if(getIdUMPrmMat13() != null && getQtaPrlUmPrm13() == null && getIdUMSecMat13() == null)
      return new ErrorMessage("BAS0000000");
    if(getIdUMPrmMat13() != null && getIdUMSecMat13() != null)
      if(getQtaPrlUmPrm13() == null && getQtaPrlUmSec13() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaPrlUmPrm14() {
    if(getIdUMPrmMat14() != null && getQtaPrlUmPrm14() == null && getIdUMSecMat14() == null)
      return new ErrorMessage("BAS0000000");
    if(getIdUMPrmMat14() != null && getIdUMSecMat14() != null)
      if(getQtaPrlUmPrm14() == null && getQtaPrlUmSec14() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaPrlUmPrm15() {
    if(getIdUMPrmMat15() != null && getQtaPrlUmPrm15() == null && getIdUMSecMat15() == null)
      return new ErrorMessage("BAS0000000");
    if(getIdUMPrmMat15() != null && getIdUMSecMat15() != null)
      if(getQtaPrlUmPrm15() == null && getQtaPrlUmSec15() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaPrlUmPrm16() {
    if(getIdUMPrmMat16() != null && getQtaPrlUmPrm16() == null && getIdUMSecMat16() == null)
      return new ErrorMessage("BAS0000000");
    if(getIdUMPrmMat16() != null && getIdUMSecMat16() != null)
      if(getQtaPrlUmPrm16() == null && getQtaPrlUmSec16() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaPrlUmPrm17() {
    if(getIdUMPrmMat17() != null && getQtaPrlUmPrm17() == null && getIdUMSecMat17() == null)
      return new ErrorMessage("BAS0000000");
    if(getIdUMPrmMat17() != null && getIdUMSecMat17() != null)
      if(getQtaPrlUmPrm17() == null && getQtaPrlUmSec17() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaPrlUmPrm18() {
    if(getIdUMPrmMat18() != null && getQtaPrlUmPrm18() == null && getIdUMSecMat18() == null)
      return new ErrorMessage("BAS0000000");
    if(getIdUMPrmMat18() != null && getIdUMSecMat18() != null)
      if(getQtaPrlUmPrm18() == null && getQtaPrlUmSec18() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaPrlUmPrm19() {
    if(getIdUMPrmMat19() != null && getQtaPrlUmPrm19() == null && getIdUMSecMat19() == null)
      return new ErrorMessage("BAS0000000");
    if(getIdUMPrmMat19() != null && getIdUMSecMat19() != null)
      if(getQtaPrlUmPrm19() == null && getQtaPrlUmSec19() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaPrlUmPrm20() {
    if(getIdUMPrmMat20() != null && getQtaPrlUmPrm20() == null && getIdUMSecMat20() == null)
      return new ErrorMessage("BAS0000000");
    if(getIdUMPrmMat20() != null && getIdUMSecMat20() != null)
      if(getQtaPrlUmPrm20() == null && getQtaPrlUmSec20() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  /*----- Check QtaVrsUmPrm -----*/
  public ErrorMessage checkQtaVrsUmPrm1() {
    if (getIdUMPrmPrd1() != null && getQtaVrsUmPrm1() == null  && getIdUMSecPrd1() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd1() != null && getIdUMSecPrd1() != null)
      if (getQtaVrsUmPrm1() == null && getQtaVrsUmSec1() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaVrsUmPrm2() {
    if (getIdUMPrmPrd2() != null && getQtaVrsUmPrm2() == null && getIdUMSecPrd2() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd2() != null && getIdUMSecPrd2() != null)
      if (getQtaVrsUmPrm2() == null && getQtaVrsUmSec2() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaVrsUmPrm3() {
    if (getIdUMPrmPrd3() != null && getQtaVrsUmPrm3() == null && getIdUMSecPrd3() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd3() != null && getIdUMSecPrd3() != null)
      if (getQtaVrsUmPrm3() == null && getQtaVrsUmSec3() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaVrsUmPrm4() {
    if (getIdUMPrmPrd4() != null && getQtaVrsUmPrm4() == null && getIdUMSecPrd4() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd4() != null && getIdUMSecPrd4() != null)
      if (getQtaVrsUmPrm4() == null && getQtaVrsUmSec4() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaVrsUmPrm5() {
    if (getIdUMPrmPrd5() != null && getQtaVrsUmPrm5() == null && getIdUMSecPrd5() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd5() != null && getIdUMSecPrd5() != null)
      if (getQtaVrsUmPrm5() == null && getQtaVrsUmSec5() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaVrsUmPrm6() {
    if (getIdUMPrmPrd6() != null && getQtaVrsUmPrm6() == null && getIdUMSecPrd6() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd6() != null && getIdUMSecPrd6() != null)
      if (getQtaVrsUmPrm6() == null && getQtaVrsUmSec6() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaVrsUmPrm7() {
    if (getIdUMPrmPrd7() != null && getQtaVrsUmPrm7() == null && getIdUMSecPrd7() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd7() != null && getIdUMSecPrd7() != null)
      if (getQtaVrsUmPrm7() == null && getQtaVrsUmSec7() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaVrsUmPrm8() {
    if (getIdUMPrmPrd8() != null && getQtaVrsUmPrm8() == null && getIdUMSecPrd8() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd8() != null && getIdUMSecPrd8() != null)
      if (getQtaVrsUmPrm8() == null && getQtaVrsUmSec8() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaVrsUmPrm9() {
    if (getIdUMPrmPrd9() != null && getQtaVrsUmPrm9() == null && getIdUMSecPrd9() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd9() != null && getIdUMSecPrd9() != null)
      if (getQtaVrsUmPrm9() == null && getQtaVrsUmSec9() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaVrsUmPrm10() {
    if (getIdUMPrmPrd10() != null && getQtaVrsUmPrm10() == null && getIdUMSecPrd10() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd10() != null && getIdUMSecPrd10() != null)
      if (getQtaVrsUmPrm10() == null && getQtaVrsUmSec10() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaVrsUmPrm11() {
    if (getIdUMPrmPrd11() != null && getQtaVrsUmPrm11() == null && getIdUMSecPrd11() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd11() != null && getIdUMSecPrd11() != null)
      if (getQtaVrsUmPrm11() == null && getQtaVrsUmSec11() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaVrsUmPrm12() {
    if (getIdUMPrmPrd12() != null && getQtaVrsUmPrm12() == null && getIdUMSecPrd12() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd12() != null && getIdUMSecPrd12() != null)
      if (getQtaVrsUmPrm12() == null && getQtaVrsUmSec12() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaVrsUmPrm13() {
    if (getIdUMPrmPrd13() != null && getQtaVrsUmPrm13() == null && getIdUMSecPrd13() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd13() != null && getIdUMSecPrd13() != null)
      if (getQtaVrsUmPrm13() == null && getQtaVrsUmSec13() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaVrsUmPrm14() {
    if (getIdUMPrmPrd14() != null && getQtaVrsUmPrm14() == null && getIdUMSecPrd14() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd14() != null && getIdUMSecPrd14() != null)
      if (getQtaVrsUmPrm14() == null && getQtaVrsUmSec14() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaVrsUmPrm15() {
    if (getIdUMPrmPrd15() != null && getQtaVrsUmPrm15() == null && getIdUMSecPrd15() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd15() != null && getIdUMSecPrd15() != null)
      if (getQtaVrsUmPrm15() == null && getQtaVrsUmSec15() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaVrsUmPrm16() {
    if (getIdUMPrmPrd16() != null && getQtaVrsUmPrm16() == null && getIdUMSecPrd16() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd16() != null && getIdUMSecPrd16() != null)
      if (getQtaVrsUmPrm16() == null && getQtaVrsUmSec16() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaVrsUmPrm17() {
    if (getIdUMPrmPrd17() != null && getQtaVrsUmPrm17() == null && getIdUMSecPrd17() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd17() != null && getIdUMSecPrd17() != null)
      if (getQtaVrsUmPrm17() == null && getQtaVrsUmSec17() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaVrsUmPrm18() {
    if (getIdUMPrmPrd18() != null && getQtaVrsUmPrm18() == null && getIdUMSecPrd18() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd18() != null && getIdUMSecPrd18() != null)
      if (getQtaVrsUmPrm18() == null && getQtaVrsUmSec18() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaVrsUmPrm19() {
    if (getIdUMPrmPrd19() != null && getQtaVrsUmPrm19() == null && getIdUMSecPrd19() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd19() != null && getIdUMSecPrd19() != null)
      if (getQtaVrsUmPrm19() == null && getQtaVrsUmSec19() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaVrsUmPrm20() {
    if (getIdUMPrmPrd20() != null && getQtaVrsUmPrm20() == null && getIdUMSecPrd20() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd20() != null && getIdUMSecPrd20() != null)
      if (getQtaVrsUmPrm20() == null && getQtaVrsUmSec20() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }
  //Fix 15030 inizio --blocco commentato
  /*----- Check QtaScartoUmPrm -----*/
  /*public ErrorMessage checkQtaScartoUmPrm1() {
    if (getIdUMPrmPrd1() != null && getQtaScartoUmPrm1() == null && getIdUMSecPrd1() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd1() != null && getIdUMSecPrd1() != null)
      if (getQtaScartoUmPrm1() == null && getQtaVrsUmSec1() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaScartoUmPrm2() {
    if (getIdUMPrmPrd2() != null && getQtaScartoUmPrm2() == null && getIdUMSecPrd2() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd2() != null && getIdUMSecPrd2() != null)
      if (getQtaScartoUmPrm2() == null && getQtaScartoUmSec2() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaScartoUmPrm3() {
    if (getIdUMPrmPrd3() != null && getQtaScartoUmPrm3() == null  && getIdUMSecPrd3() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd3() != null && getIdUMSecPrd3() != null)
      if (getQtaScartoUmPrm3() == null && getQtaScartoUmSec3() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaScartoUmPrm4() {
    if (getIdUMPrmPrd4() != null && getQtaScartoUmPrm4() == null  && getIdUMSecPrd4() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd4() != null && getIdUMSecPrd4() != null)
      if (getQtaScartoUmPrm4() == null && getQtaScartoUmSec4() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaScartoUmPrm5() {
    if (getIdUMPrmPrd5() != null && getQtaScartoUmPrm5() == null  && getIdUMSecPrd5() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd5() != null && getIdUMSecPrd5() != null)
      if (getQtaScartoUmPrm5() == null && getQtaScartoUmSec5() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaScartoUmPrm6() {
    if (getIdUMPrmPrd6() != null && getQtaScartoUmPrm6() == null  && getIdUMSecPrd6() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd6() != null && getIdUMSecPrd6() != null)
      if (getQtaScartoUmPrm6() == null && getQtaScartoUmSec6() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaScartoUmPrm7() {
    if (getIdUMPrmPrd7() != null && getQtaScartoUmPrm7() == null  && getIdUMSecPrd7() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd7() != null && getIdUMSecPrd7() != null)
      if (getQtaScartoUmPrm7() == null && getQtaScartoUmSec7() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaScartoUmPrm8() {
    if (getIdUMPrmPrd8() != null && getQtaScartoUmPrm8() == null  && getIdUMSecPrd8() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd8() != null && getIdUMSecPrd8() != null)
      if (getQtaScartoUmPrm8() == null && getQtaScartoUmSec8() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaScartoUmPrm9() {
    if (getIdUMPrmPrd9() != null && getQtaScartoUmPrm9() == null  && getIdUMSecPrd9() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd9() != null && getIdUMSecPrd9() != null)
      if (getQtaScartoUmPrm9() == null && getQtaScartoUmSec9() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaScartoUmPrm10() {
    if (getIdUMPrmPrd10() != null && getQtaScartoUmPrm10() == null  && getIdUMSecPrd10() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd10() != null && getIdUMSecPrd10() != null)
      if (getQtaScartoUmPrm10() == null && getQtaScartoUmSec10() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaScartoUmPrm11() {
    if (getIdUMPrmPrd11() != null && getQtaScartoUmPrm11() == null  && getIdUMSecPrd11() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd11() != null && getIdUMSecPrd11() != null)
      if (getQtaScartoUmPrm11() == null && getQtaScartoUmSec11() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaScartoUmPrm12() {
    if (getIdUMPrmPrd12() != null && getQtaScartoUmPrm12() == null  && getIdUMSecPrd12() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd12() != null && getIdUMSecPrd12() != null)
      if (getQtaScartoUmPrm12() == null && getQtaScartoUmSec12() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaScartoUmPrm13() {
    if (getIdUMPrmPrd13() != null && getQtaScartoUmPrm13() == null  && getIdUMSecPrd13() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd13() != null && getIdUMSecPrd13() != null)
      if (getQtaScartoUmPrm13() == null && getQtaScartoUmSec13() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaScartoUmPrm14() {
    if (getIdUMPrmPrd14() != null && getQtaScartoUmPrm14() == null  && getIdUMSecPrd14() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd14() != null && getIdUMSecPrd14() != null)
      if (getQtaScartoUmPrm14() == null && getQtaScartoUmSec14() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaScartoUmPrm15() {
    if (getIdUMPrmPrd15() != null && getQtaScartoUmPrm15() == null  && getIdUMSecPrd15() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd15() != null && getIdUMSecPrd15() != null)
      if (getQtaScartoUmPrm15() == null && getQtaScartoUmSec15() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaScartoUmPrm16() {
    if (getIdUMPrmPrd16() != null && getQtaScartoUmPrm16() == null  && getIdUMSecPrd16() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd16() != null && getIdUMSecPrd16() != null)
      if (getQtaScartoUmPrm16() == null && getQtaScartoUmSec16() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaScartoUmPrm17() {
    if (getIdUMPrmPrd17() != null && getQtaScartoUmPrm17() == null  && getIdUMSecPrd17() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd17() != null && getIdUMSecPrd17() != null)
      if (getQtaScartoUmPrm17() == null && getQtaScartoUmSec17() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaScartoUmPrm18() {
    if (getIdUMPrmPrd18() != null && getQtaScartoUmPrm18() == null  && getIdUMSecPrd18() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd18() != null && getIdUMSecPrd18() != null)
      if (getQtaScartoUmPrm18() == null && getQtaScartoUmSec18() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaScartoUmPrm19() {
    if (getIdUMPrmPrd19() != null && getQtaScartoUmPrm19() == null  && getIdUMSecPrd19() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd19() != null && getIdUMSecPrd19() != null)
      if (getQtaScartoUmPrm19() == null && getQtaScartoUmSec19() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }

  public ErrorMessage checkQtaScartoUmPrm20() {
    if (getIdUMPrmPrd20() != null && getQtaScartoUmPrm20() == null  && getIdUMSecPrd20() == null)
      return new ErrorMessage("BAS0000000");
    if (getIdUMPrmPrd20() != null && getIdUMSecPrd20() != null)
      if (getQtaScartoUmPrm20() == null && getQtaScartoUmSec20() == null)
        return new ErrorMessage("THIP110340");
    return null;
  }*/
  //Fix 15030 fine


  //Fix 16109 inizio
  public BigDecimal calcolaQuantitaSec(BigDecimal qtaPrm, Articolo art, Integer idVers){
    BigDecimal ret = null;
    ArticoloVersione vers = null;
    try {
      String versKey = KeyHelper.buildObjectKey(new String[] {getIdAzienda(), art.getIdArticolo(), idVers.toString()});
      vers = ArticoloVersione.elementWithKey(versKey, PersistentObject.NO_LOCK);
      ret = art.convertiUM(qtaPrm, art.getUMPrmMag(), art.getUMSecMag(), vers);
      if (ret != null)
        //ret = ret.setScale(2, BigDecimal.ROUND_HALF_UP);//Fix 30965
        ret = Q6Calc.get().setScale(ret, 2, BigDecimal.ROUND_HALF_UP);//Fix 30965
    }
    catch (SQLException e) {
      e.printStackTrace();
    }
    return ret;
  }

  public BigDecimal calcolaQuantitaPrm(BigDecimal qtaSec, Articolo art, Integer idVers){
    BigDecimal ret = null;
    ArticoloVersione vers = null;
    try {
      String versKey = KeyHelper.buildObjectKey(new String[] {getIdAzienda(), art.getIdArticolo(), idVers.toString()});
      vers = ArticoloVersione.elementWithKey(versKey, PersistentObject.NO_LOCK);
      ret = art.convertiUM(qtaSec, art.getUMSecMag(), art.getUMPrmMag(), vers);
      if (ret != null)
        //ret = ret.setScale(2, BigDecimal.ROUND_HALF_UP);//Fix 30965
        ret = Q6Calc.get().setScale(ret, 2, BigDecimal.ROUND_HALF_UP);//Fix 30965 
    }
    catch (SQLException e) {
      e.printStackTrace();
    }
    return ret;
  }
  //Fix 16109 fine


  //Fix 14722 --inizio

  public void setBollaCucita(BollaCucitaTes bollaCucita) {
    String idAzienda = null;
    if (bollaCucita != null) {
      idAzienda = KeyHelper.getTokenObjectKey(bollaCucita.getKey(), 1);
    }
    setIdAziendaInternal(idAzienda);
    iBollaCucita.setObject(bollaCucita);
    setDirty();
    setOnDB(false);
  }

  public BollaCucitaTes getBollaCucita() {
    return (BollaCucitaTes) iBollaCucita.getObject();
  }

  public void setBollaCucitaKey(String key) {
    iBollaCucita.setKey(key);
    String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
    setIdAziendaInternal(idAzienda);
    setDirty();
    setOnDB(false);
  }

  public String getBollaCucitaKey() {
    return iBollaCucita.getKey();
  }

  public void setIdAnnoBollaCucita(String idAnnoBollaCucita) {
    String key = iBollaCucita.getKey();
    iBollaCucita.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idAnnoBollaCucita));
    setDirty();
    setOnDB(false);
  }

  public String getIdAnnoBollaCucita() {
    String key = iBollaCucita.getKey();
    String objIdAnnoBollaCucita = KeyHelper.getTokenObjectKey(key, 2);
    return objIdAnnoBollaCucita;

  }

  public void setIdNumeroBollaCucita(String idNumeroBollaCucita) {
    String key = iBollaCucita.getKey();
    iBollaCucita.setKey(KeyHelper.replaceTokenObjectKey(key, 3, idNumeroBollaCucita));
    setDirty();
    setOnDB(false);
  }

  public String getIdNumeroBollaCucita() {
    String key = iBollaCucita.getKey();
    String objIdNumeroBollaCucita = KeyHelper.getTokenObjectKey(key, 3);
    return objIdNumeroBollaCucita;
  }

  public static List cercaRilevazioniBollaCucitaRig(BollaCucitaRig riga) {
    List ret = null;
    String where = RilevazioneDatiProdTesTM.ID_AZIENDA + " ='" + riga.getIdAzienda() + "' AND " +
                   RilevazioneDatiProdTesTM.TIPO_BOLLA + " ='" + RilevazioneDatiProdTes.BOLLA_RAGGRUPPATA + "' AND " +
                   RilevazioneDatiProdTesTM.NUM_RITORNO + " ='" + riga.getNumeroRitornoAtv() + "' AND " +
                   RilevazioneDatiProdTesTM.R_ANNO_BOLLA + " ='" + riga.getIdAnnoBolla() + "' AND " +
                   RilevazioneDatiProdTesTM.R_NUMERO_BOLLA + " ='" + riga.getIdNumeroBolla() + "' AND " +
                   RilevazioneDatiProdTesTM.R_ARTICOLO + " ='" + riga.getIdArticolo() + "' AND " +
                   RilevazioneDatiProdTesTM.STATO + " !='" + DatiComuniEstesi.ANNULLATO + "'";// AND " +
                   //RilevazioneDatiProdTesTM.STATO_RIL + " !='" + RilevazioneDatiProdTes.CONVALIDATA + "'";
    try {
      ret = RilevazioneDatiProdTes.retrieveList(where, RilevazioneDatiProdTesTM.DATA_RIL + " DESC", true);
    } catch(Exception ex) {
      ex.printStackTrace(Trace.excStream);
    }
    return ret;
  }

  public static BigDecimal getQtaBuona(BollaCucitaRig riga){
	//Fix 31183 --inizio
    /*BigDecimal ret = riga != null ? riga.getQtaDaProdurrePrm() : null;
    if (ret != null) {
      Iterator iter = cercaRilevazioniBollaCucitaRig(riga).iterator();
      while (iter.hasNext()) {
        RilevazioneDatiProdTes rilevazione = (RilevazioneDatiProdTes) iter.next();
        if (rilevazione.getQuantita() != null) {
          ret = ret.subtract(rilevazione.getQuantita());
          if (ret.compareTo(new BigDecimal("0")) < 0){
            //ret = new BigDecimal("0").setScale(2);//Fix 30965
            ret = Q6Calc.get().setScale(new BigDecimal("0"), 2);//Fix 30965
          }
        }
      }
    }
    if (ret == null)
      ret = RilevazioneDatiProdTes.ZERO;
    return ret;*/
	  
	return iRilevDatiPrdTSInternal.getQtaBuonaInternal(riga);
	//Fix 31183 -- fine  
  }

  //Fix 16109 inizio
  public static BigDecimal getQtaRilevata(BollaCucitaRig riga){
    BigDecimal ret = RilevazioneDatiProdTes.ZERO;
    if (ret != null) {
      Iterator iter = cercaRilevazioniBollaCucitaRig(riga).iterator();
      while (iter.hasNext()) {
        RilevazioneDatiProdTes rilevazione = (RilevazioneDatiProdTes) iter.next();
        if (rilevazione.getQuantita() != null) {
          ret = ret.add(rilevazione.getQuantita());
        }
      }
    }
    return ret;
  }
  //Fix 16109 fine

  public int creaRilevazioniPerBolleRagg(RilevazioneDatiProdTes testata){
    int rc = 0;
    try{
      if (getTipoBolla() == RilevazioneDatiProdTes.BOLLA_CUCITA && getBollaCucita() != null) {
        if (!getBollaCucita().getRighe().isEmpty() && testata != null) {
          Iterator iterRiga = getBollaCucita().getRighe().iterator();
          while (iterRiga.hasNext() && rc >= 0) {
            RilevazioneDatiProdTes testataBollaRagg = (RilevazioneDatiProdTes) Factory.createObject(RilevazioneDatiProdTes.class);
            BollaCucitaRig rigaBolla = (BollaCucitaRig) iterRiga.next();
            testata.copyTestata(testataBollaRagg, rigaBolla);
            testataBollaRagg.setTipoBolla(RilevazioneDatiProdTes.BOLLA_RAGGRUPPATA);
            testataBollaRagg.setModalitaRilevazione(RilevazioneDatiProdTes.COMPLETA);
            testataBollaRagg.getNumeratoreHandler().setIdSerie(testata.getNumeratoreHandler().getIdSerie());
            rc = testataBollaRagg.save();
            if(rc >= 0){
              RilevazioneDatiProdRig riga = creaRigaRilevazione(testataBollaRagg);
              testataBollaRagg.getRighe().add(riga);
              rc = testataBollaRagg.save();
            }
          }
        }
      }
    }
    catch(Exception ex){ex.printStackTrace(Trace.excStream);}
    return rc;
  }

  //Fix 16109 inizio
  public RilevazioneDatiProdMat gestoreQuantitaRigaMat(RilevazioneDatiProdMat riga, Articolo articolo){
    if(riga != null && articolo != null){
      if (articolo.getUMPrmMag() != null && articolo.getUMSecMag() != null) {
        BigDecimal ZERO = new BigDecimal("0");
        if (riga.getQtaPrlUmPrm() != null && riga.getQtaPrlUmSec() == null) {
          BigDecimal qta = articolo.convertiUM(riga.getQtaPrlUmPrm(), articolo.getUMPrmMag(), articolo.getUMSecMag(), riga.getArticoloVersione());
          if (qta != null)
            //qta = qta.setScale(2, BigDecimal.ROUND_HALF_UP);//Fix 30965
            qta = Q6Calc.get().setScale(qta, 2, BigDecimal.ROUND_HALF_UP);//Fix 30965
          riga.setQtaPrlUmSec(qta);
        }
        else if (riga.getQtaPrlUmPrm() == null && riga.getQtaPrlUmSec() != null) {
          BigDecimal qta = articolo.convertiUM(riga.getQtaPrlUmSec(), articolo.getUMSecMag(), articolo.getUMPrmMag(), riga.getArticoloVersione());
          if (qta != null)
            //qta = qta.setScale(2, BigDecimal.ROUND_HALF_UP);//Fix 30965
            qta = Q6Calc.get().setScale(qta, 2, BigDecimal.ROUND_HALF_UP);//Fix 30965  
          riga.setQtaPrlUmPrm(qta);
        }
        else if (riga.getQtaPrlUmPrm() == null && riga.getQtaPrlUmSec() == null) {
          riga.setQtaPrlUmPrm(ZERO);
          riga.setQtaPrlUmSec(ZERO);
        }
      }
    }
    return riga;
  }

  public RilevazioneDatiProdVrs gestoreQuantitaRigaVrs(RilevazioneDatiProdVrs riga, Articolo articolo){
    if(riga != null && articolo != null){
      if (articolo.getUMPrmMag() != null && articolo.getUMSecMag() != null) {
        BigDecimal ZERO = new BigDecimal("0");
        if (riga.getQtaVrsUmPrm() != null && riga.getQtaVrsUmSec() == null) {
          BigDecimal qta = articolo.convertiUM(riga.getQtaVrsUmPrm(), articolo.getUMPrmMag(), articolo.getUMSecMag(), riga.getArticoloVersione());
          if (qta != null)
            //qta = qta.setScale(2, BigDecimal.ROUND_HALF_UP);//Fix 30965
            qta = Q6Calc.get().setScale(qta, 2, BigDecimal.ROUND_HALF_UP);//Fix 30965
          riga.setQtaVrsUmSec(qta);
        }
        else if (riga.getQtaVrsUmPrm() == null && riga.getQtaVrsUmSec() != null) {
          BigDecimal qta = articolo.convertiUM(riga.getQtaVrsUmSec(), articolo.getUMSecMag(), articolo.getUMPrmMag(), riga.getArticoloVersione());
          if (qta != null)
            //qta = qta.setScale(2, BigDecimal.ROUND_HALF_UP);//Fix 30965
            qta = Q6Calc.get().setScale(qta, 2, BigDecimal.ROUND_HALF_UP);//Fix 30965
          riga.setQtaVrsUmPrm(qta);
        }
        else if (riga.getQtaVrsUmPrm() == null && riga.getQtaVrsUmSec() == null) {
          riga.setQtaVrsUmPrm(ZERO);
          riga.setQtaVrsUmSec(ZERO);
        }

        if (riga.getQtaScaUmPrm() != null && riga.getQtaScaUmSec() == null) {
          BigDecimal qta = articolo.convertiUM(riga.getQtaScaUmPrm(), articolo.getUMPrmMag(), articolo.getUMSecMag(), riga.getArticoloVersione());
          if (qta != null)
            //qta = qta.setScale(2, BigDecimal.ROUND_HALF_UP);//Fix 30965
            qta = Q6Calc.get().setScale(qta, 2, BigDecimal.ROUND_HALF_UP);//Fix 30965
          riga.setQtaScaUmSec(qta);
        }
        else if (riga.getQtaScaUmPrm() == null && riga.getQtaScaUmSec() != null) {
          BigDecimal qta = articolo.convertiUM(riga.getQtaScaUmSec(), articolo.getUMSecMag(), articolo.getUMPrmMag(), riga.getArticoloVersione());
          if (qta != null)
            //qta = qta.setScale(2, BigDecimal.ROUND_HALF_UP);//Fix 30965
            qta = Q6Calc.get().setScale(qta, 2, BigDecimal.ROUND_HALF_UP);//Fix 30965
          riga.setQtaScaUmPrm(qta);
        }
        else if (riga.getQtaScaUmPrm() == null && riga.getQtaScaUmSec() == null) {
          riga.setQtaScaUmPrm(ZERO);
          riga.setQtaScaUmSec(ZERO);
        }
      }
    }
    return riga;
  }
  //Fix 16109 fine

  public static boolean verificaAttivitaMat(AttivitaEsecMateriale atvEsecMat, String idArt, Integer idConfig, Integer idVersione) {
    if (atvEsecMat != null) {
      if (idArt != null && idConfig != null && idVersione != null) {
        if (idArt.equals(atvEsecMat.getIdArticolo()) && idConfig.equals(atvEsecMat.getIdConfigurazione())
            && idVersione.equals(atvEsecMat.getIdVersione()))
          return true;
        else
          return false;
      }
      else if (idArt != null && idConfig != null) {
        if (idArt.equals(atvEsecMat.getIdArticolo()) && idConfig.equals(atvEsecMat.getIdConfigurazione()))
          return true;
        else
          return false;
      }
      else if (idArt != null && idVersione != null) {
        if (idArt.equals(atvEsecMat.getIdArticolo()) && idVersione.equals(atvEsecMat.getIdVersione()))
          return true;
        else
          return false;
      }
      else if (idArt != null) {
        if (idArt.equals(atvEsecMat.getIdArticolo()))
          return true;
        else
          return false;
      }
    }
    return false;
  }

  public int aggiornaRigaBollaRagg(RilevazioneDatiProdTes testata, RilevazioneDatiProdRig riga){
    int rc = 0;
    if(testata != null && riga != null){
      try{
        String where = RilevazioneDatiProdTesTM.ID_AZIENDA + "='" + testata.getIdAzienda() + "' AND " +
            RilevazioneDatiProdTesTM.R_ANNO_RIL_BOL + "='" + testata.getIdAnnoRilev() + "' AND " +
            RilevazioneDatiProdTesTM.R_NUM_RIL_BOL + "='" + testata.getIdNumeroRilev() + "'";
        List bollaRaggList = RilevazioneDatiProdTes.retrieveList(where, "", false);
        Iterator iterRilBollaRagg = bollaRaggList.iterator();
        while(iterRilBollaRagg.hasNext() && rc >= 0){
          RilevazioneDatiProdTes rilevBollaRaggTes = (RilevazioneDatiProdTes)iterRilBollaRagg.next();
          rilevBollaRaggTes.getRighe().add(riga);
          rc = rilevBollaRaggTes.save();
        }
      }
      catch(Exception e){e.printStackTrace(Trace.excStream);}
    }
    return rc;
  }
  //Fix 14722 --fine

  //Fix 15030 --inizio
  public static boolean verificaAttivitaPrd(AttivitaEsecProdotto atvEsecPrd, String idArt, Integer idConfig, Integer idVersione) {
    if (atvEsecPrd != null) {
      if (idArt != null && idConfig != null && idVersione != null) {
        if (idArt.equals(atvEsecPrd.getIdArticolo()) && idConfig.equals(atvEsecPrd.getIdConfigurazione())
            && idVersione.equals(atvEsecPrd.getIdVersione()))
          return true;
        else
          return false;
      }
      else if (idArt != null && idConfig != null) {
        if (idArt.equals(atvEsecPrd.getIdArticolo()) && idConfig.equals(atvEsecPrd.getIdConfigurazione()))
          return true;
        else
          return false;
      }
      else if (idArt != null && idVersione != null) {
        if (idArt.equals(atvEsecPrd.getIdArticolo()) && idVersione.equals(atvEsecPrd.getIdVersione()))
          return true;
        else
          return false;
      }
      else if (idArt != null) {
        if (idArt.equals(atvEsecPrd.getIdArticolo()))
          return true;
        else
          return false;
      }
    }
    return false;
  }

  public static boolean verificaOrdEsecArt(OrdineEsecutivo ordEsec, String idArt, Integer idConfig, Integer idVersione) {
    if (ordEsec != null) {
      if (idArt != null && idConfig != null && idVersione != null) {
        if (idArt.equals(ordEsec.getIdArticolo()) && idConfig.equals(ordEsec.getIdConfigurazione())
            && idVersione.equals(ordEsec.getIdVersione()))
          return true;
        else
          return false;
      }
      else if (idArt != null && idConfig != null) {
        if (idArt.equals(ordEsec.getIdArticolo()) && idConfig.equals(ordEsec.getIdConfigurazione()))
          return true;
        else
          return false;
      }
      else if (idArt != null && idVersione != null) {
        if (idArt.equals(ordEsec.getIdArticolo()) && idVersione.equals(ordEsec.getIdVersione()))
          return true;
        else
          return false;
      }
      else if (idArt != null) {
        if (idArt.equals(ordEsec.getIdArticolo()))
          return true;
        else
          return false;
      }
    }
    return false;
  }
  //Fix 15030 --fine
  //Fix 14725 --inizio
  public static synchronized BigDecimal[] getQtaRilevata(AttivitaEsecutiva atv) {
	BigDecimal[] Qta = new BigDecimal[2];
	try {
	   ResultSet rs = null;
	   PreparedStatement ps = SommaQtaRilevataStmt.getStatement();
	   Database db = ConnectionManager.getCurrentDatabase();
	   db.setString(ps, 1, atv.getIdAzienda());
	   db.setString(ps, 2, atv.getNumeroRitorno());
	   rs = ps.executeQuery();
	   if (rs.next()) {
	  	 //Fix 17956 inizio
	  	 /*Qta.get(0) = rs.getBigDecimal(1);
	     Qta.get(1) = rs.getBigDecimal(2);*/
	     Qta[0] = rs.getBigDecimal(1)!=null ? rs.getBigDecimal(1) : new BigDecimal(0);
	     Qta[1] = rs.getBigDecimal(2)!=null ? rs.getBigDecimal(2) : new BigDecimal(0);
	     //Fix 17956 fine
	   }
	}
	catch (SQLException ex) {
	  ex.printStackTrace(Trace.excStream);
	}
	return Qta;
  }

  public static BigDecimal[] calcolaQuantitaDaPorduire(AttivitaEsecutiva atv)
  {
    BigDecimal[] qtaDaProdurre = new BigDecimal[2];
    qtaDaProdurre[0] = RilevazioneDatiProdTes.ZERO;
    qtaDaProdurre[1] = RilevazioneDatiProdTes.ZERO;
    BigDecimal[] qtaRilevata = RilevDatiPrdTS.getQtaRilevata(atv);
    if (atv.getQtaResiduaUMPrm() != null) {
      qtaDaProdurre[0] = atv.getQtaResiduaUMPrm();
      if (qtaRilevata[0] != null) {
    	qtaDaProdurre[0] = qtaDaProdurre[0].subtract(qtaRilevata[0]);
      }
    }
    if (atv.getQtaResiduaUMSec() != null) {
      qtaDaProdurre[1] = atv.getQtaResiduaUMSec();
      if (qtaRilevata[1] != null) {
    	qtaDaProdurre[1] = qtaDaProdurre[1].subtract(qtaRilevata[1]);
      }
    }
    return qtaDaProdurre;
  }
  //Fix 14725 --fine
  //Fix 15250 inizio
  /*----- Check IdLotto-----*/
 public ErrorMessage checkIdLotto1() {
   //if(getMateriale1() != null && getMateriale1() .isArticLotto() && getIdLotto1() == null ) //Fix 25930
	 if(getMateriale1() != null && getMateriale1().isArticLotto() && getIdLotto1() == null && getQtaPrlUmPrm1() != null && getQtaPrlUmPrm1().compareTo(ZERO) != 0) //Fix 25930
     return new ErrorMessage("BAS0000000");
   return null;
 }
 public ErrorMessage checkIdLotto2() {
   //if(getMateriale2() != null && getMateriale2() .isArticLotto() && getIdLotto2() == null ) //Fix 25930
	 if(getMateriale2() != null && getMateriale2().isArticLotto() && getIdLotto2() == null && getQtaPrlUmPrm2() != null && getQtaPrlUmPrm2().compareTo(ZERO) != 0) //Fix 25930
     return new ErrorMessage("BAS0000000");
   return null;
 }
 public ErrorMessage checkIdLotto3() {
    //if(getMateriale3() != null && getMateriale3().isArticLotto() && getIdLotto3() == null ) //Fix 25930
	 if(getMateriale3() != null && getMateriale3().isArticLotto() && getIdLotto3() == null && getQtaPrlUmPrm3() != null && getQtaPrlUmPrm3().compareTo(ZERO) != 0) //Fix 25930
      return new ErrorMessage("BAS0000000");
    return null;
  }
  public ErrorMessage checkIdLotto4() {
    //if(getMateriale4() != null && getMateriale4() .isArticLotto() && getIdLotto4() == null ) //Fix 25930
  	if(getMateriale4() != null && getMateriale4() .isArticLotto() && getIdLotto4() == null && getQtaPrlUmPrm4() != null && getQtaPrlUmPrm4().compareTo(ZERO) != 0) //Fix 25930
      return new ErrorMessage("BAS0000000");
    return null;
  }
  public ErrorMessage checkIdLotto5() {
     //if(getMateriale5() != null && getMateriale5() .isArticLotto() && getIdLotto5() == null ) //Fix 25930
  	if(getMateriale5() != null && getMateriale5() .isArticLotto() && getIdLotto5() == null && getQtaPrlUmPrm5() != null && getQtaPrlUmPrm5().compareTo(ZERO) != 0) //Fix 25930
       return new ErrorMessage("BAS0000000");
     return null;
   }
   public ErrorMessage checkIdLotto6() {
     //if(getMateriale6() != null && getMateriale6() .isArticLotto() && getIdLotto6() == null ) //Fix 25930
  	 if(getMateriale6() != null && getMateriale6() .isArticLotto() && getIdLotto6() == null && getQtaPrlUmPrm6() != null && getQtaPrlUmPrm6().compareTo(ZERO) != 0) //Fix 25930
       return new ErrorMessage("BAS0000000");
     return null;
   }

   public ErrorMessage checkIdLotto7() {
     //if (getMateriale7() != null && getMateriale7().isArticLotto() && getIdLotto7() == null) //Fix 25930
  	 if (getMateriale7() != null && getMateriale7().isArticLotto() && getIdLotto7() == null && getQtaPrlUmPrm7() != null && getQtaPrlUmPrm7().compareTo(ZERO) != 0) //Fix 25930
       return new ErrorMessage("BAS0000000");
     return null;
   }

   public ErrorMessage checkIdLotto8() {
     //if (getMateriale8() != null && getMateriale8().isArticLotto() && getIdLotto8() == null) //Fix 25930
  	 if (getMateriale8() != null && getMateriale8().isArticLotto() && getIdLotto8() == null && getQtaPrlUmPrm8() != null && getQtaPrlUmPrm8().compareTo(ZERO) != 0) //Fix 25930
       return new ErrorMessage("BAS0000000");
     return null;
   }
   public ErrorMessage checkIdLotto9() {
      //if (getMateriale9() != null && getMateriale9().isArticLotto() && getIdLotto9() == null) //Fix 25930
  	 if (getMateriale9() != null && getMateriale9().isArticLotto() && getIdLotto9() == null && getQtaPrlUmPrm9() != null && getQtaPrlUmPrm9().compareTo(ZERO) != 0) //Fix 25930
        return new ErrorMessage("BAS0000000");
      return null;
    }

    public ErrorMessage checkIdLotto10() {
      //if (getMateriale10() != null && getMateriale10().isArticLotto() && getIdLotto10() == null) //Fix 25930
    	if (getMateriale10() != null && getMateriale10().isArticLotto() && getIdLotto10() == null && getQtaPrlUmPrm10() != null && getQtaPrlUmPrm10().compareTo(ZERO) != 0) //Fix 25930
        return new ErrorMessage("BAS0000000");
      return null;
   }
   public ErrorMessage checkIdLotto11() {
     //if (getMateriale11() != null && getMateriale11().isArticLotto() && getIdLotto11() == null) //Fix 25930
  	 if (getMateriale11() != null && getMateriale11().isArticLotto() && getIdLotto11() == null && getQtaPrlUmPrm11() != null && getQtaPrlUmPrm11().compareTo(ZERO) != 0) //Fix 25930
       return new ErrorMessage("BAS0000000");
     return null;
  }
  public ErrorMessage checkIdLotto12() {
     //if (getMateriale12() != null && getMateriale12().isArticLotto() && getIdLotto12() == null) //Fix 25930
  	if (getMateriale12() != null && getMateriale12().isArticLotto() && getIdLotto12() == null && getQtaPrlUmPrm12() != null && getQtaPrlUmPrm12().compareTo(ZERO) != 0) //Fix 25930
       return new ErrorMessage("BAS0000000");
     return null;
  }
  public ErrorMessage checkIdLotto13() {
       //if (getMateriale13() != null && getMateriale13().isArticLotto() && getIdLotto13() == null) //Fix 25930
  	if (getMateriale13() != null && getMateriale13().isArticLotto() && getIdLotto13() == null && getQtaPrlUmPrm13() != null && getQtaPrlUmPrm13().compareTo(ZERO) != 0) //Fix 25930
         return new ErrorMessage("BAS0000000");
       return null;
   }
   public ErrorMessage checkIdLotto14() {
        //if (getMateriale14() != null && getMateriale14().isArticLotto() && getIdLotto14() == null) //Fix 25930
  	 if (getMateriale14() != null && getMateriale14().isArticLotto() && getIdLotto14() == null && getQtaPrlUmPrm14() != null && getQtaPrlUmPrm14().compareTo(ZERO) != 0) //Fix 25930
          return new ErrorMessage("BAS0000000");
        return null;
   }
   public ErrorMessage checkIdLotto15() {
       //if (getMateriale15() != null && getMateriale15().isArticLotto() && getIdLotto15() == null) //Fix 25930
  	   if (getMateriale15() != null && getMateriale15().isArticLotto() && getIdLotto15() == null && getQtaPrlUmPrm15() != null && getQtaPrlUmPrm15().compareTo(ZERO) != 0) //Fix 25930
         return new ErrorMessage("BAS0000000");
       return null;
  }
  public ErrorMessage checkIdLotto16() {
      //if (getMateriale16() != null && getMateriale16().isArticLotto() && getIdLotto16() == null) //Fix 25930
  		if (getMateriale16() != null && getMateriale16().isArticLotto() && getIdLotto16() == null && getQtaPrlUmPrm16() != null && getQtaPrlUmPrm16().compareTo(ZERO) != 0) //Fix 25930
           return new ErrorMessage("BAS0000000");
         return null;
  }
  public ErrorMessage checkIdLotto17() {
         //if (getMateriale17() != null && getMateriale17().isArticLotto() && getIdLotto17() == null) //Fix 25930
  			 if (getMateriale17() != null && getMateriale17().isArticLotto() && getIdLotto17() == null && getQtaPrlUmPrm17() != null && getQtaPrlUmPrm17().compareTo(ZERO) != 0) //Fix 25930
           return new ErrorMessage("BAS0000000");
         return null;
  }
  public ErrorMessage checkIdLotto18() {
           //if (getMateriale18() != null && getMateriale18().isArticLotto() && getIdLotto18() == null) //Fix 25930
  				 if (getMateriale18() != null && getMateriale18().isArticLotto() && getIdLotto18() == null && getQtaPrlUmPrm18() != null && getQtaPrlUmPrm18().compareTo(ZERO) != 0) //Fix 25930
             return new ErrorMessage("BAS0000000");
           return null;
  }
  public ErrorMessage checkIdLotto19() {
          //if (getMateriale19() != null && getMateriale19().isArticLotto() && getIdLotto19() == null) //Fix 25930
  				if (getMateriale19() != null && getMateriale19().isArticLotto() && getIdLotto19() == null && getQtaPrlUmPrm19() != null && getQtaPrlUmPrm19().compareTo(ZERO) != 0) //Fix 25930
            return new ErrorMessage("BAS0000000");
          return null;
 }
 public ErrorMessage checkIdLotto20() {
           //if (getMateriale20() != null && getMateriale20().isArticLotto() && getIdLotto20() == null) //Fix 25930
	 				 if (getMateriale20() != null && getMateriale20().isArticLotto() && getIdLotto20() == null && getQtaPrlUmPrm20() != null && getQtaPrlUmPrm20().compareTo(ZERO) != 0) //Fix 25930
             return new ErrorMessage("BAS0000000");
           return null;
 }

 //Fix 16109 inizio
 protected boolean haLottoProdotto(int i) {
   //Fix 35514 inizio
   if (getPersDatiPrdCausaleRilev() != null) {
	   CausaleDocProduzione cau = getPersDatiPrdCausaleRilev().getCausaleDocumento();
	   if (cau != null && cau.getAbilitaVersamenti() == CausaleDocProduzione.NO)
	     return false;
   }
   //Fix 35514 fine 
   Articolo articolo = null;
   String idAnnoOrdine = null;
   String idNumeroOrdine = null;
   Integer idRigaAtv = null;
   if (i == 1) {
     articolo = getProdotto1();
     idAnnoOrdine = getIdAnnoOrdine1();
     idNumeroOrdine = getIdNumeroOrdine1();
     idRigaAtv = getIdRigaAttivita1();
   }
   else if (i == 2) {
     articolo = getProdotto2();
     idAnnoOrdine = getIdAnnoOrdine2();
     idNumeroOrdine = getIdNumeroOrdine2();
     idRigaAtv = getIdRigaAttivita2();
   }
   else if (i == 3) {
     articolo = getProdotto3();
     idAnnoOrdine = getIdAnnoOrdine3();
     idNumeroOrdine = getIdNumeroOrdine3();
     idRigaAtv = getIdRigaAttivita3();
   }
   else if (i == 4) {
     articolo = getProdotto4();
     idAnnoOrdine = getIdAnnoOrdine4();
     idNumeroOrdine = getIdNumeroOrdine4();
     idRigaAtv = getIdRigaAttivita4();
   }
   else if (i == 5) {
     articolo = getProdotto5();
     idAnnoOrdine = getIdAnnoOrdine5();
     idNumeroOrdine = getIdNumeroOrdine5();
     idRigaAtv = getIdRigaAttivita5();
   }
   else if (i == 6) {
     articolo = getProdotto6();
     idAnnoOrdine = getIdAnnoOrdine6();
     idNumeroOrdine = getIdNumeroOrdine6();
     idRigaAtv = getIdRigaAttivita6();
   }
   else if (i == 7) {
     articolo = getProdotto7();
     idAnnoOrdine = getIdAnnoOrdine7();
     idNumeroOrdine = getIdNumeroOrdine7();
     idRigaAtv = getIdRigaAttivita7();
   }
   else if (i == 8) {
     articolo = getProdotto8();
     idAnnoOrdine = getIdAnnoOrdine8();
     idNumeroOrdine = getIdNumeroOrdine8();
     idRigaAtv = getIdRigaAttivita8();
   }
   else if (i == 9) {
     articolo = getProdotto9();
     idAnnoOrdine = getIdAnnoOrdine9();
     idNumeroOrdine = getIdNumeroOrdine9();
     idRigaAtv = getIdRigaAttivita9();
   }
   else if (i == 10) {
     articolo = getProdotto10();
     idAnnoOrdine = getIdAnnoOrdine10();
     idNumeroOrdine = getIdNumeroOrdine10();
     //idRigaAtv = getIdRigaAttivita11(); //Fix 18536
     idRigaAtv = getIdRigaAttivita10(); //Fix 18536 Fine
   }
   //Fix 18536 Inizio
   else if (i == 11) {
     articolo = getProdotto11();
     idAnnoOrdine = getIdAnnoOrdine11();
     idNumeroOrdine = getIdNumeroOrdine11();
     idRigaAtv = getIdRigaAttivita11();
   }
   //Fix 18536 Fine
   else if (i == 12) {
     articolo = getProdotto12();
     idAnnoOrdine = getIdAnnoOrdine12();
     idNumeroOrdine = getIdNumeroOrdine12();
     idRigaAtv = getIdRigaAttivita12();
   }
   else if (i == 13) {
     articolo = getProdotto13();
     idAnnoOrdine = getIdAnnoOrdine13();
     idNumeroOrdine = getIdNumeroOrdine13();
     idRigaAtv = getIdRigaAttivita13();
   }
   else if (i == 14) {
     articolo = getProdotto14();
     idAnnoOrdine = getIdAnnoOrdine14();
     idNumeroOrdine = getIdNumeroOrdine14();
     idRigaAtv = getIdRigaAttivita14();
   }
   else if (i == 15) {
     articolo = getProdotto15();
     idAnnoOrdine = getIdAnnoOrdine15();
     idNumeroOrdine = getIdNumeroOrdine15();
     idRigaAtv = getIdRigaAttivita15();
   }
   else if (i == 16) {
     articolo = getProdotto16();
     idAnnoOrdine = getIdAnnoOrdine16();
     idNumeroOrdine = getIdNumeroOrdine16();
     idRigaAtv = getIdRigaAttivita16();
   }
   else if (i == 17) {
     articolo = getProdotto17();
     idAnnoOrdine = getIdAnnoOrdine17();
     idNumeroOrdine = getIdNumeroOrdine17();
     idRigaAtv = getIdRigaAttivita17();
   }
   else if (i == 18) {
     articolo = getProdotto18();
     idAnnoOrdine = getIdAnnoOrdine18();
     idNumeroOrdine = getIdNumeroOrdine18();
     idRigaAtv = getIdRigaAttivita18();
   }
   else if (i == 19) {
     articolo = getProdotto19();
     idAnnoOrdine = getIdAnnoOrdine19();
     idNumeroOrdine = getIdNumeroOrdine19();
     idRigaAtv = getIdRigaAttivita19();
   }
   else if (i == 20) {
     articolo = getProdotto20();
     idAnnoOrdine = getIdAnnoOrdine20();
     idNumeroOrdine = getIdNumeroOrdine20();
     idRigaAtv = getIdRigaAttivita20();
   }

   boolean ret = false;
   AttivitaEsecutiva attEsec = null;
   if (getTipoBolla() ==  RilevazioneDatiProdTes.BOLLA_CUCITA)
     attEsec = getAttivitaEsecutiva(idAnnoOrdine,idNumeroOrdine, idRigaAtv);
   else
     attEsec = getAttivitaEsecutiva();
   if (!articolo.isArticLotto() ||
       (attEsec != null && !attEsec.isAttivitaFinale() && getTipoBolla() ==  RilevazioneDatiProdTes.BOLLA_CUCITA)) //Fix 15866 //Fix 17550
     ret = false;
   else {
     //if (articolo.getArticoloDatiMagaz().getGenAutLotProd() == ArticoloDatiMagaz.CREA_DA_DOCUMENTO)//Fix 30104
     if (isCreazioneAutomaticaLottiDaDoc(articolo)) //Fix 30104
       ret = false;
     else
       ret = true;
   }
   return ret;
 }

 protected AttivitaEsecutiva getAttivitaEsecutiva(String idAnnoOrdine, String idNumeroOrdine, Integer idRigaAtv) {
   Object[] keys = new Object[4];
   keys[0] = getIdAzienda();
   keys[1] = idAnnoOrdine;
   keys[2] = idNumeroOrdine;
   keys[3] = idRigaAtv;
   String key = KeyHelper.buildObjectKey(keys);
   AttivitaEsecutiva atv = null;
   try {
     atv = AttivitaEsecutiva.elementWithKey(key, PersistentObject.NO_LOCK);
   }
   catch (SQLException e) {
     e.printStackTrace();
   }
   return atv;
 }

  public ErrorMessage checkIdLottoProdotto1() {
    //Fix 20804 inizio
    if(getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO || getTipoTimbratura() == RilevazioneDatiProdRig.RIPRESA || isInPrelieviJsp())//Fix 33053
  	  return null;
    //Fix 20804 fine
    if(getProdotto1() != null && haLottoProdotto(1) && getIdLottoProdotto1() == null )
      return new ErrorMessage("BAS0000000");
    return null;
  }
  public ErrorMessage checkIdLottoProdotto2() {
    //Fix 32903 -- Inizio
    if(getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO || getTipoTimbratura() == RilevazioneDatiProdRig.RIPRESA || isInPrelieviJsp())//Fix 33053
  	  return null;
    //Fix 32903 -- Fine
    if(getProdotto2() != null && haLottoProdotto(2) && getIdLottoProdotto2() == null )
      return new ErrorMessage("BAS0000000");
    return null;
  }
  public ErrorMessage checkIdLottoProdotto3() {
	//Fix 32903 -- Inizio
    if(getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO || getTipoTimbratura() == RilevazioneDatiProdRig.RIPRESA || isInPrelieviJsp())//Fix 33053
  	  return null;
    //Fix 32903 -- Fine
    if(getProdotto3() != null && haLottoProdotto(3) && getIdLottoProdotto3() == null )
      return new ErrorMessage("BAS0000000");
    return null;
  }
  public ErrorMessage checkIdLottoProdotto4() {
	//Fix 32903 -- Inizio
    if(getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO || getTipoTimbratura() == RilevazioneDatiProdRig.RIPRESA || isInPrelieviJsp())//Fix 33053
  	  return null;
    //Fix 32903 -- Fine
    if(getProdotto4() != null && haLottoProdotto(4) && getIdLottoProdotto4() == null )
      return new ErrorMessage("BAS0000000");
    return null;
  }
  public ErrorMessage checkIdLottoProdotto5() {
	//Fix 32903 -- Inizio
    if(getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO || getTipoTimbratura() == RilevazioneDatiProdRig.RIPRESA || isInPrelieviJsp())//Fix 33053
  	  return null;
    //Fix 32903 -- Fine
    if(getProdotto5() != null && haLottoProdotto(5) && getIdLottoProdotto5() == null )
      return new ErrorMessage("BAS0000000");
    return null;
  }
  public ErrorMessage checkIdLottoProdotto6() {
	//Fix 32903 -- Inizio
    if(getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO || getTipoTimbratura() == RilevazioneDatiProdRig.RIPRESA || isInPrelieviJsp())//Fix 33053
  	  return null;
    //Fix 32903 -- Fine
    if(getProdotto6() != null && haLottoProdotto(6) && getIdLottoProdotto6() == null )
      return new ErrorMessage("BAS0000000");
    return null;
  }

  public ErrorMessage checkIdLottoProdotto7() {
	//Fix 32903 -- Inizio
	if(getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO || getTipoTimbratura() == RilevazioneDatiProdRig.RIPRESA || isInPrelieviJsp())//Fix 33053
	  return null;
	//Fix 32903 -- Fine
    if (getProdotto7() != null && haLottoProdotto(7) && getIdLottoProdotto7() == null)
      return new ErrorMessage("BAS0000000");
    return null;
  }

  public ErrorMessage checkIdLottoProdotto8() {
	//Fix 32903 -- Inizio
    if(getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO || getTipoTimbratura() == RilevazioneDatiProdRig.RIPRESA || isInPrelieviJsp())//Fix 33053
  	  return null;
    //Fix 32903 -- Fine
    if (getProdotto8() != null && haLottoProdotto(8) && getIdLottoProdotto8() == null)
      return new ErrorMessage("BAS0000000");
    return null;
  }
  public ErrorMessage checkIdLottoProdotto9() {
	//Fix 32903 -- Inizio
    if(getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO || getTipoTimbratura() == RilevazioneDatiProdRig.RIPRESA || isInPrelieviJsp())//Fix 33053
  	  return null;
    //Fix 32903 -- Fine
    if (getProdotto9() != null && haLottoProdotto(9) && getIdLottoProdotto9() == null)
      return new ErrorMessage("BAS0000000");
    return null;
  }

  public ErrorMessage checkIdLottoProdotto10() {
	//Fix 32903 -- Inizio
    if(getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO || getTipoTimbratura() == RilevazioneDatiProdRig.RIPRESA || isInPrelieviJsp())//Fix 33053
  	  return null;
    //Fix 32903 -- Fine
    if (getProdotto10() != null && haLottoProdotto(10) && getIdLottoProdotto10() == null)
      return new ErrorMessage("BAS0000000");
    return null;
  }
  public ErrorMessage checkIdLottoProdotto11() {
	//Fix 32903 -- Inizio
    if(getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO || getTipoTimbratura() == RilevazioneDatiProdRig.RIPRESA || isInPrelieviJsp())//Fix 33053
  	  return null;
    //Fix 32903 -- Fine
	if (getProdotto11() != null && haLottoProdotto(11) && getIdLottoProdotto11() == null)
      return new ErrorMessage("BAS0000000");
    return null;
  }
  public ErrorMessage checkIdLottoProdotto12() {
	//Fix 32903 -- Inizio
    if(getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO || getTipoTimbratura() == RilevazioneDatiProdRig.RIPRESA || isInPrelieviJsp())//Fix 33053
  	  return null;
    //Fix 32903 -- Fine
	if (getProdotto12() != null && haLottoProdotto(12) && getIdLottoProdotto12() == null)
      return new ErrorMessage("BAS0000000");
    return null;
  }
  public ErrorMessage checkIdLottoProdotto13() {
	//Fix 32903 -- Inizio
    if(getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO || getTipoTimbratura() == RilevazioneDatiProdRig.RIPRESA || isInPrelieviJsp())//Fix 33053
  	  return null;
    //Fix 32903 -- Fine
	if (getProdotto13() != null && haLottoProdotto(13) && getIdLottoProdotto13() == null)
      return new ErrorMessage("BAS0000000");
    return null;
  }
  public ErrorMessage checkIdLottoProdotto14() {
	//Fix 32903 -- Inizio
    if(getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO || getTipoTimbratura() == RilevazioneDatiProdRig.RIPRESA || isInPrelieviJsp())//Fix 33053
  	  return null;
    //Fix 32903 -- Fine
	if (getProdotto14() != null && haLottoProdotto(14) && getIdLottoProdotto14() == null)
      return new ErrorMessage("BAS0000000");
    return null;
  }
  public ErrorMessage checkIdLottoProdotto15() {
	//Fix 32903 -- Inizio
    if(getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO || getTipoTimbratura() == RilevazioneDatiProdRig.RIPRESA || isInPrelieviJsp())//Fix 33053
  	  return null;
    //Fix 32903 -- Fine
	if (getProdotto15() != null && haLottoProdotto(15) && getIdLottoProdotto15() == null)
      return new ErrorMessage("BAS0000000");
    return null;
  }
  public ErrorMessage checkIdLottoProdotto16() {
	//Fix 32903 -- Inizio
    if(getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO || getTipoTimbratura() == RilevazioneDatiProdRig.RIPRESA || isInPrelieviJsp())//Fix 33053
  	  return null;
    //Fix 32903 -- Fine
	if (getProdotto16() != null && haLottoProdotto(16) && getIdLottoProdotto16() == null)
      return new ErrorMessage("BAS0000000");
    return null;
  }
  public ErrorMessage checkIdLottoProdotto17() {
	//Fix 32903 -- Inizio
    if(getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO || getTipoTimbratura() == RilevazioneDatiProdRig.RIPRESA || isInPrelieviJsp())//Fix 33053
  	  return null;
    //Fix 32903 -- Fine
	if (getProdotto17() != null && haLottoProdotto(17) && getIdLottoProdotto17() == null)
      return new ErrorMessage("BAS0000000");
    return null;
  }
  public ErrorMessage checkIdLottoProdotto18() {
	//Fix 32903 -- Inizio
    if(getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO || getTipoTimbratura() == RilevazioneDatiProdRig.RIPRESA || isInPrelieviJsp())//Fix 33053
  	  return null;
    //Fix 32903 -- Fine
	if (getProdotto18() != null && haLottoProdotto(18) && getIdLottoProdotto18() == null)
      return new ErrorMessage("BAS0000000");
    return null;
  }
  public ErrorMessage checkIdLottoProdotto19() {
	//Fix 32903 -- Inizio
    if(getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO || getTipoTimbratura() == RilevazioneDatiProdRig.RIPRESA || isInPrelieviJsp())//Fix 33053
  	  return null;
    //Fix 32903 -- Fine
	if (getProdotto19() != null && haLottoProdotto(19) && getIdLottoProdotto19() == null)
      return new ErrorMessage("BAS0000000");
    return null;
  }
  public ErrorMessage checkIdLottoProdotto20() {
	//Fix 32903 -- Inizio
    if(getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO || getTipoTimbratura() == RilevazioneDatiProdRig.RIPRESA || isInPrelieviJsp())//Fix 33053
  	  return null;
    //Fix 32903 -- Fine
	if (getProdotto20() != null && haLottoProdotto(20) && getIdLottoProdotto20() == null)
      return new ErrorMessage("BAS0000000");
    return null;
  }
  //Fix 16109 fine

 public Vector checkGiacenzaNegativaPerLotti() {
   Vector errors = new Vector();
   //Fix 38436 inizio
   try {
     boolean usawarning = SaldoMagLotto.controllaAutorizzazioniTaskForzaUsoLotto();
     if (!usawarning)
       return errors;
   }
   catch (Exception e) {
     e.printStackTrace();
   }
   //Fix 38436 fine
   //Fix 38436 blocco scommentato inizio
   //Fix 35415 -- Blocco commentato inizio
   Vector params;
   //Fix 18536 inizio
   int firstIndex = (iCurrentNumPag - 1) * 20;
   int lastIndex = firstIndex + 19;
   //Fix 18536 fine
   try {
     for (int i = 1; i < 21; i++) {
       String getIdMateriale = "getIdMateriale" + String.valueOf(i);
       String getIdLotto = "getIdLotto" + String.valueOf(i);
       String getIdMagazzinoPrl = "getIdMagazzinoPrl" + String.valueOf(i);
       String getIdConfigurazione = "getIdConfigurazione" + String.valueOf(i);
       String getIdVersione = "getIdVersione" + String.valueOf(i);
       Class c = Factory.getClass(this.getClass());
       Method idMatMethod = c.getMethod(getIdMateriale, null);
       Method idLotMethod = c.getMethod(getIdLotto, null);
       Method idMagPrlMethod = c.getMethod(getIdMagazzinoPrl, null);
       Method idConfigMethod = c.getMethod(getIdConfigurazione, null);
       Method idVersMethod = c.getMethod(getIdVersione, null);
       Object objMat = null;
       objMat = idMatMethod.invoke(this, null);
       Object objLot = idLotMethod.invoke(this, null);
       Object objMag = idMagPrlMethod.invoke(this, null);
       Object objConfig = idConfigMethod.invoke(this, null);
       Object objVers = idVersMethod.invoke(this, null);
       if (objMat != null && objLot != null && objMag != null) {
         String idMat = (String) objMat;
         String idMagPrl = (String) objMag;
         String idLot = (String) objLot;
         Integer idConfig = (Integer) objConfig;
         Integer idVers = (Integer) objVers;
         boolean isGeacNeg = isGiacenzaNegativa(idMat, idLot, idMagPrl, idConfig, idVers);
         if (isGeacNeg) {
           params = new Vector();
           params.add(idMat);
           params.add(idLot);
           params.add(idMagPrl);
           ErrorMessage errorMessage = new ErrorMessage("THIP40T171", true, params);
           errors.add(errorMessage);
         }
       }
     }
   }
   catch (Exception ex) {
     ex.printStackTrace();
   }
   //Fix 35415 -- Blocco commentato fine
   //Fix 38436 blocco scommentato
   return errors;
 }

 public boolean isGiacenzaNegativa(String idMat, String idLot, String idMagPrel, Integer idConfg, Integer idVers) {
   PreparedStatement ps = null;
   ResultSet resultSet = null;
    try {
      ps = selectQtaLottoiSaldiStmt.getStatement();
      Database db = ConnectionManager.getCurrentDatabase();
       db.setString(ps, 1, getIdAzienda());
       db.setString(ps, 2, idMat);
       db.setString(ps, 3, idLot);
       db.setString(ps, 4, idMagPrel);
       if (idConfg == null) {
         db.setString(ps, 5, Configurazione.CONFIGURAZIONE_DUMMY.toString());
       }
       else {
         db.setString(ps, 5, idConfg.toString());
       }
       db.setString(ps,6,idVers.toString());
      resultSet =  ps.executeQuery();
      while(resultSet.next())
      {
        BigDecimal qtaPrm = (BigDecimal) resultSet.getObject(LottiSaldiTM.QTA_GIAC_PRM);
        if(qtaPrm.compareTo(RilevazioneDatiProdTes.ZERO)<0)
        {
          return true;
        }
      }
    }
    catch (SQLException ex) {
      ex.printStackTrace(Trace.logStream);
    }
   return false;
 }
 //Fix 15250 fine

 //Fix 16109 inizio
 public void calcolaQtaDaRighe() {
  try {
    //Fix 18536 inizio
    int firstIndex = (iCurrentNumPag - 1) * 20;
    int lastIndex = firstIndex + 19;
    //for (int i=1; i < 21; i++) {
    for (int i=firstIndex; i <= lastIndex; i++) {
    //Fix 18536 fine
      String getterPrd = "getProdotto" + String.valueOf(i);
      Class c = Factory.getClass(this.getClass());
      Method prdMethod = c.getMethod(getterPrd, null);
      Articolo prodotto = (Articolo) prdMethod.invoke(this, null);
      if(prodotto != null &&
         (prodotto.getIdArticolo().equals(getIdArticolo()) || prodotto.getTipoParte() == ArticoloDatiIdent.ARTICOLO_WIP)) { //Fix 17550
        String getterQtaVrsPrm = "getQtaVrsUmPrm" + String.valueOf(i);
        Method qtaVrsPrmMethod = c.getMethod(getterQtaVrsPrm, null);
        BigDecimal qtaVrsPrm = (BigDecimal) qtaVrsPrmMethod.invoke(this, null);
        if(qtaVrsPrm != null) {
          BigDecimal qta = getQuantita();
          if (qta == null)
            qta = new BigDecimal("0");
          setQuantita(qta.add(qtaVrsPrm));
        }
      }
    }
  }
  catch (Exception e) {
    e.printStackTrace(Trace.excStream);
  }
 }
 //Fix 16109 fine
 /*
  public static void main(String.get() args)
  {
    RilevDatiPrdTS tes = new RilevDatiPrdTS();
    System.out.println(tes.arrotondareOreRilevazione(TimeUtils.getTime(9, 58,45), PersDatiPrdCausaleRilev.DIFETTO_ECCESSO, (short)5));
    System.out.println(tes.arrotondareOreRilevazione(TimeUtils.getTime(9, 11,37), PersDatiPrdCausaleRilev.DIFETTO_ECCESSO, (short)5));
    System.out.println(tes.arrotondareOreRilevazione(TimeUtils.getTime(9, 11,37), PersDatiPrdCausaleRilev.DIFETTO, (short)1));
    System.out.println(tes.arrotondareOreRilevazione(TimeUtils.getTime(9, 11,37), PersDatiPrdCausaleRilev.DIFETTO_ECCESSO, (short)0));
  }*/
 //Fix 16741 inizio
 public Vector getCausaliRilevazioniFermo() {
   Vector vect = null;
   try {
     UtenteAzienda ua = UtenteAzienda.getUtenteAziendaConnesso();
     String where = PersDatiPrdCausaleRilevTM.ID_AZIENDA + " = '" + getIdAzienda() + "' AND " +
                    PersDatiPrdCausaleRilevTM.ID_UTENTE_LGN + " = '" + ua.getIdUtente() + "' AND " +
                    PersDatiPrdCausaleRilevTM.TIPO_DICHIAR + " = '" + PersDatiPrdCausaleRilev.FERMO + "'";

     vect = PersDatiPrdCausaleRilev.retrieveList(where, PersDatiPrdCausaleRilevTM.SEQUENZA_ORDIN, true);
     if (vect != null) {
       Iterator it = vect.iterator();
       while (it.hasNext()) {
         PersDatiPrdCausaleRilev causale = (PersDatiPrdCausaleRilev) it.next();
         if (causale.getIdCausaleDocumento() != null && causale.getCausaleDocumento().getSuOrdine()) {
           it.remove();
         }
       }
     }
   }
   catch (Exception ex) {
     ex.printStackTrace(Trace.excStream);
   }
   return vect;
 }

 public RilevazioneDatiProdTes cercaRilevazioneIncompletaFermo(){
   String where = RilevazioneDatiProdTesTM.ID_AZIENDA + " ='" + getIdAzienda() + "' AND " +
                  RilevazioneDatiProdTesTM.R_OPERATORE + " ='" + getIdOperatore() + "' AND " +
                  RilevazioneDatiProdTesTM.TIPO_DICHIAR + " ='" + PersDatiPrdCausaleRilev.FERMO + "' AND " +
                  RilevazioneDatiProdTesTM.R_RISORSA + " ='" + getIdMacchina()+ "' AND " +
                  RilevazioneDatiProdTesTM.LIVELLO_RISORSA + " ='" + Risorsa.MATRICOLA+ "' AND " +
                  RilevazioneDatiProdTesTM.TIPO_RISORSA + " ='" + Risorsa.MACCHINE+ "' AND " +
                  RilevazioneDatiProdTesTM.STATO + " ='" + DatiComuniEstesi.INCOMPLETO + "'";
   RilevazioneDatiProdTes ret = null;//Fix 23584
   PersistentObjectCursor poCursor = null;//40762
   try{
     //Fix 17768 inizio
     String className = RilevazioneDatiProdTes.class.getName();
     String orderBy = RilevazioneDatiProdTesTM.DATA_RIL + " DESC";
     poCursor = new PersistentObjectCursor(className, where, orderBy, PersistentObject.NO_LOCK);
     if (poCursor.hasNext())
    	 //Fix 23584 inizio
       //return (RilevazioneDatiProdTes) poCursor.next();
     	 ret = (RilevazioneDatiProdTes) poCursor.next();
     //poCursor.close();//40762
     	 //Fix 23584 fine
     /*Vector vect = RilevazioneDatiProdTes.retrieveList(where, RilevazioneDatiProdTesTM.DATA_RIL + " DESC", true);
     if(!vect.isEmpty()){
       return (RilevazioneDatiProdTes)vect.get(0);
     }*/
     //Fix 17768 fine
  }catch(Exception ex){
    ex.printStackTrace(Trace.excStream);
  }
   //40762 inizio
   finally {
	   if(poCursor != null)
		   try{poCursor.free();}catch(SQLException e) {e.printStackTrace(Trace.excStream);}
   }
   //40762 fine
  //Fix 23584 inizio
  //return null;
  return ret;
  //Fix 23584 fine
 }

 public RilevazioneDatiProdTes cercaRilevazioneInCorsoFermo(){
   String where = RilevazioneDatiProdTesTM.ID_AZIENDA + " ='" + getIdAzienda() + "' AND " +
                  RilevazioneDatiProdTesTM.R_OPERATORE + " ='" + getIdOperatore() + "' AND " +
                  RilevazioneDatiProdTesTM.TIPO_DICHIAR + " ='" + PersDatiPrdCausaleRilev.FERMO + "' AND " +
                  RilevazioneDatiProdTesTM.STATO_RIL + " ='" + RilevazioneDatiProdTes.IN_CORSO + "' AND " +
                  RilevazioneDatiProdTesTM.R_RISORSA + " ='" + getIdMacchina()+ "' AND " +
                  RilevazioneDatiProdTesTM.LIVELLO_RISORSA + " ='" + Risorsa.MATRICOLA+ "' AND " +
                  RilevazioneDatiProdTesTM.TIPO_RISORSA + " ='" + Risorsa.MACCHINE+ "' AND " +
                  RilevazioneDatiProdTesTM.STATO + " ='" + DatiComuniEstesi.INCOMPLETO + "'";
   RilevazioneDatiProdTes ret = null;//Fix 23584
   PersistentObjectCursor poCursor = null;//40762
   try{
     //Fix 17768 inizio
     String className = RilevazioneDatiProdTes.class.getName();
     String orderBy = RilevazioneDatiProdTesTM.DATA_RIL + " DESC";
     poCursor = new PersistentObjectCursor(className, where, orderBy, PersistentObject.NO_LOCK);
     if (poCursor.hasNext())
    	//Fix 23584 inizio
      //return (RilevazioneDatiProdTes) poCursor.next();
     	 ret = (RilevazioneDatiProdTes) poCursor.next();
     //poCursor.close();//40762
     	 //Fix 23584 fine
     /*Vector vect = RilevazioneDatiProdTes.retrieveList(where, RilevazioneDatiProdTesTM.DATA_RIL + " DESC", true);
     if(!vect.isEmpty()){
       return (RilevazioneDatiProdTes)vect.get(0);
     }*/
     //Fix 17768 fine
  }catch(Exception ex){
    ex.printStackTrace(Trace.excStream);
  }
   //40762 inizio
   finally {
	   if(poCursor != null)
		   try{poCursor.free();}catch(SQLException e) {e.printStackTrace(Trace.excStream);}
   }
   //40762 fine
  //Fix 23584 inizio
  //return null;
  return ret;
  //Fix 23584 fine
 }

 public RilevazioneDatiProdTes cercaRilevazioneSospesaFermo() {
   String where = RilevazioneDatiProdTesTM.ID_AZIENDA + " ='" + getIdAzienda() + "' AND " +
                  RilevazioneDatiProdTesTM.R_OPERATORE + " ='" + getIdOperatore() + "' AND " +
                  RilevazioneDatiProdTesTM.TIPO_DICHIAR + " ='" + PersDatiPrdCausaleRilev.FERMO + "' AND " +
                  RilevazioneDatiProdTesTM.R_RISORSA + " ='" + getIdMacchina() + "' AND " +
                  RilevazioneDatiProdTesTM.LIVELLO_RISORSA + " ='" + Risorsa.MATRICOLA + "' AND " +
                  RilevazioneDatiProdTesTM.TIPO_RISORSA + " ='" + Risorsa.MACCHINE + "' AND " +
                  RilevazioneDatiProdTesTM.STATO_RIL + " ='" + RilevazioneDatiProdTes.SOSPESA + "' AND " +
                  RilevazioneDatiProdTesTM.STATO + " ='" + DatiComuniEstesi.INCOMPLETO + "'";
   try {
     Vector vect = RilevazioneDatiProdTes.retrieveList(where, RilevazioneDatiProdTesTM.DATA_RIL + " DESC", true);
     if (!vect.isEmpty()) {
       return (RilevazioneDatiProdTes) vect.get(0);
     }
   }
   catch (Exception ex) {
     ex.printStackTrace(Trace.excStream);
   }
   return null;
 }

 public int SaveInizioRipresaFermo() throws SQLException {
   if (getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO) {
     RilevazioneDatiProdTes testata = creaNuovoTestataRilevazione();
     return saveNuovoRilevazione(testata);
   }
   else {
     RilevazioneDatiProdTes rilevazioneEsistente = cercaRilevazioneSospesaFermo();
     if (rilevazioneEsistente != null) {
       RilevazioneDatiProdRig riga = creaRigaRilevazione(rilevazioneEsistente);
       rilevazioneEsistente.getRighe().add(riga);
       return rilevazioneEsistente.save();
     }
     RilevazioneDatiProdTes testata = creaNuovoTestataRilevazione();
     return saveNuovoRilevazione(testata);
   }
 }

 public int SaveSospensioneFineFermo() throws SQLException {
   if(!getPersDatiPrdCausaleRilev().isAbilitaDichRidotta()){
    RilevazioneDatiProdTes rilevazioneEsistente = cercaRilevazioneInCorsoFermo();
    if (rilevazioneEsistente != null) {
      RilevazioneDatiProdRig riga = creaRigaRilevazione(rilevazioneEsistente);
      rilevazioneEsistente.getRighe().add(riga);
      //Fix 24120 Inizio
      if(getTipoTimbratura() == RilevazioneDatiProdRig.FINE){
        iRilevazioneTesFine = rilevazioneEsistente;
      }
      //Fix 24120 Fine
      return rilevazioneEsistente.save();
    }
   }
   RilevazioneDatiProdTes testata = creaNuovoTestataRilevazione();
   return saveNuovoRilevazione(testata);
 }
 //Fix 16741 fine
 //Fix 17082 --inizio
 public ErrorMessage checkIdCausaleRilevazione() {
	 if(getIdCausaleRilevazione() != null && getAttivitaEsecutiva() != null){
		  Short arr = getPersDatiPrdCausaleRilev().getIntervMinArrotond();
		  char formaOreRilev = getAttivitaEsecutiva().getAttivita().getFmtOreRil();
		  if(arr != null && arr.shortValue() > 0){
		  	 if(formaOreRilev == Attivita.HH_MM_SS){
		  	   return  new ErrorMessage("THIP40T271");
		  	 }
		  }
		  else{ ////nel caso di arrotondamento ai secondi
		  	 if(formaOreRilev == Attivita.HH_MM){
		  		 return  new ErrorMessage("THIP40T271");
		  	 }
		  }
	 }
	 return null;
 }

 public RilevazioneDatiProdTes getRilevazioneTesFine(){
	  return iRilevazioneTesFine;
 }
 //Fix 17082 --fine
 //Fix 17808 --inizio
 public Risorsa getMatricolaDichiarante(){
   Risorsa risorsa = null;
   try{
     String key = KeyHelper.buildObjectKey(new Object[]{getIdAzienda(), new Character(Risorsa.RISORSE_UMANE), new Character(Risorsa.MATRICOLA), getIdOperatore()});
     risorsa = (Risorsa)Risorsa.elementWithKey(Risorsa.class, key, PersistentObject.OPTIMISTIC_LOCK);
   }
   catch (Exception ex) {
     ex.printStackTrace(Trace.excStream);
   }
   return risorsa;
 }
 //Fix 17808 --fine

 //Fix 17963 Inizio
 public void setIdRisorsaUmana(String idRisorsaUmana) {
   this.iIdRisorsaUmana = idRisorsaUmana;
   setDirty();
 }

 public String getIdRisorsaUmana() {
   return iIdRisorsaUmana;
 }

 public boolean isRisorsaUmanaOccupata() {
	 boolean ret = false;//Fix 23584
   if (getIdRisorsaUmana() != null && getTipoBolla() == RilevazioneDatiProdTes.BOLLA_SINGOLA) {
     String where = RilevazioneDatiProdTesTM.ID_AZIENDA + " ='" + getIdAzienda() + "' AND " +
         RilevazioneDatiProdTesTM.TIPO_RISORSA + " ='" + Risorsa.RISORSE_UMANE + "' AND " +
         RilevazioneDatiProdTesTM.LIVELLO_RISORSA + " ='" + Risorsa.MATRICOLA + "' AND " +
         RilevazioneDatiProdTesTM.R_RISORSA + " ='" + getIdRisorsaUmana() + "' AND " +
         RilevazioneDatiProdTesTM.STATO_RIL + " ='" + RilevazioneDatiProdTes.IN_CORSO + "'";
     if (getBollaLavorazione() != null)
       where += " AND "  + RilevazioneDatiProdTesTM.NUM_RITORNO + " !='" + getBollaLavorazione() + "'";
     PersistentObjectCursor poCursor = null;//40762
     try{
       String className = RilevazioneDatiProdTes.class.getName();
       String orderBy = RilevazioneDatiProdTesTM.DATA_RIL + " DESC";
       poCursor = new PersistentObjectCursor(className, where, orderBy, PersistentObject.NO_LOCK);
       //Fix 23584 inizio
       //if(poCursor.hasNext())
       if(poCursor.hasNext() && !ret)
         //return true;
      	 ret = true;
       //poCursor.close();//40762
       //Fix 23584 fine
     }
     catch(Exception ex){ex.printStackTrace(Trace.excStream);}
     //40762 inizio
     finally {
    	 if(poCursor != null)
    		 try{poCursor.free();}catch(SQLException e) {e.printStackTrace(Trace.excStream);}
     }
     //40762 fine
   }
   //Fix 23584 inizio
   //return false;
   return ret;
   //Fix 23584 fine
 }
 //Fix 17963 Fine

 //Fix 18536 inizio
 public void setCurrentNumPag(int currentNumPag){
  iCurrentNumPag  = currentNumPag;
  setDirty();
 }

 public int getCurrentNumPag(){
  return iCurrentNumPag;
 }

 public void setMateriali(Map map){
   iMateriale = map;
 }

 public Map getMateriali(){
   return iMateriale;
 }

 public void setDescrizioneMateriale(Map map){
   iDescrizioneMateriale = map;
 }

 public Map getDescrizioneMateriale(){
   return iDescrizioneMateriale;
 }

 public void setMaterialiVersione(Map map){
   iMaterialeVersione = map;
 }

 public Map getMaterialiVersione(){
   return iMaterialeVersione;
 }

 public void setMaterialiConfig(Map map){
   iMaterialeConfig = map;
 }

 public Map getMaterialiConfig(){
   return iMaterialeConfig;
 }

 public void setLottiMateriale(Map map){
   iLottoMateriale = map;
 }

 public Map getLottiMateriale(){
   return iLottoMateriale;
 }

 public void setMagazziniPrl(Map map){
   iMagazzinoPrl = map;
 }

 public Map getMagazziniPrl(){
   return iMagazzinoPrl;
 }

  public void setQtaPrlUmPrm(Map map){
   iQtaPrlUmPrm = map;
 }

 public Map getQtaPrlUmPrm(){
   return iQtaPrlUmPrm;
 }

 public void setQtaPrlUmSec(Map map){
   iQtaPrlUmSec = map;
 }

 public Map getQtaPrlUmSec(){
   return iQtaPrlUmSec;
 }


 public void setProdotti(Map map){
   iProdotto = map;
 }

 public Map getProdotti(){
   return iProdotto;
 }

 public void setDescrizioneProdotto(Map map){
   iDescrizioneProdotto = map;
 }

 public Map getDescrizioneProdotto(){
   return iDescrizioneProdotto;
 }

 public void setProdottiVersione(Map map){
   iProdottoVersione = map;
 }

 public Map getProdottiVersione(){
   return iProdottoVersione;
 }

 public void setProdottiConfig(Map map){
   iProdottoConfig = map;
 }

 public Map getProdottiConfig(){
   return iProdottoConfig;
 }

 public void setLottiProdotto(Map map){
   iLottoProdotto = map;
 }

 public Map getLottiProdotto(){
   return iLottoProdotto;
 }

 public void setMagazziniVrs(Map map){
   iMagazzinoVrs = map;
 }

 public Map getMagazziniVrs(){
   return iMagazzinoVrs;
 }

 public void setQtaVrsUmPrm(Map map){
   iQtaVrsUmPrm = map;
 }

 public Map getQtaVrsUmPrm(){
   return iQtaVrsUmPrm;
 }

 public void setQtaVrsUmSec(Map map){
   iQtaVrsUmSec = map;
 }

 public Map getQtaVrsUmSec(){
   return iQtaVrsUmSec;
 }

 public void setQtaScartoUmPrm(Map map){
   iQtaScartoUmPrm = map;
 }

 public Map getQtaScartoUmPrm(){
   return iQtaScartoUmPrm;
 }

  public void setQtaScartoUmSec(Map map){
   iQtaScartoUmSec = map;
 }

 public Map getQtaScartoUmSec(){
   return iQtaScartoUmSec;
 }

  public void setAnniOrdine(Map map){
   iIdAnnoOrdine = map;
 }

 public Map getAnniOrdine(){
   return iIdAnnoOrdine;
 }

  public void setNumeriOrdine(Map map){
   iIdNumeroOrdine = map;
 }

 public Map getNumeriOrdine(){
   return iIdNumeroOrdine;
 }

  public void setRigheAttivitaId(Map map){
   iIdRigaAttivita = map;
 }

 public Map getRigaAttivitaId(){
   return iIdRigaAttivita;
 }
 //Fix 18536 fine
 //Fix 19705 --inizio
 public Configurazione recuperaConfigurazione(Configurazione config){
	if(config.getIdEsternoConfig() != null){
		 try {
			 return ConfigurazioneRicEnh.recuperaConfigurazione(getIdAzienda(), config.getIdArticolo(), config.getIdEsternoConfig());
    }
    catch (SQLException e) {
      e.printStackTrace();
    }
	}
	return null;
 }
 //Fix 19705 --fine

 //Fix 19758 inizio
	public void setOreRilevate(BigDecimal oreRilevate) {
		iOreRilevate = oreRilevate;
		setDirty();
	}

	public BigDecimal getOreRilevate() {
		return iOreRilevate;
	}

	public void setMinutiRilevati(BigDecimal minutiRilevati) {
		iMinutiRilevati = minutiRilevati;
		setDirty();
	}

	public BigDecimal getMinutiRilevati() {
		return iMinutiRilevati;
	}

	public ErrorMessage checkMinutiRilevati() {
		ErrorMessage errore = null;
		errore = controllaMinutiRilevati(getOreRilevate(), getMinutiRilevati());
		return errore;
	}

	public ErrorMessage controllaMinutiRilevati(BigDecimal orerilevate, BigDecimal minutirilevati) {
		ErrorMessage result = null;
		if (minutirilevati != null) {
			if (orerilevate == null || orerilevate.compareTo(ZERO) == 0) {
				if (minutirilevati.compareTo(MENOCINQUANTANOVE) < 0 || minutirilevati.compareTo(CINQUANTANOVE) > 0) {
					result = new ErrorMessage("BATCH012");
				}
			}
			else
				if (orerilevate.compareTo(ZERO) < 0) {
					if (minutirilevati.compareTo(MENOCINQUANTANOVE) < 0 || minutirilevati.compareTo(ZERO) > 0) {
						result = new ErrorMessage("BATCH012");
					}
				}
				else {
					if (minutirilevati.compareTo(ZERO) < 0 || minutirilevati.compareTo(CINQUANTANOVE) > 0) {
						result = new ErrorMessage("BATCH012");
					}
				}
		}
		return result;
	}
 //Fix 19758 fine

 //Fix 19887 inizio
 public static synchronized Vector trovaRisorse(Risorsa risorsa) {
   try {
     Vector vect = new Vector();
     Database db = ConnectionManager.getCurrentDatabase();
     db.setString(cTrovaRsr.getStatement(), 1, risorsa.getIdAzienda());
     db.setString(cTrovaRsr.getStatement(), 2, String.valueOf(risorsa.getTipoRisorsa()));
     db.setString(cTrovaRsr.getStatement(), 3, risorsa.getIdRisorsa());
     ResultSet rs = cTrovaRsr.executeQuery();
     while (rs.next()) {
    	 String risorsaKey = KeyHelper.buildObjectKey(new Object [] {risorsa.getIdAzienda(),new Character(risorsa.getTipoRisorsa()), new Character(Risorsa.MATRICOLA), rs.getString(RisorsaTM.ID_RISORSA).trim()});
    	 Risorsa ris = (Risorsa)Risorsa.elementWithKey(Risorsa.class, risorsaKey, PersistentObject.NO_LOCK);
    	 if(ris != null) {
    		 vect.add(ris);
    	 }
     }
     rs.close();
     return vect;
   }
   catch (Exception ex) {
     ex.printStackTrace();
     return null;
   }
 }

 public String getRisorseAppartenenza(Risorsa risorsa) {
	 int i=0;
	 StringBuffer strRisApp = new StringBuffer();
	 Iterator risorseAppIter = risorsa.getRisorseAppartenenza().iterator();
	 while(risorseAppIter.hasNext()) {
		 RisorsaAppartenenza risorsaApp = (RisorsaAppartenenza)risorseAppIter.next();
		 if(i==0) {
			 strRisApp.append("'").append(risorsaApp.getIdRisorsaApp()).append("'");
		 }
		 else {
			 strRisApp.append(",'").append(risorsaApp.getIdRisorsaApp()).append("'");
		 }
		 i++;
	 }
	 return strRisApp.toString();
 }

 public static synchronized Vector trovaRisorse(Risorsa risorsa, String rsrApp) {
   try {
  	 String sqlTrovaRisorsa = getSqlTrovaRisorsa(risorsa, rsrApp);
  	 CachedStatement cTrovaRsr2 = new CachedStatement(sqlTrovaRisorsa);
     Vector vect = new Vector();
     ResultSet rs = cTrovaRsr2.executeQuery();
     while (rs.next()) {
    	 String risorsaKey = KeyHelper.buildObjectKey(new Object [] {risorsa.getIdAzienda(),new Character(risorsa.getTipoRisorsa()), new Character(Risorsa.MATRICOLA), rs.getString(RisorsaTM.ID_RISORSA).trim()});
    	 Risorsa ris = (Risorsa)Risorsa.elementWithKey(Risorsa.class, risorsaKey, PersistentObject.NO_LOCK);
    	 if(ris != null) {
    		 vect.add(ris);
    	 }
     }
     rs.close();
     return vect;
   }
   catch (Exception ex) {
     ex.printStackTrace();
     return null;
   }
 }

 public static String getSqlTrovaRisorsa(Risorsa risorsa, String rsrApp) {
	 return "SELECT DISTINCT " + RisorsaTM.ID_RISORSA +
	      " FROM " + RISORSE_APP_VIEW +
	      " WHERE " + RisorsaTM.ID_AZIENDA + " = '" + risorsa.getIdAzienda() + "'" +
	      " AND "   + RisorsaTM.TIPO_RISORSA + " = '" + risorsa.getTipoRisorsa() + "'" +
	      " AND "   + RisorsaTM.LIVELLO_RISORSA + " = '" + Risorsa.MATRICOLA + "'" +
	      " AND "   + RisorsaAppartenenzaTM.ID_RISORSA_APP + " IN (" + rsrApp + ")" +
				" ORDER BY " + RisorsaTM.ID_RISORSA;
 }
 //Fix 19887 fine

 //Fix 20491 --inizio
 public boolean verificaCondizionePrelievi(){
	 //Fix 24177 inizio
	 //return getPersDatiPrdCausaleRilev().getTipoDichiarazione() == PersDatiPrdCausaleRilev.PRELIEVO;
     //return getPersDatiPrdCausaleRilev() != null && getPersDatiPrdCausaleRilev().isAbilitaPrelievo();//Fix 26093
	  //Fix 26093 inizio
	  if (getTipoBolla() != RilevazioneDatiProdTes.BOLLA_CUCITA) { //Fix 26120
		//Fix 42153 inizio
	    PersDatiPrdCausaleRilev cau = getPersDatiPrdCausaleRilev();
		//Fix 42501 blocco spostato nell'if
	    /*if (cau != null && !getAttivitaEsecutiva().getMateriali().isEmpty() &&
	       (cau.getTipoDichiarazione() == PersDatiPrdCausaleRilev.PRELIEVO || cau.getMaterialiDaProporre() == PersDatiPrdCausaleRilev.NESSUNO))
	      return true;*/
       //Fix 42153 fine
		RilevDatiPrdTSWebFormModifier modif = new RilevDatiPrdTSWebFormModifier();
		List materiali = new ArrayList();
		//if (getPersDatiPrdCausaleRilev() != null && getPersDatiPrdCausaleRilev().isAbilitaPrelievo()) { //Fix 42501
		if (cau != null && cau.isAbilitaPrelievo()) { //Fix 42501
			//Fix 42501 --inizio
		    if (cau != null && !getAttivitaEsecutiva().getMateriali().isEmpty() &&
		       (cau.getTipoDichiarazione() == PersDatiPrdCausaleRilev.PRELIEVO || cau.getMaterialiDaProporre() == PersDatiPrdCausaleRilev.NESSUNO))
		      return true;
	        //Fix 42501 --fine
			//Fix 32846 -- Inizio
			if (getAttivitaEsecutiva() != null) {
			  List materialiValido = new ArrayList();
			  List tmp = getAttivitaEsecutiva().getMateriali() ;
			  Iterator iter = tmp.iterator();
			  while(iter.hasNext()) {
				  AttivitaEsecMateriale atvEsecMat = (AttivitaEsecMateriale) iter.next();
				  if(atvEsecMat.getStato() == DatiComuniEstesi.VALIDO) {
					  materialiValido.add(atvEsecMat);
				  }
			  }
			  //materiali = modif.verificaMateriali(getAttivitaEsecutiva().getMateriali(), getPersDatiPrdCausaleRilev());
			  materiali = modif.verificaMateriali(materialiValido, getPersDatiPrdCausaleRilev());
			}
			//Fix 32846 -- Fine
		}
		return !materiali.isEmpty();
	} //Fix 26120
	  //Fix 26093 fine
	 //Fix 24177 fine
	 	   else //Fix 26120
		     return getPersDatiPrdCausaleRilev() != null && getPersDatiPrdCausaleRilev().isAbilitaPrelievo(); //Fix 26120
 }

 public boolean verificaCondizioneVersamenti(){
	 CausaleDocProduzione causaleDoc = getPersDatiPrdCausaleRilev().getCausaleDocumento();
	 return getPersDatiPrdCausaleRilev().getTipoDichiarazione() == PersDatiPrdCausaleRilev.VERSAMENTO ||
      (getPersDatiPrdCausaleRilev().getIdCausaleDocumento() != null && getAttivitaEsecutiva() != null && causaleDoc.getAbilitaVersamenti() != CausaleDocProduzione.NO &&
      checkAttivitaProdotti(getAttivitaEsecutiva().getProdotti()));
 }
 //Fix 20491 --fine

 //Fix 20927 inizio
 public String getRisorseApp(String idRisorsa) {
	 return "SELECT " + RisorsaAppartenenzaTM.ID_RISORSA_APP +
       		" FROM "  + RisorsaAppartenenzaTM.TABLE_NAME +
       		" WHERE " + RisorsaAppartenenzaTM.ID_AZIENDA + "='" + Azienda.getAziendaCorrente() + "'" +
       		" AND " + RisorsaAppartenenzaTM.TIPO_RISORSA + "='" + Risorsa.RISORSE_UMANE + "'" +
       		" AND " + RisorsaAppartenenzaTM.LIVELLO_RISORSA + "='" + Risorsa.MATRICOLA + "'" +
       		" AND " + RisorsaAppartenenzaTM.ID_RISORSA + " = '" + idRisorsa + "'";
 }
//Fix 20927 fine

 //Fix 22630 Inizio
 public BollaCucitaTes leggiBollaRaggruppata() {
   //Fix 33416 inizio
   /*String where = RilevazioneDatiProdTesTM.ID_AZIENDA + " = '" + Azienda.getAziendaCorrente() + "' AND " +
                  RilevazioneDatiProdTesTM.TIPO_BOLLA + " = '" + RilevazioneDatiProdTes.BOLLA_RAGGRUPPATA + "' AND " +
                  RilevazioneDatiProdTesTM.NUM_RITORNO + " = '" + getBollaLavorazione() + "'";

   String orderBy = RilevazioneDatiProdTesTM.DATA_RIL + " DESC ";
   try {
     Vector vect = RilevazioneDatiProdTes.retrieveList(where, orderBy, true);
     if (!vect.isEmpty()) {
       RilevazioneDatiProdTes rilevazione = (RilevazioneDatiProdTes) vect.firstElement();
       if(rilevazione != null && rilevazione.getBollaCucita() != null){
         return(BollaCucitaTes)rilevazione.getBollaCucita();
       }
     }
   }
   catch (Exception e) {
     e.printStackTrace(Trace.excStream);
   }*/
   String where = BollaCucitaRigTM.ID_AZIENDA + " = '" + Azienda.getAziendaCorrente() + "' AND " +
		       BollaCucitaRigTM.NUM_RITORNO_ATV + " = '" + getBollaLavorazione() + "'";
   try {
     Vector vect = BollaCucitaRig.retrieveList(where, "", true);
     if (!vect.isEmpty()) {
       BollaCucitaRig rig = (BollaCucitaRig) vect.firstElement();
       if(rig != null && rig.getTestata() != null){
         return rig.getTestata();
       }
     }
   }
   catch (Exception e) {
     e.printStackTrace(Trace.excStream);
   }
   //Fix 33416 fine
   return null;
 }
 //Fix 22630 Fine

 //Fix 22890 inizio
 public ErrorMessage checkStatoBollaLavorazione() {
	 if (getBollaLavorazione() != null) {
     if (getAttivitaEsecutiva() != null && getAttivitaEsecutiva().getStatoAttivita() == AttivitaEsecutiva.COMPLETATO_ATV
         || getBollaCucita() != null && getBollaCucita().getStatoAvanzamento() == BollaCucitaTes.COMPLETATO) {
       return new ErrorMessage("THIP40T430");
     }
	 }
	 return null;
 }
 //Fix 22890 fine
 
 //Fix 24177 inizio
 public static synchronized BigDecimal[] getQtaPrelevata(AttivitaEsecMateriale atvMat) {
	 BigDecimal[] Qta = new BigDecimal[2];
	 CachedStatement sommaQtaRilevataMatStmt = null;
	 PreparedStatement ps = null;
	 ResultSet rs = null;
		try {
			 sommaQtaRilevataMatStmt = new CachedStatement(getSqlQtaRilavataMat(atvMat.getIdConfigurazione()));
		   ps = sommaQtaRilevataMatStmt.getStatement();
		   Database db = ConnectionManager.getCurrentDatabase();
		   db.setString(ps, 1, atvMat.getIdAzienda());
		   db.setString(ps, 2, atvMat.getIdArticolo());
		   ps.setInt(3, atvMat.getIdVersione().intValue());
		   db.setString(ps, 4, atvMat.getAttivitaEsecutiva().getNumeroRitorno());
		   rs = ps.executeQuery();
		   if (rs.next()) {
		     Qta[0] = rs.getBigDecimal(1)!=null ? rs.getBigDecimal(1) : new BigDecimal(0);
		     Qta[1] = rs.getBigDecimal(2)!=null ? rs.getBigDecimal(2) : new BigDecimal(0);
		   }
		}
		catch (SQLException ex) {
		  ex.printStackTrace(Trace.excStream);
		}
		finally {
			try {
				if (sommaQtaRilevataMatStmt != null)
					sommaQtaRilevataMatStmt.free();
				if (ps != null)
					ps.close();
				if (rs != null)
					rs.close();
			}
			catch (Exception ex) {
				ex.printStackTrace(Trace.excStream);
			}
		}
		return Qta;
 }
 
 public static BigDecimal getQtaResiduaAtvMat(AttivitaEsecMateriale atvMat) {
   //Fix 31183 -- inizio 
   /*BigDecimal ret = null;
   if (atvMat != null) {
     ret = atvMat.getQtaResiduaUMPrm();
     if (ret == null)
       ret = ZERO;
     BigDecimal[] qta = getQtaPrelevata(atvMat);
     if (qta[0] != null) {
       ret = ret.subtract(qta[0]);
       if (ret.compareTo(ZERO) < 0) {
         //ret = ZERO.setScale(2);//Fix 30965
         ret = Q6Calc.get().setScale(ZERO, 2);//Fix 30965
       }
     }
   }
   else
     ret = ZERO;
   return ret;*/
	
   return iRilevDatiPrdTSInternal.getQtaResiduaAtvMatInternal(atvMat);
   //Fix 31183 -- fine
 }
 
 public static String getSqlQtaRilavataMat(Integer configurazione) {
	 String qtaRilevataMat =
		    "SELECT  SUM(RDPM." + RilevazioneDatiProdMatTM.QTA_PRL_UM_PRM + "), SUM(RDPM." +
		    RilevazioneDatiProdMatTM.QTA_PRL_UM_SEC + ")" +
			  " FROM " + RilevazioneDatiProdMatTM.TABLE_NAME + " RDPM " +
			  " LEFT OUTER JOIN " + RilevazioneDatiProdTesTM.TABLE_NAME + " RDP " +
		    " ON RDPM." + RilevazioneDatiProdMatTM.ID_AZIENDA + "= RDP." + RilevazioneDatiProdTesTM.ID_AZIENDA +
		    " AND RDPM." + RilevazioneDatiProdMatTM.ID_ANNO_RIL + "= RDP." + RilevazioneDatiProdTesTM.ID_ANNO_RIL +
		    " AND RDPM." + RilevazioneDatiProdMatTM.ID_NUMERO_RIL + "= RDP." + RilevazioneDatiProdTesTM.ID_NUMERO_RIL +
			  " WHERE " +
			  "RDPM." + RilevazioneDatiProdMatTM.ID_AZIENDA + " = ? AND " +
			  "RDPM." + RilevazioneDatiProdMatTM.R_ARTICOLO + " = ? AND " +
			  "RDPM." + RilevazioneDatiProdMatTM.R_VERSIONE + " = ? AND " ;
	      if(configurazione == null)
	      	qtaRilevataMat += "RDPM." + RilevazioneDatiProdMatTM.R_CONFIGURAZIONE + " IS NULL AND ";
	      else
	      	qtaRilevataMat += "RDPM." + RilevazioneDatiProdMatTM.R_CONFIGURAZIONE + " = " + configurazione.intValue() + " AND ";
	      qtaRilevataMat += "RDP." + RilevazioneDatiProdTesTM.NUM_RITORNO + " = ? AND " +
			  "RDP." + RilevazioneDatiProdTesTM.STATO + " !='" + DatiComuniEstesi.ANNULLATO + "' AND " +
			  "RDP." + RilevazioneDatiProdTesTM.STATO_RIL + " <> '" + RilevazioneDatiProdTes.CONVALIDATA + "'";
	 return qtaRilevataMat;
 }
 
 public boolean isPosizionePrelieviValido() {
		return (getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO && getPersDatiPrdCausaleRilev().getPosizionePrelievo() ==  PersDatiPrdCausaleRilev.INIZIO) 
       || (getTipoTimbratura() == RilevazioneDatiProdRig.FINE && getPersDatiPrdCausaleRilev().getPosizionePrelievo() ==  PersDatiPrdCausaleRilev.FINE);
	}
 //Fix 24177 fine
 
 //Fix 25810 --inizio
 public Vector checkAll(BaseComponentsCollection components){
   Vector errors = super.checkAll(components);
   if (getPersDatiPrdCausaleRilev() != null && getPersDatiPrdCausaleRilev().isAbilitaDichRidotta() &&
       /*getPersDatiPrdCausaleRilev().getTipoDichiarazione() != PersDatiPrdCausaleRilev.NON_PRODUTTIVA &&*/ //Fix 33541
       (getTipoTimbratura() == RilevazioneDatiProdRig.SOSPENSIONE || getTipoTimbratura() == RilevazioneDatiProdRig.FINE) &&
       getPersDatiPrdCausaleRilev().getCausaleDocumento() != null && //39515
       getPersDatiPrdCausaleRilev().getCausaleDocumento().getRilevaTempo() != CausaleDocProduzione.NON_RILEV) { //Fix 13175
	   //Fix 30080 -- inizio
       Short arr = getPersDatiPrdCausaleRilev().getIntervMinArrotond();
       if(arr != null && arr.shortValue() == 0) {
    	   //Fix 32543 -- Inizio
	       if (getOreRilevate() == null && getMinutiRilevati() == null && getSecondiRilevati() == null) {
	         BigDecimal oreMill = calcolaTempoDaQuantita();
	         if (oreMill != null) {
	           BigDecimal [] oreMin = CalcolaTempo.calcolaOreMinutiSecondiStatic(oreMill, true);
	           setOreRilevate(oreMin[0]);
	           setMinutiRilevati(oreMin[1]);
	           setSecondiRilevati(oreMin[2]);
	         }
	       }
	       //Fix 32543 -- Fine
		   //if (getOreRilevate() == null && getMinutiRilevati() == null && getSecondiRilevati() == null) { //Fix 33541
    	   if ((getOreRilevate() == null || getOreRilevate().compareTo(ZERO) == 0) && (getMinutiRilevati() == null || getMinutiRilevati().compareTo(ZERO) == 0) && (getSecondiRilevati() == null || getSecondiRilevati().compareTo(ZERO) == 0)) { //Fix 33541
			   String str = ResourceLoader.getString(RES_FILE, "OreMinSec");
			   errors.add(new ErrorMessage("THIP110390", new String[] {str}));
		   }
	   }else {
	   //Fix 30080 -- fine   
		   //Fix 32543 -- Inizio
	       if (getOreRilevate() == null && getMinutiRilevati() == null) {
	         BigDecimal oreMill = calcolaTempoDaQuantita();
	         if (oreMill != null) {
	           BigDecimal [] oreMin = CalcolaTempo.calcolaOreMinutiSecondiStatic(oreMill, false);
	           setOreRilevate(oreMin[0]);
	           setMinutiRilevati(oreMin[1]);
	           setSecondiRilevati(oreMin[2]);
	         }
	       }
	       //Fix 32543 -- Fine
		   //if (getOreRilevate() == null && getMinutiRilevati() == null) { //Fix 33541
		   if ((getOreRilevate() == null || getOreRilevate().compareTo(ZERO) == 0) && (getMinutiRilevati() == null || getMinutiRilevati().compareTo(ZERO) == 0)) { //Fix 33541
			   String str1 = ResourceLoader.getString("it.thera.thip.produzione.documento.resources.DocumentoProduzione", "OreMinString");
			   errors.add(new ErrorMessage("THIP110390", new String[] {str1}));
		   }   
	   }// Fix 30080 
   }
   //Fix 40485 -- Inizio
   if (getBollaLavorazione() != null) {
	 if (getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO) {
	   ErrorMessage em = new ErrorMessage("THIP30T232");
	   if (em.getSeverity() == ErrorMessage.ERROR && cercaRilevazioneInCorso() != null)
	     errors.add(em);
	   em  = new ErrorMessage("THIP300303");
	   if (em.getSeverity() == ErrorMessage.ERROR && cercaRilevazioneSospesa() != null)
	     errors.add(new ErrorMessage("THIP300303"));
	 }
	 if (getTipoTimbratura() == RilevazioneDatiProdRig.RIPRESA) {
	   ErrorMessage em = new ErrorMessage("THIP300304");
	   if (em.getSeverity() == ErrorMessage.ERROR &&  cercaRilevazioneSospesa() == null)
	     errors.add(new ErrorMessage("THIP300304"));
	 }
	 boolean ridotta = false;
	 boolean bloccoInizio = false;
	 if(getPersDatiPrdCausaleRilev() != null) {
	   ridotta = getPersDatiPrdCausaleRilev().isAbilitaDichRidotta();
	   bloccoInizio = getPersDatiPrdCausaleRilev().isBloccoInizioAttivita();
	 }
	 if (bloccoInizio && (getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO || ridotta)) {
	   AttivitaEsecutiva atvEsec = getAttivitaEsecutiva();
	   AttivitaEsecutiva atvPrec = null;
	   if(atvEsec != null) {
		   atvPrec = atvEsec.getAtvEsecPrecNoAuto(atvEsec);
	   }
	   if (atvPrec != null && atvPrec.getPoliticaConsAttivita() == AttivitaEsecutiva.MANUALE && RilevDatiPrdTS.getQtaProdottaAtv(atvPrec).compareTo(new BigDecimal("0")) == 0) {
	     Vector param = new Vector();
	     String param1 = atvPrec.getIdOperazione() + "-" + atvPrec.getIdAttivita();
	     param.add(param1);
	     ErrorMessage em = new ErrorMessage("THIP40T249", param);
	     if (em.getSeverity() == ErrorMessage.ERROR) {
	    	 errors.add(em);
	     }
	   }
     }
	 //Fix 41628 -- Inizio
	 if(getTipoTimbratura() == RilevazioneDatiProdRig.SOSPENSIONE || getTipoTimbratura() == RilevazioneDatiProdRig.FINE) {
	   if (getPersDatiPrdCausaleRilev() != null) {
		 if(!ridotta) {
		   ErrorMessage em = new ErrorMessage("THIP30T233");
		   if(em.getSeverity() == ErrorMessage.ERROR && cercaRilevazioneInCorso() == null) {
			 errors.add(em);
		   }	 
		 }
		 ErrorMessage em = new ErrorMessage("THIP30T260");
		 if(em.getSeverity() == ErrorMessage.ERROR && getAttivitaEsecutiva() != null && (getAttivitaEsecutiva().getQtaResiduaUMPrm() == null || getAttivitaEsecutiva().getQtaResiduaUMPrm().compareTo(ZERO) == 0)) {
		   errors.add(new ErrorMessage("THIP30T260"));
		 }
	   }
	 }
	 //Fix 41628 -- Fine
   }
   //Fix 40485 -- Fine
   errors.addAll(checkMateriali()); //Fix 42942
   return errors;
 }
 //Fix 25810 --fine
 
//Fix 25921 --inizio
protected void setQtaPrlUmPrmInternal(BigDecimal qtaPrlUmPrm, int index) {
  index = index + (iCurrentNumPag - 1) * 20; //Fix 27421
  if(qtaPrlUmPrm != null)
    iQtaPrlUmPrm.put(new Integer(index), qtaPrlUmPrm);
  else if (iQtaPrlUmPrm != null && iQtaPrlUmPrm.size() > index)
    iQtaPrlUmPrm.put(new Integer(index), null);
}

protected void setQtaPrlUmSecInternal(BigDecimal qtaPrlUmSec, int index) {
  index = index + (iCurrentNumPag - 1) * 20; //Fix 27421
  if(qtaPrlUmSec != null)
    iQtaPrlUmSec.put(new Integer(index), qtaPrlUmSec);
  else if (iQtaPrlUmSec != null && iQtaPrlUmSec.size() > index)
 	 iQtaPrlUmSec.put(new Integer(index), null);
}

protected void setQtaVrsUmPrmInternal(BigDecimal qtaVrsUmPrm, int index) {
  index = index + (iCurrentNumPag - 1) * 20; //Fix 27421
  if(qtaVrsUmPrm != null)
    iQtaVrsUmPrm.put(new Integer(index), qtaVrsUmPrm);
  else if (iQtaVrsUmPrm != null && iQtaVrsUmPrm.size() > index)
 	 iQtaVrsUmPrm.put(new Integer(index), null);
}

protected void setQtaVrsUmSecInternal(BigDecimal qtaVrsUmSec, int index) {
  index = index + (iCurrentNumPag - 1) * 20; //Fix 27421
  if(qtaVrsUmSec != null)
    iQtaVrsUmSec.put(new Integer(index), qtaVrsUmSec);
  else if (iQtaVrsUmSec != null && iQtaVrsUmSec.size() > index)
 	 iQtaVrsUmSec.put(new Integer(index), null);
} 

protected void setQtaScartoUmPrmInternal(BigDecimal qtaScartoUmPrm, int index) {
  index = index + (iCurrentNumPag - 1) * 20; //Fix 27421
  if(qtaScartoUmPrm != null)
 	 iQtaScartoUmPrm.put(new Integer(index), qtaScartoUmPrm);
  else if (iQtaScartoUmPrm != null && iQtaScartoUmPrm.size() > index)
 	 iQtaScartoUmPrm.put(new Integer(index), null);
}

protected void setQtaScartoUmSecInternal(BigDecimal qtaScartoUmSec, int index) {
  index = index + (iCurrentNumPag - 1) * 20; //Fix 27421
  if(qtaScartoUmSec != null)
 	 iQtaScartoUmSec.put(new Integer(index), qtaScartoUmSec);
  else if (iQtaScartoUmSec != null && iQtaScartoUmSec.size() > index)
 	 iQtaScartoUmSec.put(new Integer(index), null);
}
//Fix 25921 --fine

//Fix 27778 inizio
public void setRilevazioneTesFine(RilevazioneDatiProdTes rilevazioneTesFine) {
  this.iRilevazioneTesFine = rilevazioneTesFine;
}
//Fix 27778 fine

  //Fix 30080 -- Inizio
  public void setSecondiRilevati(BigDecimal secondiRilevati) {
	  iSecondiRilevati = secondiRilevati;
	  setDirty();
  }

  public BigDecimal getSecondiRilevati() {
	  return iSecondiRilevati;
  }
  public ErrorMessage checkSecondiRilevati() {
	  ErrorMessage errore = null;
	  errore = controllaSecondiRilevati(getOreRilevate(), getMinutiRilevati(),getSecondiRilevati());
	  return errore;
  }

  public ErrorMessage controllaSecondiRilevati(BigDecimal orerilevate, BigDecimal minutirilevati, BigDecimal secondiRilevati) {
	  ErrorMessage result = null;
	  if (secondiRilevati != null) {
		  if (orerilevate == null || orerilevate.compareTo(ZERO) == 0) {
			  if (minutirilevati.compareTo(MENOCINQUANTANOVE) > 0 || minutirilevati.compareTo(CINQUANTANOVE) < 0) {
				  if (secondiRilevati.compareTo(MENOCINQUANTANOVE) < 0 || secondiRilevati.compareTo(CINQUANTANOVE) > 0) {
					  result = new ErrorMessage("THIP_TN65");
				  }
			  }
		  }
		  else if (orerilevate.compareTo(ZERO) < 0) {
			  if (minutirilevati.compareTo(MENOCINQUANTANOVE) > 0 || minutirilevati.compareTo(ZERO) < 0) {
				  if (secondiRilevati.compareTo(MENOCINQUANTANOVE) < 0 || secondiRilevati.compareTo(ZERO) > 0) {
					  result = new ErrorMessage("THIP_TN65");  
				  }
			  }
		  }
		  else {
			  if (minutirilevati.compareTo(ZERO) > 0 || minutirilevati.compareTo(CINQUANTANOVE) < 0) {
				  if (secondiRilevati.compareTo(ZERO) < 0 || secondiRilevati.compareTo(CINQUANTANOVE) > 0) {
					  result = new ErrorMessage("THIP_TN65");  
				  }
			  }
		  }
	  }
	  return result;
  }
  //Fix 30080 -- Fine
  //Fix30104 -- Inizio
  public static boolean isCreazioneAutomaticaLottiDaDoc(Articolo articolo) {
    boolean creaLottiAuto = false;
    if (articolo.getArticoloDatiMagaz().getCodAutLotProd() != ArticoloDatiMagaz.NO) {
      if (articolo.getArticoloDatiMagaz().getGenAutLotProd() == ArticoloDatiMagaz.CREA_DA_DOCUMENTO)
        creaLottiAuto = true;
      else if (articolo.getArticoloDatiMagaz().getCodAutLotProd() == ArticoloDatiMagaz.DEFAULT &&
               PersDatiMagazzino.getCurrentPersDatiMagazzino().getGenAutLotProd() == PersDatiMagazzino.CREA_DA_DOCUMENTO)
      creaLottiAuto = true;
    }
    return creaLottiAuto;
  }
  //Fix 30104 -- Fine
  
  //Fix 30440 -- inizio
  public java.sql.Date getDataFine() {
      return iDataFine;
  }
  
  public void  setDataFine(java.sql.Date dataFine) {
      iDataFine=dataFine;
      setDirty();
  }
  //Fix 30440 -- fine
  
  //Fix 30572 -- inizio
  /**
   * Valorizza l'attributo.
   * @param commessa
   */

  public void setCommessa(Commessa commessa) {
    String oldObjectKey = getKey();
    String idAzienda = null;
    if (commessa != null) {
      idAzienda = KeyHelper.getTokenObjectKey(commessa.getKey(), 1);
    }
    setIdAziendaInternal(idAzienda);
    this.iCommessa.setObject(commessa);
    setDirty();
    if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
      setOnDB(false);
    }
  }

  /**
   * Restituisce l'attributo.
   * @return Commessa
   */

  public Commessa getCommessa() {
    return (Commessa) iCommessa.getObject();
  }

  /**
   * setCommessaKey
   * @param key
   */

  public void setCommessaKey(String key) {
    String oldObjectKey = getKey();
    iCommessa.setKey(key);
    String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
    setIdAziendaInternal(idAzienda);
    setDirty();
    if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
      setOnDB(false);
    }
  }

  /**
   * getCommessaKey
   * @return String
   */

  public String getCommessaKey() {
    return iCommessa.getKey();
  }

  /**
   * Valorizza l'attributo.
   * @param idCommessa
   */
  public void setIdCommessa(String idCommessa) {
    String key = iCommessa.getKey();
    iCommessa.setKey(KeyHelper.replaceTokenObjectKey(key, 2, idCommessa));
    setDirty();
  }

  /**
   * Restituisce l'attributo.
   * @return String
   */

  public String getIdCommessa() {
    String key = iCommessa.getKey();
    String objIdCommessa = KeyHelper.getTokenObjectKey(key, 2);
    return objIdCommessa;
  }
  
  public String getDescrizioneCommessa() {
    if (getCommessa() != null) {
       return getCommessa().getDescrizione().getDescrizione();
    }
    return "";
  }
  
  public Commessa leggiCommessa() {
	AttivitaEsecutiva atvEsec = getAttivitaEsecutiva();
	if (atvEsec != null) {
		if(atvEsec.getOrdineEsecutivo().getCommessa()!= null) {
	   		return atvEsec.getOrdineEsecutivo().getCommessa();
	   	}	    		
	}
	return null;
  }
  
  public Vector getListBollaCucitaNonIniziata(String idOperatore) {
    Vector listaBollaCucita = new Vector();
    String where = BollaCucitaTesTM.ID_AZIENDA + "='" + getIdAzienda() + "' AND " +
    			   BollaCucitaTesTM.NUM_RITORNO  +" NOT IN (SELECT " + RilevazioneDatiProdTesTM.NUM_RITORNO  +
    			   " FROM " + RilevazioneDatiProdTesTM.TABLE_NAME + " WHERE " + RilevazioneDatiProdTesTM.ID_AZIENDA +
    			   " = '" + getIdAzienda() + "' AND " + RilevazioneDatiProdTesTM.NUM_RITORNO +" IS NOT NULL " + ") ";   
      where = where + " AND " + BollaCucitaTesTM.R_OPERATORE + "='" + idOperatore + "'"; 
    try{
       String orderBy = "";
       listaBollaCucita = BollaCucitaTes.retrieveList(where, orderBy, true);
    }
    catch(Exception ex){
       ex.printStackTrace(Trace.excStream);
    }
    return listaBollaCucita;
  }
  //Fix 30572 -- fine
  
  //Fix 30900 -- inizio
  /**
   * Restituisce l'attributo.
   * @return String
   */
  public String getStampaBolla() {
    return iStampaBolla;
  }

  /**
   *
   * @param stampaBolla String
   */
  public void setStampaBolla(String stampaBolla) {
    this.iStampaBolla = stampaBolla;
  }
  //Fix 30900 -- fine
  
  //Fix 31183 -- inizio
  protected BigDecimal getQtaProdottaAtvInternal(AttivitaEsecutiva attivita) {
    BigDecimal ret = null;
    if (attivita != null) {
      ret = attivita.getQtaProdottaUMPrm();
      if (ret == null)
        ret = RilevazioneDatiProdTes.ZERO;
      BigDecimal[] qta = getQtaRilevata(attivita);
      if (qta[0] != null) {
        ret = ret.add(qta[0]);
      }
    }
    else
      ret = RilevazioneDatiProdTes.ZERO;
    return ret;
  }
  
  protected BigDecimal getQtaScartataAtvInternal(AttivitaEsecutiva attivita) {
	BigDecimal ret = null;
	if (attivita != null) {
		ret = attivita.getQtaScartataUMPrm();
		if (ret == null)
			ret = RilevazioneDatiProdTes.ZERO;
		BigDecimal[] qta = getQtaScartataRilevata(attivita);
		if (qta[0] != null) {
			ret = ret.add(qta[0]);
		}
	}
	else
		ret = RilevazioneDatiProdTes.ZERO;
	return ret;
  }
  
  protected BigDecimal getQtaResiduaAtvInternal(AttivitaEsecutiva attivita) {
	BigDecimal ret = null;
	if (attivita != null) {
	   ret = attivita.getQtaResiduaUMPrm();
	   if (ret == null)
	       ret = RilevazioneDatiProdTes.ZERO;
	   BigDecimal[] qta = getQtaRilevata(attivita);
	   if (qta[0] != null) {
	       ret = ret.subtract(qta[0]);
	       if (ret.compareTo(new BigDecimal("0")) < 0) {
	    	 //ret = new BigDecimal("0").setScale(2);//Fix 30965
	         ret = Q6Calc.get().setScale(new BigDecimal("0"), 2);//Fix 30965
	       }
	   }
	}
	else
	   ret = RilevazioneDatiProdTes.ZERO;
	return ret;
  }
  
  protected BigDecimal getQtaResiduaAtvMatInternal(AttivitaEsecMateriale atvMat) {
	BigDecimal ret = null;
	if (atvMat != null) {
	    ret = atvMat.getQtaResiduaUMPrm();
	    if (ret == null)
	      ret = ZERO;
	    BigDecimal[] qta = getQtaPrelevata(atvMat);
	    if (qta[0] != null) {
	      ret = ret.subtract(qta[0]);
	      if (ret.compareTo(ZERO) < 0) {
	    	//ret = ZERO.setScale(2);//Fix 30965
	        ret = Q6Calc.get().setScale(ZERO, 2);//Fix 30965
	      }
	    }
	}
	else
	    ret = ZERO;
	return ret;
  }
  
  protected BigDecimal getQtaBuonaInternal(BollaCucitaRig riga) {
	BigDecimal ret = riga != null ? riga.getQtaDaProdurrePrm() : null;
	if (ret != null) {
	    Iterator iter = cercaRilevazioniBollaCucitaRig(riga).iterator();
	    while (iter.hasNext()) {
	       RilevazioneDatiProdTes rilevazione = (RilevazioneDatiProdTes) iter.next();
	       if (rilevazione.getQuantita() != null) {
	         ret = ret.subtract(rilevazione.getQuantita());
	         if (ret.compareTo(new BigDecimal("0")) < 0){
	        	//ret = new BigDecimal("0").setScale(2);//Fix 30965
	            ret = Q6Calc.get().setScale(new BigDecimal("0"), 2);//Fix 30965
	         }
	       }
	    }
	}
	if (ret == null)
	   ret = RilevazioneDatiProdTes.ZERO;
	return ret;
  }
  //Fix 31183 -- fine
  
  //Fix 33053 -- Inizio
  public boolean isInPrelieviJsp() {
    return iInPrelieviJsp;
  }

  public void setInPrelieviJsp(boolean inPrelieviJsp) {
    this.iInPrelieviJsp = inPrelieviJsp;
  }	
  //Fix 33053 -- Fine
  
  //Fix 33517 -- Inizio
  public void setConfigurazione(Configurazione configurazione) {
    String oldObjectKey = getKey();
    String idAzienda = null;
    if (configurazione != null) {
      idAzienda = KeyHelper.getTokenObjectKey(configurazione.getKey(), 1);
    }
    setIdAziendaInternal(idAzienda);
    this.iConfigurazione.setObject(configurazione);
    setDirty();
    if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
      setOnDB(false);
    }
  }

  public Configurazione getConfigurazione() {
    return (Configurazione)iConfigurazione.getObject();
  }

  public void setConfigurazioneKey(String key) {
    String oldObjectKey = getKey();
    iConfigurazione.setKey(key);
    String idAzienda = KeyHelper.getTokenObjectKey(key, 1);
    setIdAziendaInternal(idAzienda);
    setDirty();
    if (!KeyHelper.areEqual(oldObjectKey, getKey())) {
      setOnDB(false);
    }
  }

  public String getConfigurazioneKey() {
    return iConfigurazione.getKey();
  }

  public void setIdConfigurazione(Integer idConfigurazione) {
    String key = iConfigurazione.getKey();
    iConfigurazione.setKey(KeyHelper.replaceTokenObjectKey(key , 2, idConfigurazione));
    setDirty();
  }

  public Integer getIdConfigurazione() {
    String key = iConfigurazione.getKey();
    String objIdConfigurazione = KeyHelper.getTokenObjectKey(key,2);
    return KeyHelper.stringToIntegerObj(objIdConfigurazione);
  }
  
  public String getIdEsternoConfig() {
	if(getConfigurazione() != null) {
		return getConfigurazione().getIdEsternoConfig();	
	}
    return null ;
  }

  public void setIdEsternoConfig(String idEsternoConfig) {
	if(idEsternoConfig != null) {
		getConfigurazione().setIdEsternoConfig(idEsternoConfig);	
	}
  }
  
  public String getDescrizioneConfig() {
    if (getConfigurazione() != null) {
       return getConfigurazione().getDescrizione().getDescrizione();
    }
    return "";
  }
  
  public Configurazione leggiConfigurazione() {
	AttivitaEsecutiva atvEsec = getAttivitaEsecutiva();
	if (atvEsec != null) {
		if(atvEsec.getOrdineEsecutivo().getConfigurazione() != null) {
	   		return atvEsec.getOrdineEsecutivo().getConfigurazione();
	   	}	    		
	}
	return null;
  }
  //Fix 33517 -- Fine
  
  // Fix 34100 -- Inizio
  public PersistentObjectCursor getRilevazioneSospesaCursor(String idRisorsa, char tipoRisorsa) {
	String where = RilevazioneDatiProdTesTM.ID_AZIENDA + "='" + getIdAzienda() + "' AND "
					+ RilevazioneDatiProdTesTM.TIPO_RISORSA + "='" + tipoRisorsa + "' AND "
					+ RilevazioneDatiProdTesTM.LIVELLO_RISORSA + "='" + Risorsa.MATRICOLA + "' AND "
					+ RilevazioneDatiProdTesTM.R_RISORSA + "='" + idRisorsa + "' AND " + RilevazioneDatiProdTesTM.STATO_RIL
					+ "='" + RilevazioneDatiProdTes.SOSPESA + "'";
	
	PersistentObjectCursor poCursor = new PersistentObjectCursor(RilevazioneDatiProdTes.class.getName(), where, "",	PersistentObject.NO_LOCK);
	return poCursor;
  }

  public Vector getListAttivitaNonIniziataProssimaAtvCursor(String idRisorsa, char tipoRisorsa) {
	PersistentObjectCursor attivitaTutteCursor = getListAttivitaNonIniziataCursor(idRisorsa, tipoRisorsa);
	List attivitaBlu = new ArrayList();
	List attivitaGialle = new ArrayList();
	List attivitaRosse = new ArrayList();
	raggruppaListaAttivitaCursor(attivitaTutteCursor, attivitaBlu, attivitaGialle, attivitaRosse);
	Vector ret = new Vector(attivitaBlu);
	return ret;
  }

  public PersistentObjectCursor getListAttivitaNonIniziataCursor(String idRisorsa, char tipoRisorsa) {
	PersistentObjectCursor cursor = null;
    //Fix 40438 -- Inizio
    boolean isSoloAtvAssegnate = false;
    if(getPersDatiPrdUtenteRilev() != null ) {
    	isSoloAtvAssegnate = getPersDatiPrdUtenteRilev().isSoloAtvAssegnate();
    }
    //Fix 40438 -- Fine
	String where = ListaAttivitaTM.ID_AZIENDA + "='" + getIdAzienda() + "' AND (" + ListaAttivitaTM.STATO_RIL_ATV
					+ "='" + ListaAttivita.NON_INIZIATA + "' OR " + ListaAttivitaTM.STATO_RIL_ATV + "='"
					+ ListaAttivita.SOSPESA + "') ";
	if (getIdAmbiente() != null)
		where += " AND " + ListaAttivitaTM.ID_AMBIENTE + "='" + getIdAmbiente() + "'";
	if (tipoRisorsa == Risorsa.MACCHINE) {
		Risorsa macchina = getMacchina();
		//Fix 40438 -- Inizio
		if(isSoloAtvAssegnate) {
		  where = where + " AND " + ListaAttivitaTM.TIPO_RISORSA + "='" + tipoRisorsa + "' AND "
				+ ListaAttivitaTM.R_MACCHINA + "='" + idRisorsa + "' ";	
		}
		else {
		//Fix 40438 -- Fine
		  where = where + " AND " + ListaAttivitaTM.TIPO_RISORSA + "='" + tipoRisorsa + "' AND "
				+ ListaAttivitaTM.LIVELLO_RISORSA + "='" + Risorsa.RISORSA + "' AND " + ListaAttivitaTM.R_RISORSA
				+ "='" + macchina.getIdRisorsaAppart() + "' AND (" + ListaAttivitaTM.R_MACCHINA + " IS NULL OR "
				+ ListaAttivitaTM.R_MACCHINA + "='" + idRisorsa + "')";
		}//Fix 40438
	} else if (tipoRisorsa == Risorsa.RISORSE_UMANE) {
		Risorsa operatore = getOperatoreRisorsa();
		if (operatore != null) {
			//Fix 40438 -- Inizio
			if(isSoloAtvAssegnate) {
			  where = where + " AND " + ListaAttivitaTM.TIPO_RISORSA + "='" + tipoRisorsa + "' AND "
					+ ListaAttivitaTM.R_OPERATORE + "='" + idRisorsa + "' ";
			}
			else {
			//Fix 40438 -- Fine
			  where = where + " AND " + ListaAttivitaTM.TIPO_RISORSA + "='" + tipoRisorsa + "' AND "
					+ ListaAttivitaTM.LIVELLO_RISORSA + "='" + Risorsa.RISORSA + "' AND "
					+ ListaAttivitaTM.R_RISORSA + " IN (" + getRisorseApp(idRisorsa) + ") AND ("
					+ ListaAttivitaTM.R_OPERATORE + " IS NULL OR " + ListaAttivitaTM.R_OPERATORE + "='" + idRisorsa
					+ "')";
			}//Fix 40438
		}else
			where = where + " AND " + ListaAttivitaTM.R_OPERATORE + "='" + idRisorsa + "'";
	}

	String orderBy = ListaAttivitaTM.PRIORITA + "," + ListaAttivitaTM.DATA_INIZIO + ","	+ ListaAttivitaTM.ORA_INIZIO;
	PersistentObjectCursor poCursor = new PersistentObjectCursor(ListaAttivita.class.getName(), where, orderBy,	PersistentObject.NO_LOCK);

	return poCursor;
  }

  public void raggruppaListaAttivitaCursor(PersistentObjectCursor attivitaTutteCursor, List attivitaBlu,
		List attivitaGialle, List attivitaRosse) {
	try {
		while (attivitaTutteCursor.hasNext()) {
			ListaAttivita listaAttivita = (ListaAttivita) attivitaTutteCursor.next();
			if (listaAttivita.getStatoRilevAttivita() == ListaAttivita.SOSPESA)
				attivitaBlu.add(listaAttivita);
			else {
				List atvPrecedenti = listaAttivita.getAttivitaEsecutiva().getAttivitaPrecedenti();
				if (atvPrecedenti.isEmpty()) {
					attivitaBlu.add(listaAttivita);
				} else {
					AttivitaEsecutiva atvEsec = listaAttivita.getAttivitaEsecutiva();
					if (atvEsec.getPoliticaConsAttivita() == AttivitaEsecutiva.MANUALE) {
						try {
							AttivitaEsecutiva atvPcd = atvEsec.getAtvEsecPrecedente();
							if (atvPcd != null) {
								BigDecimal qtaRes = RilevDatiPrdTS.getQtaResiduaAtv(atvPcd);
								BigDecimal qtaPrd = RilevDatiPrdTS.getQtaProdottaAtv(atvPcd);
								if (qtaPrd.compareTo(new BigDecimal("0")) == 0) {
									attivitaRosse.add(listaAttivita);
								} else if (qtaRes.compareTo(new BigDecimal("0")) == 0) {
									attivitaBlu.add(listaAttivita);
								} else {
									attivitaGialle.add(listaAttivita);
								}
							} else {
								attivitaBlu.add(listaAttivita);
							}
						} catch (Exception ex) {
							ex.printStackTrace(Trace.excStream);
						}
					}
				}
			}
		}
	} catch (SQLException e) {
		e.printStackTrace(Trace.excStream);
	}
	//40762 inizio
	finally {
		if(attivitaTutteCursor != null)
			try{attivitaTutteCursor.free();}catch(SQLException e) {e.printStackTrace(Trace.excStream);}
	}
	//40762 fine
  }
  // Fix 34100 -- Fine
  
  //Fix 34773 -- Inizio
  protected boolean macchinaAppartieneRsrPrinc() {
	if (getMacchina() != null && getAttivitaEsecutiva() != null) {
	  String rsrKey = getMacchina().getKey();
	  String rsrPadreKey = null;
	  if (getMacchina().getLivelloRisorsa() == Risorsa.MATRICOLA)
		rsrPadreKey = getMacchina().getRisorsaAppartKey();

	  AttivitaEsecRisorsa rsrCurrent = getAttivitaEsecutiva().getAtvEsecRsrPrincipale();
	  if (rsrCurrent != null) {
		String rsrCurrentKey = rsrCurrent.getRisorsaKey();
		if (Utils.areEqual(rsrCurrentKey, rsrKey))
		  return true;

		String rsrPadreCurrentKey = null;
		if (rsrCurrent.getLivelloRisorsa() == Risorsa.MATRICOLA)
		  rsrPadreCurrentKey = rsrCurrent.getRisorsa().getRisorsaAppartKey();

		if (Utils.areEqual(rsrCurrentKey, rsrKey) || Utils.areEqual(rsrCurrentKey, rsrPadreKey) ||
					(rsrPadreCurrentKey != null && (Utils.areEqual(rsrPadreCurrentKey, rsrKey) ||
					Utils.areEqual(rsrPadreCurrentKey, rsrPadreKey))))
		  return true;

		return false;
	  }
	}
	return true;
  }
  //Fix 34773 -- Fine
  
  //Fix 32543 -- Inizio
  public BigDecimal calcolaTempoDaQuantita() {
    CausaleDocProduzione causaleDoc = getPersDatiPrdCausaleRilev().getCausaleDocumento();
    if(causaleDoc != null && causaleDoc.getModalitaRilevTempi() == CausaleDocProduzione.AUTOMATICO) {
      AttivitaEsecutiva attivitaEsecutiva = getAttivitaEsecutiva();
      AttivitaEsecRisorsa atvEsecRis = attivitaEsecutiva.getAtvEsecRsrPrincipale();
      if (atvEsecRis != null) {
        RilevazioneDatiProdTes ril = (RilevazioneDatiProdTes) Factory.createObject(RilevazioneDatiProdTes.class);
        BigDecimal oreCent = ril.calcolaOreRichieste(atvEsecRis, getQuantita(), getQtaScarto(), getBollaLavorazione(), causaleDoc.getRilevaTempo());
        return oreCent;
      }
    }
    return null;
  }
  //Fix 32543 -- Fine
  
  //Fix 36358 -- Inizio
  public static BigDecimal getQtaResiduaAtvPrd(AttivitaEsecProdotto attivitaEsecProd){  
    return iRilevDatiPrdTSInternal.getQtaResiduaAtvPrdInternal(attivitaEsecProd);
  }
  
  protected BigDecimal getQtaResiduaAtvPrdInternal(AttivitaEsecProdotto attivitaEsecProd) {
	BigDecimal ret = null;
	if (attivitaEsecProd != null) {
	   ret = attivitaEsecProd.getQtaResiduaUMPrm();
	   if (ret == null)
	       ret = RilevazioneDatiProdTes.ZERO;
	   BigDecimal[] qta = getQtaRilevata(attivitaEsecProd);
	   if (qta[0] != null) {
	       ret = ret.subtract(qta[0]);
	       if (ret.compareTo(new BigDecimal("0")) < 0) {
	         ret = Q6Calc.get().setScale(new BigDecimal("0"), 2);
	       }
	   }
	}
	else
	   ret = RilevazioneDatiProdTes.ZERO;
	return ret;
  }
  
  public static synchronized BigDecimal[] getQtaRilevata(AttivitaEsecProdotto attivitaEsecProd) {
	BigDecimal[] Qta = new BigDecimal[2];
	try {
	   ResultSet rs = null;
	   PreparedStatement ps = SommaQtaRilevataProdStmt.getStatement();
	   Database db = ConnectionManager.getCurrentDatabase();
	   db.setString(ps, 1, attivitaEsecProd.getIdAzienda());
	   db.setString(ps, 2, attivitaEsecProd.getAttivitaEsecutiva().getNumeroRitorno());
	   rs = ps.executeQuery();
	   if (rs.next()) {
	     Qta[0] = rs.getBigDecimal(1)!=null ? rs.getBigDecimal(1) : new BigDecimal(0);
	     Qta[1] = rs.getBigDecimal(2)!=null ? rs.getBigDecimal(2) : new BigDecimal(0);
	   }
	}
	catch (SQLException ex) {
	  ex.printStackTrace(Trace.excStream);
	}
	return Qta;
  }
  //Fix 36358 -- Fine
  //Fix 36505 -- Inizio
  public int saveListaAtvDiBollaCucita(int rc) {
	List listRighe = getBollaCucita().getRighe();
	if (!listRighe.isEmpty()) {
	  Iterator iterRighe = listRighe.iterator();
	  while (iterRighe.hasNext() && rc >=0) {
	    try {
	      BollaCucitaRig riga = (BollaCucitaRig) iterRighe.next();
	      if(riga != null && riga.getAttivita() != null) {
	    	String where = ListaAttivitaTM.NUM_RITORNO + " ='" + riga.getAttivita().getNumeroRitorno() + "' ";
	    	Vector listaAtv = ListaAttivita.retrieveList(where, "", true);
	        if (!listaAtv.isEmpty()) {
	          rc = saveListaAttivita(((ListaAttivita) listaAtv.get(0)));
	        }
	      }
	    }
	    catch(Exception e) {
	      e.printStackTrace(Trace.excStream);
	    }
	  }
	}
	return rc;
  }
  
  public int saveListaAttivita(ListaAttivita listaAttivita){
	int rc = 0;
    if(listaAttivita != null){
       if(getTipoTimbratura() == RilevazioneDatiProdRig.INIZIO || getTipoTimbratura() == RilevazioneDatiProdRig.RIPRESA){
          listaAttivita.setStatoRilevAttivita(ListaAttivita.IN_CORSO);
       }
       else if(getTipoTimbratura() == RilevazioneDatiProdRig.FINE){
         BigDecimal qta = RilevDatiPrdTS.getQtaResiduaAtv(listaAttivita.getAttivitaEsecutiva());
         if(getSaldo() == DocumentoProduzione.SALDO ||
            (getSaldo() == DocumentoProduzione.AUTOMATICO && qta.compareTo(RilevazioneDatiProdTes.ZERO) == 0)) {
            listaAttivita.setStatoRilevAttivita(ListaAttivita.COMPLETATA);
         }
         else{
           listaAttivita.setStatoRilevAttivita(ListaAttivita.SOSPESA);
         }
       }
       try{
         if(listaAttivita.getTipoRisorsa() == Risorsa.MACCHINE){
           listaAttivita.setIdMacchina(getIdRisorsa());
           if(getTipoTimbratura() == RilevazioneDatiProdRig.FINE) {
             listaAttivita.setIdOperatore(null);
             BigDecimal qtaRes = listaAttivita.getQtaResiduaUMPrm().subtract(iRilevazioneTesFine.getQuantita());
             if (getQtaScarto() != null)
               qtaRes = qtaRes.subtract(getQtaScarto());
             listaAttivita.setQtaResiduaUMPrm(qtaRes);
             BigDecimal oreRes = listaAttivita.getOreResidue().subtract(iRilevazioneTesFine.getOreMillesimi());
             listaAttivita.setOreResidue(oreRes);
           }
           else
             listaAttivita.setIdOperatore(getIdOperatore());
           listaAttivita.setAssegnata(true);
         }
         else{
           listaAttivita.setIdOperatore(getIdRisorsa());
           listaAttivita.setAssegnata(true);
         }
         return listaAttivita.save();
       }
       catch(Exception ex){
         ex.printStackTrace(Trace.excStream);
       }
    }
    return rc;
  }
  //Fix 36505 -- Fine
  
  //Fix 38345 -- Inizio
  public ErrorMessage checkDataFine(){
    String  annoFiscale = CalendarioFiscale.getAnnoFiscaleDaData(getDataFine());
    if(annoFiscale == null)
      return new ErrorMessage("THIP_BS142");

    PeriodoCalFiscale periodo = CalendarioFiscale.getPeriodoCalFiscaleDaData(getDataFine());
    if (periodo != null && periodo.getStatoChiusuraMag() == PeriodoCalFiscale.DEFINITIVO)
      return new ErrorMessage("THIP110096");
  
    return null;
  }
  //Fix 38345 -- Fine
  
  //Fix 39680 -- Inizio
  public boolean isRicalcoloQuantita() {
    return iRicalcoloQuantita;
  }

  public void setRicalcoloQuantita(boolean ricalcoloQuantita) {
    this.iRicalcoloQuantita = ricalcoloQuantita;
  }
  
  //iRicalcoloQuantitaPrl
  public void setRicalcoloQuantitaPrl1(boolean ricalcoloQuantitaPrl){
	iRicalcoloQuantitaPrl.put(new Integer((0 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaPrl);
  }

  public boolean isRicalcoloQuantitaPrl1(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaPrl.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaPrl.get(new Integer(0 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaPrl2(boolean ricalcoloQuantitaPrl){
	iRicalcoloQuantitaPrl.put(new Integer((1 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaPrl);
  }

  public boolean isRicalcoloQuantitaPrl2(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaPrl.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaPrl.get(new Integer(1 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaPrl3(boolean ricalcoloQuantitaPrl){
	iRicalcoloQuantitaPrl.put(new Integer((2 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaPrl);
  }

  public boolean isRicalcoloQuantitaPrl3(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaPrl.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaPrl.get(new Integer(2 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaPrl4(boolean ricalcoloQuantitaPrl){
	iRicalcoloQuantitaPrl.put(new Integer((3 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaPrl);
  }

  public boolean isRicalcoloQuantitaPrl4(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaPrl.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaPrl.get(new Integer(3 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaPrl5(boolean ricalcoloQuantitaPrl){
	iRicalcoloQuantitaPrl.put(new Integer((4 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaPrl);
  }

  public boolean isRicalcoloQuantitaPrl5(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaPrl.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaPrl.get(new Integer(4 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaPrl6(boolean ricalcoloQuantitaPrl){
	iRicalcoloQuantitaPrl.put(new Integer((5 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaPrl);
  }

  public boolean isRicalcoloQuantitaPrl6(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaPrl.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaPrl.get(new Integer(5 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaPrl7(boolean ricalcoloQuantitaPrl){
	iRicalcoloQuantitaPrl.put(new Integer((6 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaPrl);
  }

  public boolean isRicalcoloQuantitaPrl7(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaPrl.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaPrl.get(new Integer(6 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaPrl8(boolean ricalcoloQuantitaPrl){
	iRicalcoloQuantitaPrl.put(new Integer((7 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaPrl);
  }

  public boolean isRicalcoloQuantitaPrl8(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaPrl.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaPrl.get(new Integer(7 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaPrl9(boolean ricalcoloQuantitaPrl){
	iRicalcoloQuantitaPrl.put(new Integer((8 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaPrl);
  }

  public boolean isRicalcoloQuantitaPrl9(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaPrl.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaPrl.get(new Integer(8 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaPrl10(boolean ricalcoloQuantitaPrl){
	iRicalcoloQuantitaPrl.put(new Integer((9 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaPrl);
  }

  public boolean isRicalcoloQuantitaPrl10(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaPrl.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaPrl.get(new Integer(9 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaPrl11(boolean ricalcoloQuantitaPrl){
	iRicalcoloQuantitaPrl.put(new Integer((10 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaPrl);
  }

  public boolean isRicalcoloQuantitaPrl11(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaPrl.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaPrl.get(new Integer(10 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaPrl12(boolean ricalcoloQuantitaPrl){
	iRicalcoloQuantitaPrl.put(new Integer((11 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaPrl);
  }

  public boolean isRicalcoloQuantitaPrl12(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaPrl.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaPrl.get(new Integer(11 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaPrl13(boolean ricalcoloQuantitaPrl){
	iRicalcoloQuantitaPrl.put(new Integer((12 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaPrl);
  }

  public boolean isRicalcoloQuantitaPrl13(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaPrl.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaPrl.get(new Integer(12 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaPrl14(boolean ricalcoloQuantitaPrl){
	iRicalcoloQuantitaPrl.put(new Integer((13 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaPrl);
  }

  public boolean isRicalcoloQuantitaPrl14(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaPrl.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaPrl.get(new Integer(13 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaPrl15(boolean ricalcoloQuantitaPrl){
	iRicalcoloQuantitaPrl.put(new Integer((14 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaPrl);
  }

  public boolean isRicalcoloQuantitaPrl15(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaPrl.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaPrl.get(new Integer(14 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaPrl16(boolean ricalcoloQuantitaPrl){
	iRicalcoloQuantitaPrl.put(new Integer((15 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaPrl);
  }

  public boolean isRicalcoloQuantitaPrl16(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaPrl.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaPrl.get(new Integer(15 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaPrl17(boolean ricalcoloQuantitaPrl){
	iRicalcoloQuantitaPrl.put(new Integer((16 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaPrl);
  }

  public boolean isRicalcoloQuantitaPrl17(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaPrl.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaPrl.get(new Integer(16 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaPrl18(boolean ricalcoloQuantitaPrl){
	iRicalcoloQuantitaPrl.put(new Integer((17 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaPrl);
  }

  public boolean isRicalcoloQuantitaPrl18(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaPrl.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaPrl.get(new Integer(17 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaPrl19(boolean ricalcoloQuantitaPrl){
	iRicalcoloQuantitaPrl.put(new Integer((18 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaPrl);
  }

  public boolean isRicalcoloQuantitaPrl19(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaPrl.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaPrl.get(new Integer(18 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaPrl20(boolean ricalcoloQuantitaPrl){
	iRicalcoloQuantitaPrl.put(new Integer((19 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaPrl);
  }

  public boolean isRicalcoloQuantitaPrl20(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaPrl.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaPrl.get(new Integer(19 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  //iRicalcoloQuantitaVers
  public void setRicalcoloQuantitaVers1(boolean ricalcoloQuantitaVers){
	iRicalcoloQuantitaVers.put(new Integer((0 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaVers);
  }

  public boolean isRicalcoloQuantitaVers1(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaVers.get(new Integer(0 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaVers.get(new Integer(0 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaVers2(boolean ricalcoloQuantitaVers){
	iRicalcoloQuantitaVers.put(new Integer((1 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaVers);
  }

  public boolean isRicalcoloQuantitaVers2(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaVers.get(new Integer(1 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaVers.get(new Integer(1 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaVers3(boolean ricalcoloQuantitaVers){
	iRicalcoloQuantitaVers.put(new Integer((2 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaVers);
  }

  public boolean isRicalcoloQuantitaVers3(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaVers.get(new Integer(2 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaVers.get(new Integer(2 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaVers4(boolean ricalcoloQuantitaVers){
	iRicalcoloQuantitaVers.put(new Integer((3 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaVers);
  }

  public boolean isRicalcoloQuantitaVers4(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaVers.get(new Integer(3 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaVers.get(new Integer(3 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaVers5(boolean ricalcoloQuantitaVers){
	iRicalcoloQuantitaVers.put(new Integer((4 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaVers);
  }

  public boolean isRicalcoloQuantitaVers5(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaVers.get(new Integer(4 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaVers.get(new Integer(4 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaVers6(boolean ricalcoloQuantitaVers){
	iRicalcoloQuantitaVers.put(new Integer((5 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaVers);
  }

  public boolean isRicalcoloQuantitaVers6(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaVers.get(new Integer(5 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaVers.get(new Integer(5 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaVers7(boolean ricalcoloQuantitaVers){
	iRicalcoloQuantitaVers.put(new Integer((6 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaVers);
  }

  public boolean isRicalcoloQuantitaVers7(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaVers.get(new Integer(6 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaVers.get(new Integer(6 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaVers8(boolean ricalcoloQuantitaVers){
	iRicalcoloQuantitaVers.put(new Integer((7 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaVers);
  }

  public boolean isRicalcoloQuantitaVers8(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaVers.get(new Integer(7 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaVers.get(new Integer(7 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaVers9(boolean ricalcoloQuantitaVers){
	iRicalcoloQuantitaVers.put(new Integer((8 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaVers);
  }

  public boolean isRicalcoloQuantitaVers9(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaVers.get(new Integer(8 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaVers.get(new Integer(8 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaVers10(boolean ricalcoloQuantitaVers){
	iRicalcoloQuantitaVers.put(new Integer((9 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaVers);
  }

  public boolean isRicalcoloQuantitaVers10(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaVers.get(new Integer(9 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaVers.get(new Integer(9 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaVers11(boolean ricalcoloQuantitaVers){
	iRicalcoloQuantitaVers.put(new Integer((10 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaVers);
  }

  public boolean isRicalcoloQuantitaVers11(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaVers.get(new Integer(10 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaVers.get(new Integer(10 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaVers12(boolean ricalcoloQuantitaVers){
	iRicalcoloQuantitaVers.put(new Integer((11 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaVers);
  }

  public boolean isRicalcoloQuantitaVers12(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaVers.get(new Integer(11 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaVers.get(new Integer(11 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaVers13(boolean ricalcoloQuantitaVers){
	iRicalcoloQuantitaVers.put(new Integer((12 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaVers);
  }

  public boolean isRicalcoloQuantitaVers13(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaVers.get(new Integer(12 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaVers.get(new Integer(12 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaVers14(boolean ricalcoloQuantitaVers){
	iRicalcoloQuantitaVers.put(new Integer((13 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaVers);
  }

  public boolean isRicalcoloQuantitaVers14(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaVers.get(new Integer(13 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaVers.get(new Integer(13 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaVers15(boolean ricalcoloQuantitaVers){
	iRicalcoloQuantitaVers.put(new Integer((14 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaVers);
  }

  public boolean isRicalcoloQuantitaVers15(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaVers.get(new Integer(14 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaVers.get(new Integer(14 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaVers16(boolean ricalcoloQuantitaVers){
	iRicalcoloQuantitaVers.put(new Integer((15 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaVers);
  }

  public boolean isRicalcoloQuantitaVers16(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaVers.get(new Integer(15 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaVers.get(new Integer(15 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaVers17(boolean ricalcoloQuantitaVers){
	iRicalcoloQuantitaVers.put(new Integer((16 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaVers);
  }

  public boolean isRicalcoloQuantitaVers17(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaVers.get(new Integer(16 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaVers.get(new Integer(16 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaVers18(boolean ricalcoloQuantitaVers){
	iRicalcoloQuantitaVers.put(new Integer((17 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaVers);
  }

  public boolean isRicalcoloQuantitaVers18(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaVers.get(new Integer(17 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaVers.get(new Integer(17 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaVers19(boolean ricalcoloQuantitaVers){
	iRicalcoloQuantitaVers.put(new Integer((18 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaVers);
  }

  public boolean isRicalcoloQuantitaVers19(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaVers.get(new Integer(18 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaVers.get(new Integer(18 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }
  
  public void setRicalcoloQuantitaVers20(boolean ricalcoloQuantitaVers){
	iRicalcoloQuantitaVers.put(new Integer((19 + (iCurrentNumPag - 1) * 20)), ricalcoloQuantitaVers);
  }

  public boolean isRicalcoloQuantitaVers20(){
	boolean ricalcoloQta = true;
	if(iRicalcoloQuantitaVers.get(new Integer(19 + (iCurrentNumPag - 1) * 20)) != null) {
	  ricalcoloQta = (Boolean) iRicalcoloQuantitaVers.get(new Integer(19 + (iCurrentNumPag - 1) * 20));
	}
	return ricalcoloQta;
  }  
  //Fix 39680 -- Fine
  
  //Fix 42942 -- Inizio
  public Vector checkMateriali() {
	Vector errors = new Vector();
	List materiali = new ArrayList();
    for (int i = 0; i < this.getLottiMateriale().size(); i++) {
      Lotto lotto = (Lotto) this.getLottiMateriale().get(new Integer(i));
	  if (lotto != null && lotto.getCodiceLotto() != null) {
		if(lotto.getArticolo() != null && lotto.getArticolo().getArticoloDatiMagaz().isLottoUnitario()) {
		  BigDecimal qtaPrlPrm = (BigDecimal) getQtaPrlUmPrm().get(new Integer(i));
          if(qtaPrlPrm != null && qtaPrlPrm.compareTo(new BigDecimal(1)) > 0) {
        	errors.add(new ErrorMessage("THIP40T901", new String[] {lotto.getCodiceArticolo(), lotto.getCodiceLotto()}));
          }
          else {
        	if(qtaPrlPrm.compareTo(new BigDecimal(0)) > 0) {
        	  if(!materiali.contains(lotto.getKey())) {
        		  materiali.add(lotto.getKey());  
        	  }
        	  else {
        	    errors.add(new ErrorMessage("THIP40T902", new String[] {lotto.getCodiceArticolo(), lotto.getCodiceLotto()}));
        	  }
        	}
          }
		}
	  }
	}
	return errors;
  }
  //Fix 42942 -- Fine

}
